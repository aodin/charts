{
  "version": 3,
  "sources": ["exchange_rates.js", "../bounds.js", "../options.js", "../chart.js", "../throttle.js", "../line.js", "../colors.js"],
  "sourcesContent": ["/*\nExample exchange rate chart that extends a line chart\n*/\nimport { Line } from \"../line\";\nimport { discreteColorMap } from \"../colors\"\n\nexport class ExchangeRates extends Line {\n  parse(data) {\n    // Parse data object, determine:\n    // * x, y, z values as desired types\n    // * items lookup by any property\n    // * color mapping (discrete / scale)\n    // Is defined lookup\n    // grouping? for tooltips?\n\n    // TODO This data parse is specific to line series data\n    this.X = d3.map(data.values, (d) => d3.isoParse(d[0]));\n    this.Y = d3.map(data.values, (d) => d[2]);\n    this.Z = d3.map(data.values, (d) => d[1]);\n\n    this.z = data.categories;\n\n    // Defined?\n    // TODO This doesn't work for missing values\n    const defined = (d, i) => !isNaN(this.X[i]) && !isNaN(this.Y[i]);\n    this.D = d3.map(data.values, defined);\n\n    // grouping\n    this.I = d3.range(this.X.length);\n    this.grouping = d3.group(this.I, (i) => this.Z[i]); // {name: [indexes...]}\n\n    // Colors\n    // TODO discrete v continuous?\n    this.setColors(data);\n  }\n\n  setColors(data) {\n    const abbrevs = d3.map(data.categories, (d) => d.abbrev);\n    const colors = discreteColorMap(abbrevs, d3.interpolateRainbow);\n    this.colors = d3.scaleOrdinal().domain(abbrevs).range(colors);\n  }\n}\n", "export function getBounds(\n  elem,\n  { ratio = 0.2, maxWidth = 1600, minWidth = 400, minHeight = 300 } = {},\n) {\n  const plot = document.querySelector(elem);\n  let width = d3.min([plot.offsetWidth, maxWidth]);\n  width = d3.max([plot.offsetWidth, minWidth]);\n  let height = d3.max([parseInt(ratio * width), minHeight]);\n  return [width, height];\n}\n", "export class Options {\n  constructor(options = {}) {\n    this.ANIMATION_DURATION_MS = 500;\n    // TODO Allow either number of x-ticks OR minimum x tick spacing\n    this.X_TICK_SIZE = 4;\n    this.X_TICK_GUTTER = 3;\n    this.Y_TICK_SIZE = 0;\n    this.Y_TICK_GUTTER = 5; // Space between tick label and grid\n    this.BAND_PADDING = 0.2; // As a percentage of the band\n    this.VOLUME_OPACITY = 0.6;\n    this.OHLC_COLORS = [\"#1ebc8c\", \"#b2b2b2\", \"#f34d27\"]; // [up, no change, down]\n    this.FONT_SIZE = \"13px\";\n\n    // Line charts\n    this.STROKE_WIDTH = 1.5;\n    this.HIGHLIGHT_STROKE_WIDTH = 2.0;\n    this.UNHIGHLIGHTED_OPACITY = 0.3;\n    this.DOT_RADIUS = 3.0;\n\n    // TODO POINTER MOVE FPS\n\n    // Allow user to override any of the above defaults\n    Object.assign(this, options);\n  }\n}\n\n// TODO Per chart options?\n", "import { Options } from \"./options\";\n\nexport class Chart {\n  constructor(data, options = {}) {\n    // TODO Or should Options also be a parent class of Chart?\n    this.options = new Options(options);\n    this.parse(data);\n  }\n\n  parse(data) {\n    // Parse data object, determine:\n    // * x, y, z values as desired types\n    // * items lookup by any property\n    // * color mapping (discrete / scale)\n    // Is defined lookup\n    // grouping? for tooltips?\n\n    // TODO This data parse is specific to line series data\n    this.X = this.parseX(data);\n    this.Y = this.parseY(data);\n    this.Z = this.parseZ(data);\n\n    // TODO Get distinct z items from the list of Z values or the data if defined\n    this.z = data.z;\n\n    // Defined?\n    // TODO This doesn't work for missing values\n    const defined = (d, i) => !isNaN(this.X[i]) && !isNaN(this.Y[i]);\n    this.D = d3.map(data.values, defined);\n\n    // grouping\n    this.I = d3.range(this.X.length);\n    this.grouping = d3.group(this.I, (i) => this.Z[i]); // {name: [indexes...]}\n\n    // Colors\n    // TODO discrete v continuous?\n    this.setColors(data);\n  }\n\n  parseX(data) {\n    return d3.map(data.values, (d) => d3.isoParse(d[0]));\n  }\n\n  parseY(data) {\n    return d3.map(data.values, (d) => d[1]);\n  }\n\n  parseZ(data) {\n    return d3.map(data.values, (d) => d[2]);\n  }\n\n  getDomainX() {\n    return d3.extent(this.X);\n  }\n\n  getRangeX(dimensions, margin) {\n    return [margin.left, dimensions.width - margin.right];\n  }\n\n  getDomainY() {\n    return d3.extent(this.Y);\n  }\n\n  getRangeY(dimensions, margin) {\n    return [dimensions.height - margin.bottom, margin.top];\n  }\n\n  setColors(data) {\n    const z = data.z.reduce((obj, d) => {\n      obj[d.name] = d.color;\n      return obj;\n    }, {});\n    // TODO Or just use the z object?\n    this.colors = d3\n      .scaleOrdinal()\n      .domain(Object.keys(z))\n      .range(Object.values(z));\n  }\n\n  getColor(z) {\n    return this.colors(z);\n  }\n\n  createSVG(elem, dimensions) {\n    // Clear any existing chart\n    // document.querySelector(this.elem).innerHTML = '';\n    d3.select(elem).selectAll(\"svg\").remove();\n\n    // Create a new chart\n    this.svg = d3\n      .select(elem)\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, dimensions.width, dimensions.height])\n      .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n      .style(\"-webkit-tap-highlight-color\", \"transparent\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .style(\"overflow\", \"visible\");\n  }\n}\n", "export function throttle(fn, timeout) {\n  var free = true;\n  return function () {\n    if (free) {\n      fn.apply(this, arguments);\n      free = false;\n      setTimeout(() => {\n        free = true;\n      }, timeout);\n    }\n  };\n}\n", "/*\nLine chart\n\nShow multiple items in a line chart.\n* X-axis supports any time-scale, e.g. Daily, Monthly, Quarterly, Yearly\n* Y-axis supports a value with a formatter, e.g. Units, Percent, Money\n* Customizable color scale\n* Works with light and dark mode\n* Ability to clear and refresh self without losing cached data\n\nOptions to:\n* Have a tooltip displayed on the chart\n* Highlight the selected line, lower the opacity of unselected lines\n* Legend items, with optional show/hide controls\n\nSettings:\n* line width, highlighted line width\n\nData format: {}\nx: range or items\ny: range or items\nz: [{name, slug, etc}]\nvalues: [x, y, z]\nformatters?\n\nHave functions to automatically detect properties, but always allow them\nto be overridden by settings\n*/\nimport { getBounds } from \"./bounds\";\nimport { Chart } from \"./chart\";\nimport { throttle } from \"./throttle\";\n\nfunction isObject(v) {\n  return v !== null && typeof v === 'object' && !Array.isArray(v);\n}\n\nexport class Line extends Chart {\n  render(elem) {\n    // Determine the size of the DOM element\n    const [width, height] = getBounds(elem, { ratio: 0.35 });\n    const dimensions = { width, height };\n\n    // TODO How to adjust margin based on labels?\n    const margin = {\n      top: 15,\n      right: 15,\n      bottom: 25,\n      left: 45,\n    };\n\n    this.createSVG(elem, dimensions);\n\n    // TODO pointer events\n    // .on(\"pointerenter pointermove\", throttle(pointermoved, 40)) // ~24fps\n    // .on(\"pointerleave\", pointerleft)\n    // .on(\"touchstart\", (event) => event.preventDefault());\n\n    // X-axis\n    this.xScale = d3\n      .scaleUtc()\n      .domain(this.getDomainX())\n      .range(this.getRangeX(dimensions, margin));\n\n    let xAxis = d3\n      .axisBottom(this.xScale)\n      // .tickValues(q1s)\n      .tickSizeInner(4); // TODO setting for inner tick size\n    // .tickFormat(Q);  // TODO setting for tick format\n\n    // TODO Setting for tick padding?\n    this.svg\n      .append(\"g\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .attr(\n        \"transform\",\n        `translate(0,${dimensions.height - margin.bottom + 2})`,\n      )\n      .call(xAxis)\n      .call((g) => g.select(\".domain\").remove());\n\n    // Y-axis\n    this.yScale = d3\n      .scaleLinear()\n      .domain(this.getDomainY())\n      .range(this.getRangeY(dimensions, margin));\n\n    let yAxis = d3\n      .axisLeft(this.yScale)\n      // .tickFormat(percentAxisFormat)\n      .tickSize(0)\n      .ticks(8); // TODO Number of ticks\n\n    // Grid lines\n    this.svg\n      .append(\"g\")\n      // TODO grid gutter setting\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .attr(\"transform\", `translate(${margin.left - 10},0)`)\n      .call(yAxis)\n      .call((g) => g.select(\".domain\").remove())\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .clone()\n          .attr(\"stroke\", \"#888\") // Works for black or white background at 40% opacity\n          .attr(\"stroke-opacity\", 0.4)\n          .attr(\"x2\", dimensions.width - margin.left - margin.right),\n      );\n\n    // line\n    const line = d3\n      .line()\n      .defined((i) => this.D[i])\n      .x((i) => this.xScale(this.X[i]))\n      .y((i) => this.yScale(this.Y[i]));\n\n    // Plot the line\n    this.path = this.svg\n      .append(\"g\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke-width\", 1.5) // TODO Setting for default with\n      .selectAll(\"path\")\n      .data(this.grouping)\n      .join(\"path\")\n      .attr(\"d\", ([, I]) => line(I))\n      .attr(\"stroke\", ([d]) => this.getColor(d));\n\n      // Dot - shows nearest point during pointer events\n      this.dot = this.svg.append(\"g\").style(\"display\", \"none\");\n      this.circle = this.dot.append(\"circle\").attr(\"r\", this.options.DOT_RADIUS);\n  }\n\n  clear() {\n    // Clear all drawn elements, must have an element set\n    this.svg.selectAll(\"*\").remove();\n  }\n\n  getLegend() {\n    // Return the z items along with their colors\n    return d3.map(this.z, d => {\n      if (isObject(d)) {\n        return Object.assign({color: this.getColor(d.name)}, d); \n      }\n      return {name: d, color: this.getColor(d)};\n    });\n  }\n\n  hide(z) {\n\n  }\n\n  placeDot(i) {\n    // Place a dot at the given value\n    const x = this.xScale(this.X[i]);\n    const y = this.yScale(this.Y[i]);\n    const z = this.Z[i];\n    this.dot.style(\"display\", null).attr(\"transform\", `translate(${x},${y})`);\n    this.circle.attr(\"fill\", this.getColor(z));\n  }\n\n  hideDot() {\n    this.dot.style(\"display\", \"none\");\n  }\n  \n  noHighlight() {\n    this.path.attr(\"opacity\", 1.0).attr(\"stroke-width\", this.options.STROKE_WIDTH);\n  }\n\n  highlight(z) {\n    // Hide paths that aren't the currently selected path\n    this.path.attr(\"opacity\", ([elem]) => (elem === z ? 1.0 : this.options.UNHIGHLIGHTED_OPACITY));\n    this.path.attr(\"stroke-width\", ([elem]) => (elem === z ? this.options.HIGHLIGHT_STROKE_WIDTH : this.options.STROKE_WIDTH));\n  }\n\n  enableHover(move, leave) {\n    let prevIndex = null;\n\n    // Determine the closest point to the cursor\n    const pointermove = (evt) => {\n      const [xm, ym] = d3.pointer(evt);\n      const index = d3.least(this.I, (i) =>\n        Math.hypot(this.xScale(this.X[i]) - xm, this.yScale(this.Y[i]) - ym)\n      );\n\n      // Do not place a tooltip if no point was found\n      if (typeof index === \"undefined\") return;\n\n      // Only trigger the callback when the index changes\n      if (prevIndex && prevIndex == index) {\n        return;\n      }\n\n      this.placeDot(index);\n\n      const x = this.X[index];\n      const y = this.Y[index]\n\n      let data = {\n        x: x,\n        y: y,\n        z: this.Z[index],\n        dx: this.xScale(x),\n        dy: this.yScale(y),\n      };\n\n      if (move) {\n        move.call(this, data);\n      }\n    }\n\n    const pointerleave = (evt) => {\n      this.hideDot();\n      if (leave) {\n        leave.call(this);\n      }\n    }\n\n    this.svg\n      .on(\"pointermove\", throttle(pointermove, 20)) // ~48fps\n      .on(\"pointerleave\", pointerleave)\n  }\n\n  // TODO pre-calculate?\n  // const delaunay = d3.Delaunay.from(points);\n}\n\n/*\nAnimation\n\npath\n  .attr(\"stroke-dasharray\", (d, i) => `${lengths[i]} ${lengths[i]}`)\n  .attr(\"stroke-dashoffset\", (d, i) => lengths[i])\n  .attr(\"stroke\", ([d], i) => this.colors[i])\n  .transition()\n  .duration(this.options.ANIMATION_DURATION_MS)\n  .attr(\"stroke-dashoffset\", 0);\n\n*/\n", "export function discreteColorMap(items, colorMap, start = 0.0, end = 1.0) {\n  const range = end - start;\n  const step = items.length > 1 ? range / items.length : range / 2;\n  return d3.map(items, (d, i) => colorMap(end - step * i - step / 2));\n}\n"],
  "mappings": "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",
  "names": ["exchange_rates_exports", "__export", "ExchangeRates", "getBounds", "elem", "ratio", "maxWidth", "minWidth", "minHeight", "plot", "width", "height", "Options", "options", "Chart", "data", "options", "Options", "defined", "d", "i", "dimensions", "margin", "z", "obj", "elem", "throttle", "fn", "timeout", "free", "isObject", "v", "Line", "Chart", "elem", "width", "height", "getBounds", "dimensions", "margin", "xAxis", "g", "yAxis", "line", "i", "I", "d", "z", "x", "y", "move", "leave", "prevIndex", "pointermove", "evt", "xm", "ym", "index", "data", "pointerleave", "throttle", "discreteColorMap", "items", "colorMap", "start", "end", "range", "step", "d", "i", "ExchangeRates", "Line", "data", "d", "defined", "i", "abbrevs", "colors", "discreteColorMap"]
}
