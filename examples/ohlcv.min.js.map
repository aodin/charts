{
  "version": 3,
  "sources": ["../ohlcv.js", "../bounds.js", "../chart.js", "../timeseries.js"],
  "sourcesContent": ["/*\nOHLCV chart\n*/\nimport { getBounds } from \"./bounds\";\nimport { Chart } from \"./chart\";\nimport { makeDateFormatter } from \"./timeseries\";\n\nconst ANIMATION_DURATION_MS = 500;\nconst X_TICK_SIZE = 4;\nconst X_TICK_GUTTER = 3;\nconst Y_TICK_SIZE = 0;\nconst Y_TICK_GUTTER = 5;  // Space between tick label and grid\nconst BAND_PADDING = 0.2;  // As a percentage of the band\n\nconst COLORS = [\"#1ebc8c\", \"#b2b2b2\", \"#f34d27\"]; // [up, no change, down]\n\nexport function volumeFormatter(value) {\n  if (value <= 0) {\n    return ''; // Do not show a tick for zero volume\n  }\n  if (value >= 1e9) {\n    return `${value / 1e9}B`;\n  }\n  return `${value / 1e6}M`;\n}\n\nexport class OHLCV extends Chart {\n  parse(data) {\n    this.X = d3.map(data, (d) => d3.isoParse(d[0]));\n    this.Yo = d3.map(data, (d) => d[1]);\n    this.Yh = d3.map(data, (d) => d[2]);\n    this.Yl = d3.map(data, (d) => d[3]);\n    this.Yc = d3.map(data, (d) => d[4]);\n    this.Yv = d3.map(data, (d) => d[5]);\n    this.I = d3.range(this.X.length);\n  }\n\n  getDomainX() {\n    return d3.extent(this.X);\n  }\n\n  getDomainY() {\n    // TODO How to pad?\n    // TODO How to set multiple domains? Data object\n    this.minPrice = d3.min(this.Yl); // Sets the initial animation y-coord\n    const maxPrice = d3.max(this.Yh);\n    this.yDomain = [\n      this.minPrice,\n      maxPrice + (maxPrice - this.minPrice) * 0.05,\n    ];\n    this.yDomainVolume = [0, d3.max(this.Yv)];\n    return this.yDomain;\n  }\n\n  getColor(index) {\n    return COLORS[1 + Math.sign(this.Yo[index] - this.Yc[index])];\n  }\n\n  render(elem) {\n    // Determine the size of the DOM element\n    const [width, height] = getBounds(elem, { ratio: 0.35 });\n    const dimensions = { width, height };\n\n    // TODO How to adjust margin based on labels?\n    const margin = {\n      top: 15,\n      right: 25,\n      bottom: 25,\n      left: 40,\n    };\n\n    // TODO How to generalize different chart sections? sub-axes?\n    const chartHeight = height - margin.top - margin.bottom;\n    this.chartHeight = chartHeight;\n    const pricePortion = 0.9;\n    const priceHeight = chartHeight * pricePortion;\n\n    const yRange = [margin.top + priceHeight, margin.top];\n    const yRangeVolume = [margin.top + chartHeight, margin.top + priceHeight];\n\n    const yFormat = \",f\";\n    const yLabel = \"\";\n\n    // NOTE: If dates are missing, we can't use the timeWeek ranges without\n    // checking if the tick has values\n    // TODO Number of x-ticks, number of y-ticks - function of width?\n    let interval = parseInt(this.X.length / 10);\n    if (interval < 1) {\n      interval = 1;\n    }\n\n    let xTicks = d3.filter(this.X, (d, i) => i % interval === 0);\n\n    // Construct scales and axes\n    // NOTE: scaleBand takes all 'categorical' x-axis items - not just extent\n    // TODO Play further with padding and align\n    const xScale = d3.scaleBand(this.X, this.getRangeX(dimensions, margin)).padding(BAND_PADDING).align(0.1);\n    this.xScale = xScale;\n    const yScale = d3.scaleLinear(this.getDomainY(), yRange);\n    const yScaleVolume = d3.scaleLinear(this.yDomainVolume, yRangeVolume);\n    \n    // NOTE The date formatter needs to be created because it uses a\n    // closure to determine a new year\n    // TODO A method to provide custom formatting\n    const dateFormatter = makeDateFormatter();\n    const xAxis = d3\n    .axisBottom(xScale)\n    .tickFormat(dateFormatter)\n    .tickValues(xTicks)\n    .tickSize(X_TICK_SIZE);\n    \n    // The band width will be used for correctly positioning the tooltip\n    this.bandWidth = xScale.step();\n\n    // TODO Set number of ticks\n    const yAxis = d3\n      .axisLeft(yScale)\n      .ticks(priceHeight / 40, yFormat)\n      .tickSize(Y_TICK_SIZE);\n\n    const yAxisVolume = d3\n      .axisRight(yScaleVolume)\n      .ticks(2) // Never show more than 1 non-zero tick for the volume\n      .tickFormat(volumeFormatter)\n      .tickSize(3);\n\n    // Create SVG\n    this.createSVG(elem, dimensions);\n\n    const bandPadding = (this.bandWidth * BAND_PADDING) / 2;\n    this.svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${bandPadding},${height - margin.bottom + X_TICK_GUTTER})`)\n      .call(xAxis)\n      .call((g) => g.select(\".domain\").remove());\n\n    // Price y-axis\n    this.svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left - Y_TICK_GUTTER},0)`)\n      .call(yAxis)\n      .call((g) => g.select(\".domain\").remove())\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .clone()\n          .attr(\"stroke\", \"#bbb\")  // Works for black or white background at 50% opacity\n          .attr(\"stroke-opacity\", 0.5)\n          .attr(\"x1\", Y_TICK_GUTTER)\n          .attr(\"x2\", width + Y_TICK_GUTTER - margin.left - margin.right),\n      )\n      .call((g) =>\n        g\n          .append(\"text\")\n          .attr(\"x\", -margin.left)\n          .attr(\"y\", 10)\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"text-anchor\", \"start\")\n          .text(yLabel),\n      );\n\n    // Volume y-axis\n    this.svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width - margin.right},0)`)\n      .call(yAxisVolume)\n      .call((g) => g.select(\".domain\").remove())\n      .call((g) =>\n        g\n          .append(\"text\")\n          .attr(\"x\", -margin.left)\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"text-anchor\", \"start\")\n          .text(yLabel),\n      );\n\n    // Plot OHLC candle sticks\n    const g = this.svg\n      .append(\"g\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-linecap\", \"butt\") // NOTE: using 'square' distorts size\n      .selectAll(\"g\")\n      .data(this.I)\n      .join(\"g\")\n      .attr(\n        \"transform\",\n        (i) => `translate(${xScale(this.X[i]) + (this.bandWidth / 2.0)},0)`,\n      );\n\n    g.append(\"line\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"opacity\", 0.8)\n      .attr(\"y1\", yScale(this.minPrice))\n      .attr(\"y2\", yScale(this.minPrice))\n      .transition()\n      .duration(ANIMATION_DURATION_MS)\n      .attr(\"y1\", (i) => yScale(this.Yl[i]))\n      .attr(\"y2\", (i) => yScale(this.Yh[i]));\n\n    g.append(\"line\")\n      .attr(\"stroke-width\", xScale.bandwidth())\n      .attr(\"stroke\", (i) => this.getColor(i))\n      .attr(\"y1\", yScale(this.minPrice))\n      .attr(\"y2\", yScale(this.minPrice))\n      .transition()\n      .duration(ANIMATION_DURATION_MS)\n      .attr(\"y1\", (i) => yScale(this.Yo[i]))\n      .attr(\"y2\", (i) => yScale(this.Yc[i]));\n\n    // Plot volume\n    const vol = this.svg\n      .append(\"g\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-linecap\", \"butt\") // NOTE: using 'square' distorts length\n      .selectAll(\"g\")\n      .data(this.I)\n      .join(\"g\")\n      .attr(\n        \"transform\",\n        (i) => `translate(${xScale(this.X[i]) + (this.bandWidth / 2.0)},0)`,\n      );\n\n    vol\n      .append(\"line\")\n      .attr(\"y1\", yScaleVolume(0))\n      .attr(\"y2\", yScaleVolume(0))\n      .attr(\"stroke-width\", xScale.bandwidth())\n      .attr(\"stroke\", (i) => this.getColor(i))\n      .style(\"opacity\", 0.5)\n      .transition()\n      .duration(ANIMATION_DURATION_MS)\n      .attr(\"y2\", (i) => yScaleVolume(this.Yv[i]));\n  }\n}\n", "export function getBounds(\n  elem,\n  { ratio = 0.2, maxWidth = 1600, minWidth = 400, minHeight = 300 } = {},\n) {\n  const plot = document.querySelector(elem);\n  let width = d3.min([plot.offsetWidth, maxWidth]);\n  width = d3.max([plot.offsetWidth, minWidth]);\n  let height = d3.max([parseInt(ratio * width), minHeight]);\n  return [width, height];\n}\n", "export class Chart {\n  constructor(data, settings = {}) {\n    // Parse data object, determine:\n    // * x, y, z values as desired types\n    // * items lookup by any property\n    // * color mapping (discrete / scale)\n    // Is defined lookup\n    // grouping? for tooltips?\n    this.parse(data);\n  }\n\n  parse(data) {\n    // TODO This data parse is specific to line series data\n    this.X = this.parseX(data);\n    this.Y = this.parseY(data);\n    this.Z = this.parseZ(data);\n\n    // Defined?\n    // TODO This doesn't work for missing values\n    const defined = (d, i) => !isNaN(this.X[i]) && !isNaN(this.Y[i]);\n    this.D = d3.map(data.values, defined);\n\n    // grouping\n    this.I = d3.range(this.X.length);\n    this.grouping = d3.group(this.I, (i) => this.Z[i]); // {name: [indexes...]}\n\n    // Colors\n    // TODO discrete v continuous?\n    this.setColors(data);\n  }\n\n  parseX(data) {\n    return d3.map(data.values, (d) => d3.isoParse(d[0]));\n  }\n\n  parseY(data) {\n    return d3.map(data.values, (d) => d[1]);\n  }\n\n  parseZ(data) {\n    return d3.map(data.values, (d) => d[2]);\n  }\n\n  getDomainX() {\n    return d3.extent(this.X);\n  }\n\n  getRangeX(dimensions, margin) {\n    return [margin.left, dimensions.width - margin.right];\n  }\n\n  getDomainY() {\n    return d3.extent(this.Y);\n  }\n\n  getRangeY(dimensions, margin) {\n    return [dimensions.height - margin.bottom, margin.top];\n  }\n\n  setColors(data) {\n    const z = data.z.reduce((obj, d) => {\n      obj[d.name] = d.color;\n      return obj;\n    }, {});\n    // TODO Or just use the z object?\n    this.colors = d3\n      .scaleOrdinal()\n      .domain(Object.keys(z))\n      .range(Object.values(z));\n  }\n\n  getColor(z) {\n    return this.colors(z);\n  }\n\n  createSVG(elem, dimensions) {\n    // Clear any existing chart\n    // document.querySelector(this.elem).innerHTML = '';\n    d3.select(elem).selectAll(\"svg\").remove();\n\n    // Create a new chart\n    this.svg = d3\n      .select(elem)\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, dimensions.width, dimensions.height])\n      .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n      .style(\"-webkit-tap-highlight-color\", \"transparent\")\n      .style(\"font-size\", \"13px\") // TODO Set font size\n      .style(\"overflow\", \"visible\");\n  }\n}\n", "export const month = d3.utcFormat('%b');\nexport const monthDay = d3.utcFormat('%b %-d');\nexport const monthYear = d3.utcFormat('%b %Y');\nexport const monthDayYear = d3.utcFormat('%b %-d, %Y');\nexport const fullMonthDayYear = d3.utcFormat('%B %-d, %Y');\n\nexport function makeDateFormatter() {\n  let lastYear = null;\n  return function(d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthDayYear(d);\n    }\n    return monthDay(d);\n  };\n}\n\nexport function makeMonthlyDateFormatter() {\n  let lastYear = null;\n  return function(d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthYear(d);\n    }\n    return month(d);\n  };\n}\n\n// Depending on x-axis size, either show Q1s or all quarters as x-axis ticks\n// let qs = new d3.InternSet(this.X);\n// if (qs.size > 15) {\n//   const [start, end] = d3.extent(this.X);\n//   const years = d3.range(start.getUTCFullYear(), end.getUTCFullYear() + 1);\n//   qs = d3.map(years, (year) => new Date(year, 2, 31));\n// }\n"],
  "mappings": "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",
  "names": ["ohlcv_exports", "__export", "OHLCV", "volumeFormatter", "getBounds", "elem", "ratio", "maxWidth", "minWidth", "minHeight", "plot", "width", "height", "Chart", "data", "settings", "defined", "d", "i", "dimensions", "margin", "z", "obj", "elem", "month", "monthDay", "monthYear", "monthDayYear", "fullMonthDayYear", "makeDateFormatter", "lastYear", "d", "year", "ANIMATION_DURATION_MS", "X_TICK_SIZE", "X_TICK_GUTTER", "Y_TICK_SIZE", "Y_TICK_GUTTER", "BAND_PADDING", "COLORS", "volumeFormatter", "value", "OHLCV", "Chart", "data", "d", "maxPrice", "index", "elem", "width", "height", "getBounds", "dimensions", "margin", "chartHeight", "priceHeight", "yRange", "yRangeVolume", "yFormat", "yLabel", "interval", "xTicks", "i", "xScale", "yScale", "yScaleVolume", "dateFormatter", "makeDateFormatter", "xAxis", "yAxis", "yAxisVolume", "bandPadding", "g"]
}
