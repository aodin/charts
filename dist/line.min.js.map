{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../line.js", "../chart.js", "../options.js", "../layout.js", "../throttle.js"],
  "sourcesContent": ["module.exports = d3", "/*\nLine chart\n*/\nimport * as d3 from \"d3\";\n\nimport { Chart } from \"./chart\";\nimport { throttle } from \"./throttle\";\n\nexport class Line extends Chart {\n  render(elem) {\n    // If there is no data, do not render\n    if (!this.X.length) return;\n\n    // Determine the size of the DOM element\n    const [width, height] = this.getDimensions(elem);\n    const dimensions = { width, height };\n    const margin = this.getMargin(width, height);\n\n    this.createSVG(elem, dimensions);\n\n    // X-axis\n    this.xScale = d3\n      .scaleUtc()\n      .domain(this.getDomainX())\n      .range(this.getRangeX(dimensions, margin));\n\n    let xAxis = d3\n      .axisBottom(this.xScale)\n      .tickValues(this.getTickValuesX())\n      .tickFormat(this.tickFormatX)\n      .tickSizeInner(this.options.X_TICK_SIZE);\n\n    this.svg\n      .append(\"g\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .attr(\n        \"transform\",\n        `translate(0,${dimensions.height - margin.bottom + this.options.Y_TICK_GUTTER})`,\n      )\n      .call(xAxis)\n      .call((g) => g.select(\".domain\").remove());\n\n    // Y-axis\n    this.yScale = d3\n      .scaleLinear()\n      .domain(this.getDomainY())\n      .range(this.getRangeY(dimensions, margin));\n\n    let yAxis = d3\n      .axisLeft(this.yScale)\n      .tickValues(this.getTickValuesY())\n      .tickFormat(this.tickFormatY)\n      .tickSize(0)\n      .ticks(8); // TODO Number of ticks\n\n    // Grid lines\n    this.svg\n      .append(\"g\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .attr(\n        \"transform\",\n        `translate(${margin.left - this.options.X_TICK_GUTTER},0)`,\n      )\n      .call(yAxis)\n      .call((g) => g.select(\".domain\").remove())\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .clone()\n          .attr(\"stroke\", \"#888\") // Works for black or white background at 40% opacity\n          .attr(\"stroke-opacity\", 0.4)\n          .attr(\"transform\", `translate(${this.options.X_TICK_GUTTER},0)`)\n          .attr(\"x2\", dimensions.width - margin.left - margin.right),\n      );\n\n    // Plot the line\n    const line = d3\n      .line()\n      .defined((i) => this.D[i])\n      .x((i) => this.xScale(this.X[i]))\n      .y((i) => this.yScale(this.Y[i]));\n\n    this.path = this.svg\n      .append(\"g\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke-width\", this.options.STROKE_WIDTH)\n      .selectAll(\"path\")\n      .data(this.grouping)\n      .join(\"path\")\n      .attr(\"d\", ([, I]) => line(I))\n      .attr(\"stroke\", ([d]) => this.getColor(d));\n\n    // Dot - shows nearest point during pointer events\n    this.dot = this.svg.append(\"g\").style(\"display\", \"none\");\n    this.circle = this.dot.append(\"circle\").attr(\"r\", this.options.DOT_RADIUS);\n  }\n\n  getLegend() {\n    // Return the z items along with their colors\n    return d3.map(this.items, (d) => {\n      return Object.assign({ color: this.getColor(d.key) }, d);\n    });\n  }\n\n  placeDot(i) {\n    // Place a dot at the given index\n    const x = this.xScale(this.X[i]);\n    const y = this.yScale(this.Y[i]);\n    const z = this.Z[i];\n    this.dot.style(\"display\", null).attr(\"transform\", `translate(${x},${y})`);\n    this.circle.attr(\"fill\", this.getColor(z));\n  }\n\n  hideDot() {\n    this.dot.style(\"display\", \"none\");\n  }\n\n  noHighlight() {\n    this.path\n      .attr(\"opacity\", 1.0)\n      .attr(\"stroke-width\", this.options.STROKE_WIDTH);\n  }\n\n  highlight(z) {\n    // Hide paths that aren't the currently selected path\n    this.path\n      .attr(\"opacity\", ([elem]) =>\n        elem === z ? 1.0 : this.options.BACKGROUND_OPACITY,\n      )\n      .attr(\"stroke-width\", ([elem]) =>\n        elem === z\n          ? this.options.HIGHLIGHT_STROKE_WIDTH\n          : this.options.STROKE_WIDTH,\n      );\n  }\n\n  enableHover(move, leave) {\n    let prevIndex = null;\n\n    // Determine the closest point to the cursor\n    const pointermove = (evt) => {\n      const [xm, ym] = d3.pointer(evt);\n      const index = d3.least(this.I, (i) =>\n        Math.hypot(this.xScale(this.X[i]) - xm, this.yScale(this.Y[i]) - ym),\n      );\n\n      // Do not place a tooltip if no point was found\n      if (typeof index === \"undefined\") return;\n\n      // Only trigger the callback when the index changes\n      if (prevIndex && prevIndex == index) return;\n\n      this.placeDot(index);\n\n      const x = this.X[index];\n      const y = this.Y[index];\n      const z = this.Z[index];\n\n      let data = {\n        x: x,\n        y: y,\n        z: z,\n        dx: this.xScale(x),\n        dy: this.yScale(y),\n        fx: this.formatX(x),\n        fy: this.formatY(y),\n        fz: this.formatZ(z),\n      };\n\n      if (move) {\n        move.call(this, data);\n      }\n    };\n\n    const pointerleave = (evt) => {\n      this.hideDot();\n      if (leave) {\n        leave.call(this);\n      }\n    };\n\n    this.svg\n      .on(\"pointermove\", throttle(pointermove, this.options.eventLatency))\n      .on(\"pointerleave\", pointerleave)\n      .on(\"touchstart\", (evt) => {\n        pointermove(evt);\n        evt.preventDefault();\n      });\n  }\n}\n", "import * as d3 from \"d3\";\n\nimport { Options } from \"./options\";\nimport { getDimensions } from \"./layout\";\n\nexport class Chart {\n  // By default, tick format functions are null, which will use the default D3\n  // functions. These can be overridden by sub-classes\n  tickFormatX = null;\n  tickFormatY = null;\n\n  constructor(data, options = {}) {\n    this.options = new Options(options);\n    this.data = data; // Save the original data in case we want to recalculate\n    this.parse(data);\n  }\n\n  getMargin(width, height) {\n    return {\n      top: 15,\n      right: 15,\n      bottom: 25,\n      left: 45,\n    };\n  }\n\n  getTickValuesX() {\n    // D3.js will use the default tick values if null is used\n    return null;\n  }\n\n  getTickValuesY() {\n    // D3.js will use the default tick values if null is used\n    return null;\n  }\n\n  parse(data) {\n    // This data parse is specific to line series data\n    this.X = this.parseX(data);\n    this.Y = this.parseY(data);\n    this.Z = this.parseZ(data);\n\n    // Get distinct items from the set of Z values\n    this.items = new Set(this.Z);\n\n    // Is defined?\n    // TODO This doesn't work for missing values, only null or undefined\n    const defined = (d, i) => !isNaN(this.X[i]) && !isNaN(this.Y[i]);\n    this.D = d3.map(data, defined);\n\n    // Grouping\n    this.I = d3.range(this.X.length);\n    this.grouping = d3.group(this.I, (i) => this.Z[i]); // {name: [indexes...]}\n\n    // Colors\n    this.setColors(data);\n  }\n\n  formatX(value) {\n    // Function for formatting X values, called before sending to hover data callbacks\n    return value;\n  }\n\n  formatY(value) {\n    // Function for formatting Y values, called before sending to hover data callbacks\n    return value;\n  }\n\n  formatZ(key) {\n    // Function for formatting Z values, called before sending to hover data callbacks\n    return key;\n  }\n\n  parseX(data) {\n    return d3.map(data, (d) => d3.isoParse(d[0]));\n  }\n\n  parseY(data) {\n    return d3.map(data, (d) => d[1]);\n  }\n\n  parseZ(data) {\n    return d3.map(data, (d) => d[2]);\n  }\n\n  getDomainX() {\n    return d3.extent(this.X);\n  }\n\n  getRangeX(dimensions, margin) {\n    return [margin.left, dimensions.width - margin.right];\n  }\n\n  getDomainY() {\n    return d3.extent(this.Y);\n  }\n\n  getRangeY(dimensions, margin) {\n    return [dimensions.height - margin.bottom, margin.top];\n  }\n\n  setColors(data) {\n    this.colors = d3\n      .scaleOrdinal()\n      .domain(this.items)\n      .range(this.options.COLORS);\n  }\n\n  getColor(z) {\n    return this.colors(z);\n  }\n\n  getDimensions(elem) {\n    // Given the chart's DOM element, return the desired width and height for drawing\n    return getDimensions(elem, { ratio: 0.35 });\n  }\n\n  createSVG(elem, dimensions) {\n    // Clear any existing chart\n    d3.select(elem).selectAll(\"svg\").remove();\n\n    // Create a new chart\n    this.svg = d3\n      .select(elem)\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, dimensions.width, dimensions.height])\n      .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n      .style(\"-webkit-tap-highlight-color\", \"transparent\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .style(\"overflow\", \"visible\");\n  }\n\n  clear() {\n    // Clear all drawn elements, must have an element set\n    if (this.svg) this.svg.selectAll(\"*\").remove();\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport class Options {\n  constructor(options = {}) {\n    this.ANIMATION_DURATION_MS = 500;\n    // TODO Allow either number of x-ticks OR minimum x tick spacing\n    this.X_TICK_SIZE = 4;\n    this.X_TICK_GUTTER = 3;\n    this.Y_TICK_SIZE = 0;\n    this.Y_TICK_GUTTER = 5; // Space between tick label and grid\n    this.FONT_SIZE = \"13px\";\n    this.COLORS = d3.schemeCategory10;\n\n    // OHLC\n    this.BAND_PADDING = 0.2; // As a percentage of the band\n    this.VOLUME_OPACITY = 0.6;\n    this.OHLC_COLORS = [\"#1ebc8c\", \"#b2b2b2\", \"#f34d27\"]; // [up, no change, down]\n\n    // Line\n    this.STROKE_WIDTH = 1.5;\n    this.HIGHLIGHT_STROKE_WIDTH = 2.0;\n    this.BACKGROUND_OPACITY = 0.3; // When another line is highlighted\n    this.DOT_RADIUS = 3.0;\n\n    // Bar\n    this.BAR_STROKE_WIDTH = 0.0;\n\n    // TODO POINTER MOVE FPS\n    this.EVENT_FPS = 48;\n\n    // Allow user to override any of the above defaults\n    Object.assign(this, options);\n  }\n\n  get eventLatency() {\n    return parseInt(1000 / this.EVENT_FPS);\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport function getDimensions(\n  elem,\n  { ratio = 0.2, maxWidth = 1600, minWidth = 400, minHeight = 300 } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.min([chart.offsetWidth, maxWidth]);\n  width = d3.max([chart.offsetWidth, minWidth]);\n  let height = d3.max([parseInt(ratio * width), minHeight]);\n  return [width, height];\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Add some padding\n  return width + options.X_TICK_GUTTER + 5;\n}\n", "export function throttle(fn, timeout) {\n  var free = true;\n  return function () {\n    if (free) {\n      fn.apply(this, arguments);\n      free = false;\n      setTimeout(() => {\n        free = true;\n      }, timeout);\n    }\n  };\n}\n"],
  "mappings": "gwBAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAAAA,EAAO,QAAU,KCAjB,IAAAC,EAAA,GAAAC,EAAAD,EAAA,UAAAE,IAGA,IAAAC,EAAoB,OCHpB,IAAAC,EAAoB,OCApB,IAAAC,EAAoB,OAEPC,EAAN,KAAc,CACnB,YAAYC,EAAU,CAAC,EAAG,CACxB,KAAK,sBAAwB,IAE7B,KAAK,YAAc,EACnB,KAAK,cAAgB,EACrB,KAAK,YAAc,EACnB,KAAK,cAAgB,EACrB,KAAK,UAAY,OACjB,KAAK,OAAY,mBAGjB,KAAK,aAAe,GACpB,KAAK,eAAiB,GACtB,KAAK,YAAc,CAAC,UAAW,UAAW,SAAS,EAGnD,KAAK,aAAe,IACpB,KAAK,uBAAyB,EAC9B,KAAK,mBAAqB,GAC1B,KAAK,WAAa,EAGlB,KAAK,iBAAmB,EAGxB,KAAK,UAAY,GAGjB,OAAO,OAAO,KAAMA,CAAO,CAC7B,CAEA,IAAI,cAAe,CACjB,OAAO,SAAS,IAAO,KAAK,SAAS,CACvC,CACF,ECrCA,IAAAC,EAAoB,OAEb,SAASC,EACdC,EACA,CAAE,MAAAC,EAAQ,GAAK,SAAAC,EAAW,KAAM,SAAAC,EAAW,IAAK,UAAAC,EAAY,GAAI,EAAI,CAAC,EACrE,CACA,IAAMC,EAAQ,SAAS,cAAcL,CAAI,EACrCM,EAAW,MAAI,CAACD,EAAM,YAAaH,CAAQ,CAAC,EAChDI,EAAW,MAAI,CAACD,EAAM,YAAaF,CAAQ,CAAC,EAC5C,IAAII,EAAY,MAAI,CAAC,SAASN,EAAQK,CAAK,EAAGF,CAAS,CAAC,EACxD,MAAO,CAACE,EAAOC,CAAM,CACvB,CFNO,IAAMC,EAAN,KAAY,CAMjB,YAAYC,EAAMC,EAAU,CAAC,EAAG,CAHhCC,EAAA,mBAAc,MACdA,EAAA,mBAAc,MAGZ,KAAK,QAAU,IAAIC,EAAQF,CAAO,EAClC,KAAK,KAAOD,EACZ,KAAK,MAAMA,CAAI,CACjB,CAEA,UAAUI,EAAOC,EAAQ,CACvB,MAAO,CACL,IAAK,GACL,MAAO,GACP,OAAQ,GACR,KAAM,EACR,CACF,CAEA,gBAAiB,CAEf,OAAO,IACT,CAEA,gBAAiB,CAEf,OAAO,IACT,CAEA,MAAML,EAAM,CAEV,KAAK,EAAI,KAAK,OAAOA,CAAI,EACzB,KAAK,EAAI,KAAK,OAAOA,CAAI,EACzB,KAAK,EAAI,KAAK,OAAOA,CAAI,EAGzB,KAAK,MAAQ,IAAI,IAAI,KAAK,CAAC,EAI3B,IAAMM,EAAU,CAACC,EAAGC,IAAM,CAAC,MAAM,KAAK,EAAEA,CAAC,CAAC,GAAK,CAAC,MAAM,KAAK,EAAEA,CAAC,CAAC,EAC/D,KAAK,EAAO,MAAIR,EAAMM,CAAO,EAG7B,KAAK,EAAO,QAAM,KAAK,EAAE,MAAM,EAC/B,KAAK,SAAc,QAAM,KAAK,EAAIE,GAAM,KAAK,EAAEA,CAAC,CAAC,EAGjD,KAAK,UAAUR,CAAI,CACrB,CAEA,QAAQS,EAAO,CAEb,OAAOA,CACT,CAEA,QAAQA,EAAO,CAEb,OAAOA,CACT,CAEA,QAAQC,EAAK,CAEX,OAAOA,CACT,CAEA,OAAOV,EAAM,CACX,OAAU,MAAIA,EAAOO,GAAS,WAASA,EAAE,CAAC,CAAC,CAAC,CAC9C,CAEA,OAAOP,EAAM,CACX,OAAU,MAAIA,EAAOO,GAAMA,EAAE,CAAC,CAAC,CACjC,CAEA,OAAOP,EAAM,CACX,OAAU,MAAIA,EAAOO,GAAMA,EAAE,CAAC,CAAC,CACjC,CAEA,YAAa,CACX,OAAU,SAAO,KAAK,CAAC,CACzB,CAEA,UAAUI,EAAYC,EAAQ,CAC5B,MAAO,CAACA,EAAO,KAAMD,EAAW,MAAQC,EAAO,KAAK,CACtD,CAEA,YAAa,CACX,OAAU,SAAO,KAAK,CAAC,CACzB,CAEA,UAAUD,EAAYC,EAAQ,CAC5B,MAAO,CAACD,EAAW,OAASC,EAAO,OAAQA,EAAO,GAAG,CACvD,CAEA,UAAUZ,EAAM,CACd,KAAK,OACF,eAAa,EACb,OAAO,KAAK,KAAK,EACjB,MAAM,KAAK,QAAQ,MAAM,CAC9B,CAEA,SAASa,EAAG,CACV,OAAO,KAAK,OAAOA,CAAC,CACtB,CAEA,cAAcC,EAAM,CAElB,OAAOC,EAAcD,EAAM,CAAE,MAAO,GAAK,CAAC,CAC5C,CAEA,UAAUA,EAAMH,EAAY,CAEvB,SAAOG,CAAI,EAAE,UAAU,KAAK,EAAE,OAAO,EAGxC,KAAK,IACF,SAAOA,CAAI,EACX,OAAO,KAAK,EACZ,KAAK,UAAW,CAAC,EAAG,EAAGH,EAAW,MAAOA,EAAW,MAAM,CAAC,EAC3D,KAAK,QAAS,qCAAqC,EACnD,MAAM,8BAA+B,aAAa,EAClD,MAAM,YAAa,KAAK,QAAQ,SAAS,EACzC,MAAM,WAAY,SAAS,CAChC,CAEA,OAAQ,CAEF,KAAK,KAAK,KAAK,IAAI,UAAU,GAAG,EAAE,OAAO,CAC/C,CACF,EGxIO,SAASK,EAASC,EAAIC,EAAS,CACpC,IAAIC,EAAO,GACX,OAAO,UAAY,CACbA,IACFF,EAAG,MAAM,KAAM,SAAS,EACxBE,EAAO,GACP,WAAW,IAAM,CACfA,EAAO,EACT,EAAGD,CAAO,EAEd,CACF,CJHO,IAAME,EAAN,cAAmBC,CAAM,CAC9B,OAAOC,EAAM,CAEX,GAAI,CAAC,KAAK,EAAE,OAAQ,OAGpB,GAAM,CAACC,EAAOC,CAAM,EAAI,KAAK,cAAcF,CAAI,EACzCG,EAAa,CAAE,MAAAF,EAAO,OAAAC,CAAO,EAC7BE,EAAS,KAAK,UAAUH,EAAOC,CAAM,EAE3C,KAAK,UAAUF,EAAMG,CAAU,EAG/B,KAAK,OACF,WAAS,EACT,OAAO,KAAK,WAAW,CAAC,EACxB,MAAM,KAAK,UAAUA,EAAYC,CAAM,CAAC,EAE3C,IAAIC,EACD,aAAW,KAAK,MAAM,EACtB,WAAW,KAAK,eAAe,CAAC,EAChC,WAAW,KAAK,WAAW,EAC3B,cAAc,KAAK,QAAQ,WAAW,EAEzC,KAAK,IACF,OAAO,GAAG,EACV,MAAM,YAAa,KAAK,QAAQ,SAAS,EACzC,KACC,YACA,eAAeF,EAAW,OAASC,EAAO,OAAS,KAAK,QAAQ,aAAa,GAC/E,EACC,KAAKC,CAAK,EACV,KAAMC,GAAMA,EAAE,OAAO,SAAS,EAAE,OAAO,CAAC,EAG3C,KAAK,OACF,cAAY,EACZ,OAAO,KAAK,WAAW,CAAC,EACxB,MAAM,KAAK,UAAUH,EAAYC,CAAM,CAAC,EAE3C,IAAIG,EACD,WAAS,KAAK,MAAM,EACpB,WAAW,KAAK,eAAe,CAAC,EAChC,WAAW,KAAK,WAAW,EAC3B,SAAS,CAAC,EACV,MAAM,CAAC,EAGV,KAAK,IACF,OAAO,GAAG,EACV,MAAM,YAAa,KAAK,QAAQ,SAAS,EACzC,KACC,YACA,aAAaH,EAAO,KAAO,KAAK,QAAQ,aAAa,KACvD,EACC,KAAKG,CAAK,EACV,KAAMD,GAAMA,EAAE,OAAO,SAAS,EAAE,OAAO,CAAC,EACxC,KAAMA,GACLA,EACG,UAAU,YAAY,EACtB,MAAM,EACN,KAAK,SAAU,MAAM,EACrB,KAAK,iBAAkB,EAAG,EAC1B,KAAK,YAAa,aAAa,KAAK,QAAQ,aAAa,KAAK,EAC9D,KAAK,KAAMH,EAAW,MAAQC,EAAO,KAAOA,EAAO,KAAK,CAC7D,EAGF,IAAMI,EACH,OAAK,EACL,QAASC,GAAM,KAAK,EAAEA,CAAC,CAAC,EACxB,EAAGA,GAAM,KAAK,OAAO,KAAK,EAAEA,CAAC,CAAC,CAAC,EAC/B,EAAGA,GAAM,KAAK,OAAO,KAAK,EAAEA,CAAC,CAAC,CAAC,EAElC,KAAK,KAAO,KAAK,IACd,OAAO,GAAG,EACV,KAAK,OAAQ,MAAM,EACnB,KAAK,eAAgB,KAAK,QAAQ,YAAY,EAC9C,UAAU,MAAM,EAChB,KAAK,KAAK,QAAQ,EAClB,KAAK,MAAM,EACX,KAAK,IAAK,CAAC,CAAC,CAAEC,CAAC,IAAMF,EAAKE,CAAC,CAAC,EAC5B,KAAK,SAAU,CAAC,CAACC,CAAC,IAAM,KAAK,SAASA,CAAC,CAAC,EAG3C,KAAK,IAAM,KAAK,IAAI,OAAO,GAAG,EAAE,MAAM,UAAW,MAAM,EACvD,KAAK,OAAS,KAAK,IAAI,OAAO,QAAQ,EAAE,KAAK,IAAK,KAAK,QAAQ,UAAU,CAC3E,CAEA,WAAY,CAEV,OAAU,MAAI,KAAK,MAAQA,GAClB,OAAO,OAAO,CAAE,MAAO,KAAK,SAASA,EAAE,GAAG,CAAE,EAAGA,CAAC,CACxD,CACH,CAEA,SAASF,EAAG,CAEV,IAAMG,EAAI,KAAK,OAAO,KAAK,EAAEH,CAAC,CAAC,EACzBI,EAAI,KAAK,OAAO,KAAK,EAAEJ,CAAC,CAAC,EACzBK,EAAI,KAAK,EAAEL,CAAC,EAClB,KAAK,IAAI,MAAM,UAAW,IAAI,EAAE,KAAK,YAAa,aAAaG,CAAC,IAAIC,CAAC,GAAG,EACxE,KAAK,OAAO,KAAK,OAAQ,KAAK,SAASC,CAAC,CAAC,CAC3C,CAEA,SAAU,CACR,KAAK,IAAI,MAAM,UAAW,MAAM,CAClC,CAEA,aAAc,CACZ,KAAK,KACF,KAAK,UAAW,CAAG,EACnB,KAAK,eAAgB,KAAK,QAAQ,YAAY,CACnD,CAEA,UAAUA,EAAG,CAEX,KAAK,KACF,KAAK,UAAW,CAAC,CAACd,CAAI,IACrBA,IAASc,EAAI,EAAM,KAAK,QAAQ,kBAClC,EACC,KAAK,eAAgB,CAAC,CAACd,CAAI,IAC1BA,IAASc,EACL,KAAK,QAAQ,uBACb,KAAK,QAAQ,YACnB,CACJ,CAEA,YAAYC,EAAMC,EAAO,CACvB,IAAIC,EAAY,KAGVC,EAAeC,GAAQ,CAC3B,GAAM,CAACC,EAAIC,CAAE,EAAO,UAAQF,CAAG,EACzBG,EAAW,QAAM,KAAK,EAAIb,GAC9B,KAAK,MAAM,KAAK,OAAO,KAAK,EAAEA,CAAC,CAAC,EAAIW,EAAI,KAAK,OAAO,KAAK,EAAEX,CAAC,CAAC,EAAIY,CAAE,CACrE,EAMA,GAHI,OAAOC,EAAU,KAGjBL,GAAaA,GAAaK,EAAO,OAErC,KAAK,SAASA,CAAK,EAEnB,IAAMV,EAAI,KAAK,EAAEU,CAAK,EAChBT,EAAI,KAAK,EAAES,CAAK,EAChBR,EAAI,KAAK,EAAEQ,CAAK,EAElBC,EAAO,CACT,EAAGX,EACH,EAAGC,EACH,EAAGC,EACH,GAAI,KAAK,OAAOF,CAAC,EACjB,GAAI,KAAK,OAAOC,CAAC,EACjB,GAAI,KAAK,QAAQD,CAAC,EAClB,GAAI,KAAK,QAAQC,CAAC,EAClB,GAAI,KAAK,QAAQC,CAAC,CACpB,EAEIC,GACFA,EAAK,KAAK,KAAMQ,CAAI,CAExB,EAEMC,EAAgBL,GAAQ,CAC5B,KAAK,QAAQ,EACTH,GACFA,EAAM,KAAK,IAAI,CAEnB,EAEA,KAAK,IACF,GAAG,cAAeS,EAASP,EAAa,KAAK,QAAQ,YAAY,CAAC,EAClE,GAAG,eAAgBM,CAAY,EAC/B,GAAG,aAAeL,GAAQ,CACzBD,EAAYC,CAAG,EACfA,EAAI,eAAe,CACrB,CAAC,CACL,CACF",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "line_exports", "__export", "Line", "d3", "d3", "d3", "Options", "options", "d3", "getDimensions", "elem", "ratio", "maxWidth", "minWidth", "minHeight", "chart", "width", "height", "Chart", "data", "options", "__publicField", "Options", "width", "height", "defined", "d", "i", "value", "key", "dimensions", "margin", "z", "elem", "getDimensions", "throttle", "fn", "timeout", "free", "Line", "Chart", "elem", "width", "height", "dimensions", "margin", "xAxis", "g", "yAxis", "line", "i", "I", "d", "x", "y", "z", "move", "leave", "prevIndex", "pointermove", "evt", "xm", "ym", "index", "data", "pointerleave", "throttle"]
}
