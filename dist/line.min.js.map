{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../src/line.js", "../src/layout.js", "../src/ticks.js", "../src/throttle.js"],
  "sourcesContent": ["module.exports = d3", "/*\nLine chart\n*/\nimport * as d3 from \"d3\";\n\nimport { layoutSVG } from \"./layout\";\nimport { maxLabelSize } from \"./ticks\";\nimport { throttle } from \"./throttle\";\n\nexport function parse3dArray(d) {\n  return {\n    x: d[0],\n    y: d[1],\n    z: d[2],\n  };\n}\n\nexport function parseTimeSeries3dArray(d) {\n  return {\n    x: d3.isoParse(d[0]),\n    y: d[1],\n    z: d[2],\n  };\n}\n\nfunction getLength(elem) {\n  // Not all DOMs support getTotalLength\n  return elem.getTotalLength ? elem.getTotalLength() : null;\n}\n\nexport class LineChart {\n  xFormat = null;\n  yFormat = null;\n\n  // Line charts expect data is the format [{x, y, z}...]\n  // Specify a parser or override parse() if your input data is in a different format\n  constructor(data, parser = (d) => d) {\n    // Default config\n    this.config = {\n      SCREEN_HEIGHT_PERCENT: 0.5,\n      DURATION_MS: 500,\n      Y_AXIS_RIGHT: false,\n      BACKGROUND_OPACITY: 0.3, // Opacity when another line is highlighted\n      HIGHLIGHT_STROKE_WIDTH: 2.0, // Width when highlighted\n      STROKE_WIDTH: 1.5, // Width when not highlighted\n      DOT_RADIUS: 3.0, // Radius of the dot\n      HIDE_EMPTY_CHART: false,\n      COLORS: d3.schemeCategory10, // TODO There's no way to change the default yet\n    };\n\n    // Items can be dynamically hidden from the chart\n    this.hidden = new Set();\n\n    this.data = this.parseData(data, parser);\n    this.items = this.parseItems(data);\n    this.Z = this.parseZ(data);\n    this.colors = this.setColors(data);\n  }\n\n  parseData(data, parser) {\n    return d3.map(data, parser);\n  }\n\n  parseItems(data) {\n    // By default, items will be built from unique z values. To specify the items\n    // instead (and optionally provide a color) override this method\n    return Array.from(new Set(d3.map(this.data, (d) => d.z)));\n  }\n\n  parseZ(data) {\n    return this.items;\n  }\n\n  setColors(data) {\n    return d3.scaleOrdinal().domain(this.Z).range(this.config.COLORS);\n  }\n\n  /* Config chained methods */\n  screenHeightPercent(value) {\n    this.config.SCREEN_HEIGHT_PERCENT = value;\n    return this;\n  }\n\n  animationDuration(value) {\n    this.config.DURATION_MS = value;\n    return this;\n  }\n\n  noAnimation() {\n    return this.animationDuration(0);\n  }\n\n  yAxisRight() {\n    // The y axis ticks and labels will be shown on the right of the chart\n    this.config.Y_AXIS_RIGHT = true;\n    return this;\n  }\n\n  hideIfEmpty() {\n    this.config.HIDE_EMPTY_CHART = true;\n    return this;\n  }\n\n  useDiscreteScheme(scheme) {\n    this.colors = d3.scaleOrdinal().domain(this.Z).range(scheme);\n    return this;\n  }\n\n  useContinuousScheme(scheme, min = 0.0, max = 1.0) {\n    const colors = d3.quantize(\n      (t) => scheme(t * (max - min) + min),\n      this.Z.length,\n    );\n    return this.useDiscreteScheme(colors);\n  }\n  /* End config chained methods */\n\n  get legend() {\n    // Return the z items along with their colors\n    return d3.map(this.Z, (d) => {\n      return { key: d, color: this.colors(d) };\n    });\n  }\n\n  get visibleData() {\n    // TODO memoization\n    return d3.filter(this.data, (d) => !this.hidden.has(d.z));\n  }\n\n  get xScale() {\n    // Never re-calculate the x-axis\n    return d3\n      .scaleLinear()\n      .domain(d3.extent(d3.map(this.data, (d) => d.x)))\n      .range([0, this.layout.innerWidth]);\n  }\n\n  get yScale() {\n    return d3\n      .scaleLinear()\n      .domain(d3.extent(d3.map(this.visibleData, (d) => d.y)))\n      .range([this.layout.innerHeight, 0]);\n  }\n\n  xAxis(g, x) {\n    g.call(d3.axisBottom(x).tickSize(3).tickFormat(this.xFormat));\n  }\n\n  yAxis(g, y) {\n    g.call(d3.axisLeft(y).tickSize(0).tickFormat(this.yFormat));\n  }\n\n  grid(g, x, y) {\n    g.call(d3.axisLeft(y).tickSize(-this.layout.innerWidth).tickFormat(\"\"));\n  }\n\n  render(selector) {\n    // If there is no data, do not render\n    if (!this.data.length) return;\n\n    // The selector can either be for an:\n    // 1. SVG element with width and height attributes\n    // 2. HTML element that has an intrinsic width - an SVG element will be created\n    [this.svg, this.layout] = layoutSVG(selector, this.config);\n\n    this.x = this.xScale;\n    this.y = this.yScale;\n\n    const [xLabelWidth, xLabelHeight] = maxLabelSize(\n      this.layout,\n      this.x,\n      this.xFormat,\n    );\n    this.layout.pad.bottom = d3.max([this.layout.pad.bottom, xLabelHeight]);\n\n    const [yLabelWidth, yLabelHeight] = maxLabelSize(\n      this.layout,\n      this.y,\n      this.yFormat,\n    );\n    // TODO Config option for additional tick padding\n    this.layout.pad.left = d3.max([this.layout.pad.left, yLabelWidth + 3]);\n\n    // Start with the SVG visible - this can be set to 0 for \"fade in\"\n    this.svg.attr(\"opacity\", 1.0);\n\n    // Create a clip path to hide any overflow content\n    // We could also set this to the inner element, but that would hide the\n    // overflow from the dot placement\n    this.svg\n      .append(\"defs\")\n      .append(\"clipPath\")\n      .attr(\"id\", \"inner-clip-path\")\n      .append(\"rect\")\n      .attr(\"width\", this.layout.width)\n      .attr(\"height\", this.layout.height);\n\n    this.svg.attr(\"clip-path\", \"url(#inner-clip-path)\");\n\n    this.gx = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left},${this.layout.innerHeight + this.layout.pad.top})`,\n      );\n\n    this.gy = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left - 3},${this.layout.pad.top})`,\n      );\n\n    this.gGrid = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"grid\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left},${this.layout.pad.top})`,\n      );\n\n    const gInner = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"inner\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left}, ${this.layout.pad.top})`,\n      );\n\n    const grouping = d3.group(this.data, (d) => d.z);\n\n    this.paths = gInner\n      .append(\"g\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke-width\", this.config.STROKE_WIDTH)\n      .selectAll(\"path\")\n      .data(grouping)\n      .join(\"path\");\n\n    // Dot - shows nearest point during pointer events\n    this.dot = gInner.append(\"g\").attr(\"class\", \"dot\").style(\"display\", \"none\");\n    this.circle = this.dot.append(\"circle\").attr(\"r\", this.config.DOT_RADIUS);\n\n    this.previousUpdate = false;\n\n    // Set an initial zero state\n    // this.zeroX = d3\n    //   .scaleLinear()\n    //   .domain(d3.extent(d3.map(this.visibleData, (d) => d.x)))\n    //   .range([0, 0]);\n\n    this.zeroY = d3\n      .scaleLinear()\n      .domain(d3.extent(d3.map(this.visibleData, (d) => d.y)))\n      .range([this.layout.innerHeight, this.layout.innerHeight]);\n\n    // Set initial state\n    this.gx.call(this.xAxis.bind(this), this.x);\n    // this.gy.call(this.yAxis.bind(this), this.zeroY);\n    this.gy.call(this.yAxis.bind(this), this.y).attr(\"opacity\", 1.0);\n    this.gGrid.call(this.grid.bind(this), this.x, this.y);\n    // this.gGrid.call(this.grid.bind(this), this.x, this.zeroY);\n\n    const line = d3\n      .line()\n      .digits(2)\n      // .defined((d) => ) // TODO defined function\n      .x((d) => this.x(d.x))\n      .y((d) => this.y(d.y));\n    // .y((d) => this.zeroY(d.y));\n\n    this.paths\n      .attr(\"d\", ([, I]) => line(I))\n      .attr(\"stroke\", ([z]) => this.colors(z))\n      .attr(\"class\", ([z]) => z)\n      .attr(\"opacity\", 1);\n\n    const lengths = d3.map(this.paths, (elem) => getLength(elem));\n\n    this.paths\n      .attr(\"stroke-dasharray\", (d, i) => {\n        return lengths[i] ? `${lengths[i]} ${lengths[i]}` : null;\n      })\n      .attr(\"stroke-dashoffset\", (d, i) => lengths[i]);\n\n    // this.update(this.x, this.zeroY, 0, true);\n    this.update(this.x, this.y);\n  }\n\n  update(x, y) {\n    if (!this.visibleData.length) {\n      // Set axes to zero\n      y = this.zeroY;\n    }\n\n    const duration = this.config.DURATION_MS;\n\n    // Hide the chart if there's no visible data\n    this.hideDot();\n\n    if (this.config.HIDE_EMPTY_CHART) {\n      this.svg\n        .transition()\n        .duration(duration)\n        .attr(\"opacity\", this.visibleData.length ? 1.0 : 0.0);\n    }\n\n    // Re-draw the chart with the new x and y scales\n    // this.gx.transition().duration(duration).call(this.xAxis.bind(this), x);\n    this.gy\n      .transition()\n      .duration(duration)\n      .call(this.yAxis.bind(this), y)\n      .attr(\"opacity\", this.visibleData.length ? 1.0 : 0.0);\n    this.gGrid.transition().duration(duration).call(this.grid.bind(this), x, y);\n\n    // Plot the line\n    const line = d3\n      .line()\n      .digits(2)\n      // .defined((d) => ) // TODO defined function\n      .x((d) => x(d.x))\n      .y((d) => y(d.y));\n\n    this.paths\n      .transition()\n      .duration(duration)\n      .attr(\"d\", ([, I]) => line(I))\n      // .attr(\"stroke-dasharray\", (d, i) => `${lengths[i]} ${lengths[i]}`)\n      .attr(\"stroke-dashoffset\", 0)\n      .attr(\"opacity\", ([z]) => (this.hidden.has(z) ? 0 : 1.0));\n\n    if (this.previousUpdate) {\n      this.paths.attr(\"stroke-dasharray\", \"1 0\");\n    }\n    this.previousUpdate = true;\n  }\n\n  reset() {}\n\n  placeDot(index) {\n    // Place a dot at the given index\n    const d = this.data[index];\n    this.dot\n      .style(\"display\", null)\n      .attr(\"transform\", `translate(${this.x(d.x)},${this.y(d.y)})`);\n    this.circle.attr(\"fill\", this.colors(d.z));\n  }\n\n  hideDot() {\n    this.dot.style(\"display\", \"none\");\n  }\n\n  noHighlight() {\n    // Reset all lines to default\n    this.paths\n      .attr(\"opacity\", ([z]) => (this.hidden.has(z) ? 0 : 1.0))\n      .attr(\"stroke-width\", this.config.STROKE_WIDTH);\n  }\n\n  highlight(z) {\n    // Hide paths that aren't the currently selected path\n    this.paths\n      .attr(\"opacity\", ([elem]) => {\n        if (this.hidden.has(elem)) return 0;\n        return elem === z ? 1.0 : this.config.BACKGROUND_OPACITY;\n      })\n      .attr(\"stroke-width\", ([elem]) =>\n        elem === z\n          ? this.config.HIGHLIGHT_STROKE_WIDTH\n          : this.config.STROKE_WIDTH,\n      );\n  }\n\n  onEvent(move, leave) {\n    let prevIndex = null;\n\n    // Determine the closest point to the cursor\n    const pointermove = (evt) => {\n      const [xm, ym] = d3.pointer(evt);\n      const points = d3.map(this.data, (d) => {\n        if (this.hidden.has(d.z)) return null;\n        return Math.hypot(this.x(d.x) - xm, this.y(d.y) - ym);\n      });\n\n      const index = d3.leastIndex(points);\n      if (index === -1 || points[index] === null) return;\n\n      // Exit early if no point was found\n      if (typeof index === \"undefined\") return;\n\n      // Only trigger the callback when the index changes\n      if (prevIndex && prevIndex == index) return;\n\n      this.placeDot(index);\n\n      const d = this.data[index];\n\n      let data = {\n        x: d.x,\n        y: d.y,\n        z: d.z,\n        dx: this.x(d.x),\n        dy: this.y(d.y),\n      };\n\n      if (move) {\n        move.call(this, data);\n      }\n    };\n\n    const pointerleave = (evt) => {\n      this.hideDot();\n      if (leave) {\n        leave.call(this);\n      }\n    };\n\n    this.svg\n      .on(\"pointermove\", throttle(pointermove, 20.83)) // 48 fps\n      .on(\"pointerleave\", pointerleave)\n      .on(\"touchstart\", (evt) => {\n        pointermove(evt);\n        evt.preventDefault();\n      });\n  }\n\n  hide(...z) {\n    this.hidden = this.hidden.union(new Set(z));\n    this.toggle();\n  }\n\n  show(...z) {\n    this.hidden = this.hidden.difference(new Set(z));\n    this.toggle();\n  }\n\n  showAll() {\n    this.hidden = new Set();\n    this.toggle();\n  }\n\n  toggle() {\n    // Recalculate the scales based on the non-hidden items\n    this.x = this.xScale;\n    this.y = this.yScale;\n    this.update(this.x, this.y, this.config.DURATION_MS);\n  }\n\n  // TODO method to append a data point\n  append() {}\n}\n\nexport function Line(data, parser) {\n  return new LineChart(data, parser);\n}\n\nclass TimeSeriesChart extends LineChart {\n  // Never re-calculate the x-axis\n  get xScale() {\n    return d3\n      .scaleUtc()\n      .domain(d3.extent(d3.map(this.data, (d) => d.x)))\n      .range([0, this.layout.innerWidth]);\n  }\n}\n\nexport function TimeSeries(data, parser) {\n  return new TimeSeriesChart(data, parser);\n}\n", "import * as d3 from \"d3\";\n\n/*\nMost of the layout operations are placing a rectangle within another rectangle.\nWhat is the most generic way to do this?\n*/\n\nexport class Pad {\n  constructor(top, right, bottom, left) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n}\n\nexport function EqualPad(value) {\n  return new Pad(value, value, value, value);\n}\n\nexport function DefaultPad() {\n  return new Pad(15, 15, 25, 25);\n}\n\nexport class Layout {\n  constructor(width, height, pad) {\n    this.width = width;\n    this.height = height;\n    this.pad = pad || DefaultPad();\n  }\n\n  get rangeX() {\n    return [this.pad.left, this.width - this.pad.right];\n  }\n\n  get rangeY() {\n    return [this.height - this.pad.bottom, this.pad.top];\n  }\n\n  get innerWidth() {\n    return this.width - this.pad.left - this.pad.right;\n  }\n\n  get innerHeight() {\n    return this.height - this.pad.top - this.pad.bottom;\n  }\n\n  get innerMinimum() {\n    return d3.min([this.innerWidth, this.innerHeight]);\n  }\n\n  get midpoint() {\n    return [this.width / 2, this.height / 2];\n  }\n}\n\nexport function getLayout(\n  elem,\n  {\n    minWidth = 400,\n    maxWidth = undefined,\n    minHeight = 300,\n    maxHeight = undefined,\n    screenHeightPercent = 0.5,\n  } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.max([chart.offsetWidth, minWidth]);\n  if (maxWidth) {\n    width = d3.min([width, maxWidth]);\n  }\n\n  let height = window.innerHeight * screenHeightPercent;\n  height = d3.max([height, minHeight]);\n  if (maxHeight) {\n    height = d3.min([height, maxHeight]);\n  }\n  return new Layout(width, height, DefaultPad());\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n\n  // Pad\n  return width + options.X_TICK_GUTTER + 5;\n}\n\nexport function appendSVG(selector, width, height) {\n  // Append an SVG element to the selected element\n  return d3\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"viewBox\", [0, 0, width, height])\n    .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n    .style(\"-webkit-tap-highlight-color\", \"transparent\")\n    .style(\"overflow\", \"visible\");\n}\n\nexport function layoutSVG(selector, config) {\n  // Return the SVG elements and its layout\n  const elem = d3.select(selector);\n  if (!elem.node()) {\n    throw new Error(`Unable to find a DOM element for selector '${selector}'`);\n  }\n\n  if (elem.node().tagName === \"svg\") {\n    const svg = elem;\n    const width = +svg.attr(\"width\");\n    const height = +svg.attr(\"height\");\n    // TODO Fallback to viewbox\n    if (width && height) {\n      return [svg, new Layout(width, height)];\n    } else {\n      // TODO SVGs must have a width or height or the defaults will be returned\n      const layout = getLayout(selector, {\n        screenHeightPercent: config.SCREEN_HEIGHT_PERCENT,\n      });\n      return [svg, layout];\n    }\n  }\n\n  const layout = getLayout(selector, {\n    screenHeightPercent: config.SCREEN_HEIGHT_PERCENT,\n  });\n  const svg = appendSVG(selector, layout.width, layout.height);\n  return [svg, layout];\n}\n", "import * as d3 from \"d3\";\n\n/*\nTo filter categorical x ticks, we need to:\n1. get the width of the largest x tick label\n2. get the total available width for the axes in the layout\n3. get the interval that will fit that largest label without overlap\n4. filter the available tick labels by the interval\n*/\n\nexport function maxLabelSize(layout, scale, format = null) {\n  // Create a fake axis to test label tick size\n  // Does not include the tick size or padding, is just the label with\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", layout.innerWidth)\n    .attr(\"height\", layout.innerHeight)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  const axis = d3.axisLeft(scale).tickFormat(format); // Can be null\n\n  const g = hidden.append(\"g\").call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  let height = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n    if (bbox.height > height) {\n      height = bbox.height;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n  return [width, height];\n}\n\nexport function filterTicks(ticks, layout, labelWidth) {\n  // TODO - allow a max to be set?\n  const count = parseInt(layout.innerWidth / (labelWidth + 1)) + 1;\n  const interval = d3.max([parseInt(Math.ceil(ticks.length / count)), 1]);\n  return d3.filter(ticks, (d, i) => i % interval === 0);\n}\n", "export function throttle(fn, timeout) {\n  var free = true;\n  return function () {\n    if (free) {\n      fn.apply(this, arguments);\n      free = false;\n      setTimeout(() => {\n        free = true;\n      }, timeout);\n    }\n  };\n}\n"],
  "mappings": "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",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "line_exports", "__export", "Line", "LineChart", "TimeSeries", "parse3dArray", "parseTimeSeries3dArray", "d3", "d3", "Pad", "top", "right", "bottom", "left", "DefaultPad", "Pad", "Layout", "width", "height", "pad", "getLayout", "elem", "minWidth", "maxWidth", "minHeight", "maxHeight", "screenHeightPercent", "chart", "appendSVG", "selector", "width", "height", "layoutSVG", "config", "elem", "svg", "Layout", "layout", "getLayout", "d3", "maxLabelSize", "layout", "scale", "format", "hidden", "axis", "labels", "width", "height", "bbox", "throttle", "fn", "timeout", "free", "parse3dArray", "d", "parseTimeSeries3dArray", "getLength", "elem", "LineChart", "data", "parser", "__publicField", "value", "scheme", "min", "max", "colors", "t", "g", "x", "y", "selector", "layoutSVG", "xLabelWidth", "xLabelHeight", "maxLabelSize", "yLabelWidth", "yLabelHeight", "gInner", "grouping", "line", "I", "z", "lengths", "i", "duration", "index", "move", "leave", "prevIndex", "pointermove", "evt", "xm", "ym", "points", "pointerleave", "throttle", "Line", "TimeSeriesChart", "TimeSeries"]
}
