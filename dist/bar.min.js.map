{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../src/bar.js", "../src/chart.js", "../src/colors.js", "../src/layout.js", "../src/parsers.js", "../src/text.js", "../src/ticks.js", "../src/timeseries.js", "../src/throttle.js"],
  "sourcesContent": ["module.exports = d3", "/*\nBar chart\n*/\nimport * as d3 from \"d3\";\n\nimport { CategoricalChart } from \"./chart\";\nimport { layoutSVG } from \"./layout\";\nimport { parse3dArray, parseTimeSeries3dArray } from \"./parsers\";\nimport { className } from \"./text\";\nimport { maxLabelSize, filterTicks } from \"./ticks\";\nimport { makeDateFormatter } from \"./timeseries\";\nimport { throttle } from \"./throttle\";\n\nexport { parse3dArray, parseTimeSeries3dArray };\n\nexport class BarChart extends CategoricalChart {\n  xFormat = null;\n  yFormat = null;\n\n  // Bar charts expect data is the format [{x, y, z}...]\n  // Specify a parser if your input data is in a different format\n  constructor(data, parser = (d) => d) {\n    super(data, parser);\n    // Default config\n    this.config = {\n      SCREEN_HEIGHT_PERCENT: 0.5,\n      BAND_PAD: 0.2,\n      BAR_STROKE_WIDTH: 1.0,\n      DURATION_MS: 500,\n      BACKGROUND_OPACITY: 0.3, // Opacity when another line is highlighted\n      Y_AXIS_RIGHT: false,\n      COLORS: d3.schemeCategory10, // TODO There's no way to change the default yet\n\n      // Additional margins\n      MARGIN_TICK: 3,\n    };\n\n    this.data = this.parseData(data, parser);\n    this.items = this.parseItems(data);\n    this.Z = this.parseZ(data);\n    this.colors = this.setColors(data);\n  }\n\n  parseData(data, parser) {\n    return d3.map(data, parser);\n  }\n\n  parseItems(data) {\n    // By default, items will be built from unique z values. To specify the items\n    // instead (and optionally provide a color) override this method\n    return Array.from(new d3.InternSet(d3.map(this.data, (d) => d.z)));\n  }\n\n  parseZ(data) {\n    return this.items;\n  }\n\n  setColors(data) {\n    return d3.scaleOrdinal().domain(this.Z).range(this.config.COLORS);\n  }\n\n  /* Config chained methods */\n  bandPadding(value) {\n    this.config.BAND_PAD = value;\n    return this;\n  }\n\n  barOutline(value) {\n    this.config.BAR_STROKE_WIDTH = value;\n    return this;\n  }\n\n  noBarOutline() {\n    return this.barOutline(0.0);\n  }\n  /* End config chained methods */\n\n  getStack(data) {\n    // Index the data by x, then by z for each x\n    const indexed = d3.index(\n      data,\n      (d) => d.x,\n      (d) => d.z,\n    );\n\n    // Build the stack, one array per item, with an elem for each quarter\n    const stack = d3\n      .stack()\n      .keys(this.Z)\n      .value(([, group], key) => {\n        const item = group.get(key);\n        return item && item.y ? item.y : 0;\n      })(indexed);\n\n    // Largest items are returned first, since the stack areas are all drawn from zero\n    return stack.reverse();\n  }\n\n  get stack() {\n    // Only visible data - hidden items are all zero\n    return this.getStack(this.visibleData);\n  }\n\n  get fullStack() {\n    // All data\n    return this.getStack(this.data);\n  }\n\n  get legend() {\n    // Return the z items along with their colors\n    return d3.map(this.Z.slice().reverse(), (d) => {\n      return { key: d, color: this.colors(d) };\n    });\n  }\n\n  get visibleData() {\n    // TODO memoization\n    // Set hidden values to zero\n    return d3.map(this.data, (d) =>\n      this.hidden.has(d.z) ? { x: d.x, y: 0, z: d.z } : d,\n    );\n  }\n\n  get xDomain() {\n    // By default, don't re-calculate the x-axis\n    // Return all unique x values\n    return Array.from(new d3.InternSet(d3.map(this.data, (d) => d.x)));\n  }\n\n  get yDomain() {\n    // Always show the full y Axis\n    return d3.extent(this.fullStack.flat().flat());\n  }\n\n  get xScale() {\n    return d3\n      .scaleBand()\n      .domain(this.xDomain)\n      .range([0, this.layout.innerWidth])\n      .padding(this.config.BAND_PAD)\n      .align(0.1);\n  }\n\n  get yScale() {\n    return d3\n      .scaleLinear()\n      .domain(this.yDomain)\n      .range([this.layout.innerHeight, 0])\n      .nice();\n  }\n\n  defined(d, i) {\n    // By default, all points are considered to be defined\n    return true;\n  }\n\n  xAxis(g, x) {\n    g.call(d3.axisBottom(x).tickSize(4).tickFormat(this.xFormat));\n  }\n\n  yAxis(g, y) {\n    if (this.config.Y_AXIS_RIGHT) {\n      g.call(d3.axisRight(y).tickSize(0).tickFormat(this.yFormat));\n    } else {\n      g.call(d3.axisLeft(y).tickSize(0).tickFormat(this.yFormat));\n    }\n  }\n\n  grid(g, x, y) {\n    // Separating the grid from the axes allows more control of its positioning\n    g.call(d3.axisLeft(y).tickSize(-this.layout.innerWidth).tickFormat(\"\"));\n  }\n\n  groupClass(d, i) {\n    return className(d.key);\n  }\n\n  barClass(d, i) {\n    return \"\";\n  }\n\n  updateLayout() {\n    // Scales are needed to calculate the axes size, which may change layout and\n    // require scales to be re-calculated\n    const [xLabelWidth, xLabelHeight] = maxLabelSize(\n      this.svg,\n      this.layout,\n      this.xScale,\n      this.xFormat,\n      \"x axis\",\n    );\n    this.layout.pad.bottom = d3.max([this.layout.pad.bottom, xLabelHeight]);\n\n    const [yLabelWidth, yLabelHeight] = maxLabelSize(\n      this.svg,\n      this.layout,\n      this.yScale,\n      this.yFormat,\n      \"y axis\",\n    );\n\n    if (this.config.Y_AXIS_RIGHT) {\n      this.layout.pad.right = d3.max([\n        this.layout.pad.right,\n        yLabelWidth + this.config.MARGIN_TICK + 5,\n      ]);\n      // The default axes has a pretty large left pad - if using a right axes this\n      // left pad can be reduced, but we still need room for the x-scale tick labels\n      this.layout.pad.left = 15;\n    } else {\n      this.layout.pad.left = d3.max([\n        this.layout.pad.left,\n        yLabelWidth + this.config.MARGIN_TICK + 5,\n      ]);\n    }\n  }\n\n  render(selector) {\n    // If there is no data, do not render\n    if (!this.data.length) return;\n\n    // The selector can either be for an:\n    // 1. SVG element with width and height attributes\n    // 2. HTML element that has an intrinsic width - an SVG element will be created\n    [this.svg, this.layout] = layoutSVG(selector, this.config);\n\n    // Create fake axes to measure label sizes and update layout\n    this.updateLayout();\n\n    this.x = this.xScale;\n    this.y = this.yScale;\n\n    // Start with the SVG visible - this can be set to 0 for \"fade in\"\n    this.svg.attr(\"opacity\", 1.0);\n\n    // Create a clip path to hide any overflow content\n    this.svg\n      .append(\"defs\")\n      .append(\"clipPath\")\n      .attr(\"id\", \"inner-clip-path\")\n      .append(\"rect\")\n      .attr(\"width\", this.layout.width)\n      .attr(\"height\", this.layout.height);\n\n    this.svg.attr(\"clip-path\", \"url(#inner-clip-path)\");\n\n    this.gx = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left},${this.layout.innerHeight + this.layout.pad.top})`,\n      );\n\n    let yTransform = `translate(${this.layout.pad.left - this.config.MARGIN_TICK},${this.layout.pad.top})`;\n    if (this.config.Y_AXIS_RIGHT) {\n      yTransform = `translate(${this.layout.pad.left + this.layout.innerWidth + this.config.MARGIN_TICK},${this.layout.pad.top})`;\n    }\n\n    this.gy = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", yTransform);\n\n    this.gGrid = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"grid\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left},${this.layout.pad.top})`,\n      );\n\n    const gInner = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"inner\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left}, ${this.layout.pad.top})`,\n      );\n\n    // Set initial state\n    this.gx.call(this.xAxis.bind(this), this.x).attr(\"opacity\", 1.0);\n    this.gy.call(this.yAxis.bind(this), this.y);\n    this.gGrid.call(this.grid.bind(this), this.x, this.y);\n\n    this.groups = gInner\n      .append(\"g\")\n      .selectAll()\n      .data(this.stack)\n      .join(\"g\")\n      .attr(\"fill\", (d) => this.colors(d.key))\n      .attr(\"class\", this.groupClass)\n      .attr(\"opacity\", 1.0);\n\n    this.bars = this.groups\n      .selectAll(\"rect\")\n      .data((D) => D)\n      .join(\"rect\")\n      .attr(\"class\", this.barClass)\n      .attr(\"stroke-width\", this.config.BAR_STROKE_WIDTH)\n      .attr(\"x\", (d) => this.x(d.data[0]))\n      .attr(\"y\", (d) => this.y(0))\n      .attr(\"height\", (d) => 0)\n      .attr(\"width\", this.x.bandwidth());\n\n    this.update(this.x, this.y);\n  }\n\n  update(x, y) {\n    this.groups.data(this.stack);\n    this.bars\n      .data((D) => D)\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"stroke-width\", this.config.BAR_STROKE_WIDTH)\n      .attr(\"x\", (d, i) => this.x(d.data[0]))\n      .attr(\"y\", (d) => (d[1] > d[0] ? this.y(d[1]) : this.y(d[0])))\n      .attr(\"height\", (d) => {\n        if (d[1] > d[0]) {\n          return this.y(d[0]) - this.y(d[1]);\n        }\n        return this.y(d[1]) - this.y(d[0]);\n      });\n  }\n\n  noHighlight() {\n    this.groups.attr(\"opacity\", 1.0);\n  }\n\n  highlight(z) {\n    this.groups.attr(\"opacity\", (d) =>\n      d.key === z ? 1.0 : this.config.BACKGROUND_OPACITY,\n    );\n  }\n\n  onEvent(move, leave) {\n    const pointermove = (evt, d) => {\n      let [xm, ym] = d3.pointer(evt);\n\n      // TODO Is this really the best way to get the data?\n      const x = d.data[0];\n      const y = d[1] - d[0];\n      const z = d3.select(evt.srcElement.parentNode).data()[0].key;\n\n      // Data the will provided to the callback\n      const data = {\n        x: x,\n        y: y,\n        z: z,\n        dx: xm + this.layout.pad.left,\n        dy: ym + this.layout.pad.top,\n      };\n      if (move) {\n        move.call(this, data, evt);\n      }\n    };\n\n    const pointerleave = (evt, d) => {\n      if (leave) {\n        leave.call(this, d.key);\n      }\n    };\n\n    this.bars\n      .on(\"pointermove\", throttle(pointermove, 20.83)) // 48 fps\n      .on(\"pointerleave\", pointerleave);\n  }\n\n  toggle() {\n    this.update(this.x, this.y);\n  }\n}\n\nexport function Bar(data, parser) {\n  return new BarChart(data, parser);\n}\n\nexport class TimeSeriesBarChart extends BarChart {\n  constructor(data, parser) {\n    super(data, parser);\n    this.xLabelWidth = 10;\n  }\n\n  // TODO How to better integrate with xFormat?\n  makeDateFormatter() {\n    return makeDateFormatter();\n  }\n\n  // TODO Declaring an xFormat getter doesn't override the xFormat attribute?\n  get xFormat() {\n    return makeDateFormatter();\n  }\n\n  get xValues() {\n    return filterTicks(this.xDomain, this.layout, this.xLabelWidth);\n  }\n\n  xAxis(g, x) {\n    g.call(\n      d3\n        .axisBottom(x)\n        .tickSize(4)\n        .tickValues(this.xValues)\n        .tickFormat(this.makeDateFormatter()),\n    );\n  }\n\n  updateLayout() {\n    // Scales are needed to calculate the axes size, which may change layout and\n    // require scales to be re-calculated\n    const [xLabelWidth, xLabelHeight] = maxLabelSize(\n      this.svg,\n      this.layout,\n      this.xScale,\n      this.makeDateFormatter(),\n      \"x axis\",\n    );\n    this.xLabelWidth = xLabelWidth;\n    this.layout.pad.bottom = d3.max([this.layout.pad.bottom, xLabelHeight]);\n\n    const [yLabelWidth, yLabelHeight] = maxLabelSize(\n      this.svg,\n      this.layout,\n      this.yScale,\n      this.yFormat,\n      \"y axis\",\n    );\n\n    if (this.config.Y_AXIS_RIGHT) {\n      this.layout.pad.right = d3.max([\n        this.layout.pad.right,\n        yLabelWidth + this.config.MARGIN_TICK + 5,\n      ]);\n      // The default axes has a pretty large left pad - if using a right axes this\n      // left pad can be reduced, but we still need room for the x-scale tick labels\n      this.layout.pad.left = 15;\n    } else {\n      this.layout.pad.left = d3.max([\n        this.layout.pad.left,\n        yLabelWidth + this.config.MARGIN_TICK + 5,\n      ]);\n    }\n  }\n\n  sortData(data) {\n    data.sort((a, b) => a.x - b.x);\n    return data;\n  }\n\n  parseData(data, parser) {\n    // Sort timeseries data in ascending order\n    return this.sortData(super.parseData(data, parser));\n  }\n}\n\nexport function TimeSeriesBar(data, parser) {\n  return new TimeSeriesBarChart(data, parser);\n}\n\nexport class TimeSeriesBarSharesChart extends TimeSeriesBarChart {\n  yFormat = d3.format(\".0%\");\n\n  constructor(data, parser) {\n    super(data, parser);\n\n    // Determine the total per x\n    this.totals = d3.rollup(\n      this.data,\n      (v) => d3.sum(v, (d) => d.y),\n      (d) => d.x,\n    );\n  }\n\n  // Use the stack to calculate shares\n  getStack(data) {\n    // Index the data by x, then by z for each x\n    const indexed = d3.index(\n      data,\n      (d) => d.x,\n      (d) => d.z,\n    );\n\n    // Build the stack, one array per item, with an elem for each quarter\n    const stack = d3\n      .stack()\n      .keys(this.Z)\n      .value(([, group], key) => {\n        const item = group.get(key);\n        const total = this.totals.get(item.x);\n        return item && item.y && total ? item.y / total : 0;\n      })(indexed);\n\n    // Largest items are returned first, since the stack are all drawn from zero\n    return stack.reverse();\n  }\n}\n\nexport function TimeSeriesBarShares(data, parser) {\n  return new TimeSeriesBarSharesChart(data, parser);\n}\n", "import * as d3 from \"d3\";\n\nimport { quantizeScheme } from \"./colors\";\n\nexport class Chart {\n  // Base class for charts\n  // Currently only has some common chained config methods\n\n  constructor(data, parser = (d) => d) {}\n\n  /* Config chained methods */\n  screenHeightPercent(value) {\n    this.config.SCREEN_HEIGHT_PERCENT = value;\n    return this;\n  }\n\n  animationDuration(value) {\n    this.config.DURATION_MS = value;\n    return this;\n  }\n\n  noAnimation() {\n    return this.animationDuration(0);\n  }\n}\n\nexport class CategoricalChart extends Chart {\n  // Adds additional chained config methods for schemes and hidden state\n\n  constructor(data, parser = (d) => d) {\n    // Items can be dynamically hidden from the chart\n    super(data, parser);\n    this.hidden = new d3.InternSet();\n  }\n\n  /* Chained config methods */\n  backgroundOpacity(value) {\n    this.config.BACKGROUND_OPACITY = value;\n    return this;\n  }\n\n  yAxisRight() {\n    // The y axis ticks and labels will be shown on the right of the chart\n    this.config.Y_AXIS_RIGHT = true;\n    return this;\n  }\n\n  useDiscreteScheme(scheme) {\n    this.colors = d3.scaleOrdinal().domain(this.Z).range(scheme);\n    return this;\n  }\n\n  useContinuousScheme(scheme, min = 0.0, max = 1.0) {\n    return this.useDiscreteScheme(\n      quantizeScheme(this.Z.length, scheme, min, max),\n    );\n  }\n\n  invertScheme() {\n    this.colors = this.colors.range(this.colors.range().reverse());\n    return this;\n  }\n\n  startHidden() {\n    // The first render will have all items hidden\n    this.hidden = new d3.InternSet(this.Z);\n    return this;\n  }\n  /* End chained config methods */\n\n  hide(...z) {\n    // Add the given z elements to the hidden set\n    this.hidden = this.hidden.union(new d3.InternSet(z));\n    this.toggle();\n  }\n\n  show(...z) {\n    // Remove the given z elements from the hidden set\n    this.hidden = this.hidden.difference(new d3.InternSet(z));\n    this.toggle();\n  }\n\n  setHidden(...z) {\n    this.hidden = new d3.InternSet(z);\n  }\n\n  hideAll() {\n    this.hidden = new d3.InternSet(this.Z);\n    this.toggle();\n  }\n\n  showAll() {\n    this.hidden.clear();\n    this.toggle();\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport function quantizeScheme(n, scheme, min = 0.0, max = 1.0) {\n  if (n === 1) {\n    // If there is only one item, just use the middle of the scheme\n    return [scheme((max - min) / 2.0 + min)];\n  }\n  return d3.quantize((t) => scheme(t * (max - min) + min), n);\n}\n", "import * as d3 from \"d3\";\n\n/*\nMost of the layout operations are placing a rectangle within another rectangle.\nWhat is the most generic way to do this?\n*/\n\nexport class Pad {\n  constructor(top, right, bottom, left) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n}\n\nexport function EqualPad(value) {\n  return new Pad(value, value, value, value);\n}\n\nexport function DefaultPad() {\n  return new Pad(15, 15, 25, 25);\n}\n\nexport class Layout {\n  constructor(width, height, pad) {\n    this.width = width;\n    this.height = height;\n    this.pad = pad || DefaultPad();\n  }\n\n  get rangeX() {\n    return [this.pad.left, this.width - this.pad.right];\n  }\n\n  get rangeY() {\n    return [this.height - this.pad.bottom, this.pad.top];\n  }\n\n  get innerWidth() {\n    return this.width - this.pad.left - this.pad.right;\n  }\n\n  get innerHeight() {\n    return this.height - this.pad.top - this.pad.bottom;\n  }\n\n  get innerMinimum() {\n    return d3.min([this.innerWidth, this.innerHeight]);\n  }\n\n  get midpoint() {\n    return [this.width / 2, this.height / 2];\n  }\n}\n\nexport function getLayout(\n  elem,\n  {\n    minWidth = 400,\n    maxWidth = undefined,\n    minHeight = 300,\n    maxHeight = undefined,\n    screenHeightPercent = 0.5,\n  } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.max([chart.offsetWidth, minWidth]);\n  if (maxWidth) {\n    width = d3.min([width, maxWidth]);\n  }\n\n  let height = window.innerHeight * screenHeightPercent;\n  height = d3.max([height, minHeight]);\n  if (maxHeight) {\n    height = d3.min([height, maxHeight]);\n  }\n  return new Layout(width, height, DefaultPad());\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n\n  // Pad\n  return width + options.X_TICK_GUTTER + 5;\n}\n\nexport function appendSVG(selector, width, height) {\n  // Append an SVG element to the selected element\n  return d3\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"viewBox\", [0, 0, width, height])\n    .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n    .style(\"-webkit-tap-highlight-color\", \"transparent\")\n    .style(\"overflow\", \"visible\");\n}\n\nexport function layoutSVG(selector, config) {\n  // Return the SVG elements and its layout\n  const elem = d3.select(selector);\n  if (!elem.node()) {\n    throw new Error(`Unable to find a DOM element for selector '${selector}'`);\n  }\n\n  if (elem.node().tagName === \"svg\") {\n    const svg = elem;\n    const width = +svg.attr(\"width\");\n    const height = +svg.attr(\"height\");\n    // TODO Fallback to viewbox\n    if (width && height) {\n      return [svg, new Layout(width, height)];\n    } else {\n      // TODO SVGs must have a width or height or the defaults will be returned\n      const layout = getLayout(selector, {\n        screenHeightPercent: config.SCREEN_HEIGHT_PERCENT,\n      });\n      return [svg, layout];\n    }\n  }\n\n  const layout = getLayout(selector, {\n    screenHeightPercent: config.SCREEN_HEIGHT_PERCENT,\n  });\n  const svg = appendSVG(selector, layout.width, layout.height);\n  return [svg, layout];\n}\n", "import * as d3 from \"d3\";\n\nexport function parseArrayOHLCV(d) {\n  return {\n    x: d3.isoParse(d[0]),\n    o: d[1],\n    h: d[2],\n    l: d[3],\n    c: d[4],\n    v: d[5],\n  };\n}\n\nexport function parseVerboseOHLCV(d) {\n  return {\n    x: d3.isoParse(d.date),\n    o: d.open,\n    h: d.high,\n    l: d.low,\n    c: d.close,\n    v: d.volume,\n  };\n}\n\nexport function parse3dArray(d) {\n  return {\n    x: d[0],\n    y: d[1],\n    z: d[2],\n  };\n}\n\nexport function parseTimeSeries3dArray(d) {\n  return {\n    x: d3.isoParse(d[0]),\n    y: d[1],\n    z: d[2],\n  };\n}\n\nexport function parseTimeSeries2dArray(d) {\n  // No z axis\n  return {\n    x: d3.isoParse(d[0]),\n    y: d[1],\n    z: \"\",\n  };\n}\n\nexport function parseArrayYZ(d) {\n  // For data without an x-axis\n  return {\n    x: null,\n    y: d[0],\n    z: d[1],\n  };\n}\n", "export function className(value) {\n  // Sanitize the given string so it can be used as a class name\n  value = String(value).trim();\n  if (!value) return value;\n\n  // Class names cannot contain spaces\n  value = value.replace(\" \", \"_\");\n\n  // Class names cannot start with a number\n  if (!isNaN(value.charAt(0))) {\n    value = \"_\" + value;\n  }\n\n  return value;\n}\n", "import * as d3 from \"d3\";\n\nexport function maxLabelSize(svg, layout, scale, format = null, cls = \"\") {\n  // Create a fake axis to test label tick size\n  // Does not include the tick size or padding, is just the label width\n  // This access should be part of the current chart's selection and have the same\n  // class values in order to correctly match any CSS that changes label sizes\n  const hidden = svg\n    .append(\"g\")\n    .attr(\"width\", layout.innerWidth)\n    .attr(\"height\", layout.innerHeight)\n    .attr(\"class\", cls)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  const axis = d3.axisLeft(scale).tickFormat(format); // Can be null\n  const g = hidden.call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  let height = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n    if (bbox.height > height) {\n      height = bbox.height;\n    }\n  });\n\n  hidden.remove();\n  return [width, height];\n}\n\n/*\nIn order to filter categorical ticks, we need:\n1. the width of the largest tick label\n2. the total available width for the axes in the layout\n3. the interval that will fit that largest label without overlap\n4. then filter the available tick labels by the interval\n*/\nexport function filterTicks(ticks, layout, labelWidth) {\n  const count = parseInt(layout.innerWidth / (labelWidth + 1)) + 1;\n  const interval = d3.max([parseInt(Math.ceil(ticks.length / count)), 1]);\n  return d3.filter(ticks, (d, i) => i % interval === 0);\n}\n", "import * as d3 from \"d3\";\n\nexport const month = d3.utcFormat(\"%b\");\nexport const monthDay = d3.utcFormat(\"%b %-d\");\nexport const monthYear = d3.utcFormat(\"%b %Y\");\nexport const monthDayYear = d3.utcFormat(\"%b %-d, %Y\");\nexport const fullMonthDayYear = d3.utcFormat(\"%B %-d, %Y\");\n\nexport function makeDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthDayYear(d);\n    }\n    return monthDay(d);\n  };\n}\n\nexport function makeMonthlyDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthYear(d);\n    }\n    return month(d);\n  };\n}\n\nexport function quarter(d) {\n  // Format a Date as a quarter and year\n  const q = parseInt(d.getUTCMonth() / 3) + 1;\n  return `${q}Q ${d.getUTCFullYear()}`;\n}\n\nexport const year = (d) => d.getUTCFullYear();\n\nexport function quarterToIso(value) {\n  // Convert a quarter in the format (q)Q(yyyy) - e.g. 1Q2024 - to an ISO date\n  value = String(value).replace(\" \", \"\");\n  let year = \"\";\n  if (value.length === 4) {\n    year = `20${value.substring(2)}`;\n  } else if (value.length === 6) {\n    year = value.substring(2);\n  }\n  if (!year) return null;\n  let q = parseInt(value.substring(0, 1));\n  let month = `${q * 3}`.padStart(2, \"0\");\n  let day = [\"\", \"31\", \"30\", \"30\", \"31\"][q];\n  return d3.isoParse(`${year}-${month}-${day}`);\n}\n\nexport function yearToIso(value) {\n  // Convert a year to an ISO date\n  if (value.length !== 4) return null;\n  const year = parseInt(value);\n  return d3.isoParse(`${year}-01-01`);\n}\n", "export function throttle(fn, timeout) {\n  var free = true;\n  return function () {\n    if (free) {\n      fn.apply(this, arguments);\n      free = false;\n      setTimeout(() => {\n        free = true;\n      }, timeout);\n    }\n  };\n}\n"],
  "mappings": "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",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "bar_exports", "__export", "Bar", "BarChart", "TimeSeriesBar", "TimeSeriesBarChart", "TimeSeriesBarShares", "TimeSeriesBarSharesChart", "parse3dArray", "parseTimeSeries3dArray", "d3", "d3", "d3", "quantizeScheme", "n", "scheme", "min", "max", "t", "Chart", "data", "parser", "d", "value", "CategoricalChart", "scheme", "min", "max", "quantizeScheme", "z", "d3", "Pad", "top", "right", "bottom", "left", "DefaultPad", "Pad", "Layout", "width", "height", "pad", "getLayout", "elem", "minWidth", "maxWidth", "minHeight", "maxHeight", "screenHeightPercent", "chart", "appendSVG", "selector", "width", "height", "layoutSVG", "config", "elem", "svg", "Layout", "layout", "getLayout", "d3", "parse3dArray", "d", "parseTimeSeries3dArray", "className", "value", "d3", "maxLabelSize", "svg", "layout", "scale", "format", "cls", "hidden", "axis", "labels", "width", "height", "bbox", "filterTicks", "ticks", "labelWidth", "count", "interval", "d", "i", "d3", "month", "monthDay", "monthYear", "monthDayYear", "fullMonthDayYear", "makeDateFormatter", "lastYear", "d", "year", "throttle", "fn", "timeout", "free", "BarChart", "CategoricalChart", "data", "parser", "d", "__publicField", "value", "indexed", "group", "key", "item", "i", "g", "x", "y", "className", "xLabelWidth", "xLabelHeight", "maxLabelSize", "yLabelWidth", "yLabelHeight", "selector", "layoutSVG", "yTransform", "gInner", "D", "z", "move", "leave", "pointermove", "evt", "xm", "ym", "pointerleave", "throttle", "Bar", "TimeSeriesBarChart", "makeDateFormatter", "filterTicks", "a", "b", "TimeSeriesBar", "TimeSeriesBarSharesChart", "v", "total", "TimeSeriesBarShares"]
}
