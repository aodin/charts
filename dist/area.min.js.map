{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../src/area.js", "../src/chart.js", "../src/options.js", "../src/layout.js"],
  "sourcesContent": ["module.exports = d3", "/*\nArea chart\n*/\nimport * as d3 from \"d3\";\n\nimport { Chart } from \"./chart\";\n\nexport class AreaChart extends Chart {\n  parse(data) {\n    // Get distinct items from the list of Z values\n    this.Z = this.parseZ(data);\n    this.items = new Set(this.Z);\n\n    // Index the data by x, then by z for each x\n    const indexed = d3.index(\n      data,\n      (d) => d3.isoParse(d[0]),\n      (d) => d[2],\n    );\n\n    // Build the stack, one array per item, with an elem for each quarter\n    this.stack = d3\n      .stack()\n      .keys(this.items)\n      .value(([, group], key) => {\n        let item = group.get(key);\n        return item ? item[1] : 0;\n      })(indexed);\n\n    // Use the stack to determine the x and y-axis domains\n    this.X = [...indexed.keys()];\n    this.Y = [0, d3.max(this.stack[this.stack.length - 1], (d) => d[1])];\n\n    this.setColors(data);\n  }\n\n  getDomainX() {\n    return d3.extent(this.X);\n  }\n\n  getDomainY() {\n    return this.Y;\n  }\n\n  render(elem) {\n    // Determine the layout\n    this.layout = this.getLayout(elem);\n    this.layout.padding = this.getPadding(this.layout);\n\n    this.createSVG(elem, this.layout);\n\n    // Y-axis\n    const yScale = d3\n      .scaleLinear()\n      .domain(this.getDomainY())\n      .range(this.getRangeY(this.layout));\n\n    let yAxis = d3\n      .axisLeft(yScale)\n      .tickValues(this.getTickValuesY())\n      .tickFormat(this.tickFormatY)\n      .tickSize(0)\n      .ticks(this.options.getYTickCount(this.layout.innerHeight));\n\n    // X-axis\n    const xScale = d3\n      .scaleUtc()\n      .domain(this.getDomainX())\n      .range(this.getRangeX(this.layout));\n\n    let xAxis = d3\n      .axisBottom(xScale)\n      .tickValues(this.getTickValuesX())\n      .tickFormat(this.tickFormatX)\n      .tickSizeInner(this.options.X_TICK_SIZE);\n\n    // TODO If a category, use the \"interval\" logic as the OHLCV x-axis\n\n    this.svg\n      .append(\"g\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .attr(\n        \"transform\",\n        `translate(0,${this.layout.height - this.layout.padding.bottom + this.options.X_TICK_GUTTER})`,\n      )\n      .call(xAxis)\n      .call((g) => g.select(\".domain\").remove());\n\n    this.svg\n      .append(\"g\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .attr(\n        \"transform\",\n        `translate(${this.layout.padding.left - this.options.Y_TICK_GUTTER},0)`,\n      )\n      .call(yAxis)\n      .call((g) => g.select(\".domain\").remove())\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .clone()\n          .attr(\"stroke\", \"#888\") // Works for black or white background at 40% opacity\n          .attr(\"stroke-opacity\", 0.4)\n          .attr(\"x1\", this.options.Y_TICK_GUTTER)\n          .attr(\"x2\", this.layout.innerWidth + this.options.Y_TICK_GUTTER),\n      );\n\n    // Construct an area\n    const area = d3\n      .area()\n      .x((d) => xScale(d.data[0]))\n      .y0((d) => yScale(d[0]))\n      .y1((d) => yScale(d[1]));\n\n    // Append a path for each series.\n    this.svg\n      .append(\"g\")\n      .selectAll()\n      .data(this.stack)\n      .join(\"path\")\n      .attr(\"fill\", (d) => this.getColor(d.key))\n      .attr(\"d\", area);\n  }\n}\n\nexport function Area(data, options) {\n  return new AreaChart(data, options);\n}\n", "import * as d3 from \"d3\";\n\nimport { Options } from \"./options\";\nimport { getLayout, maxTickWidth } from \"./layout\";\n\nexport class Chart {\n  // By default, tick format functions are null, which will use the default D3\n  // functions. These can be overridden by sub-classes\n  tickFormatX = null;\n  tickFormatY = null;\n\n  constructor(data, options = {}) {\n    this.options = new Options(options);\n    this.data = data; // Save the original data in case we want to recalculate\n    this.parse(data);\n  }\n\n  screenHeightRatio(fraction) {\n    this.options.SCREEN_HEIGHT_FRACTION = fraction;\n    return this;\n  }\n\n  minAtZero() {\n    this.options.MIN_Y_AT_ZERO = true;\n    return this;\n  }\n\n  colorSet(name) {\n    // TODO Discrete vs. continuous?\n    this.options.COLORS = name;\n    this.setColors();\n    return this;\n  }\n\n  yTicksRight() {\n    this.options.Y_TICKS_RIGHT = true;\n    return this;\n  }\n\n  yTickLimit(count) {\n    this.options.Y_TICK_MAX_COUNT = count;\n    return this;\n  }\n\n  getTickValuesX() {\n    // D3.js will use the default tick values if null is used\n    return null;\n  }\n\n  getTickValuesY() {\n    // D3.js will use the default tick values if null is used\n    return null;\n  }\n\n  parse(data) {\n    // This data parse is specific to line series data\n    this.X = this.parseX(data);\n    this.Y = this.parseY(data);\n    this.Z = this.parseZ(data);\n\n    // Get distinct items from the set of Z values\n    this.items = new Set(this.Z);\n\n    // Is defined?\n    // TODO This doesn't work for missing values, only null or undefined\n    const defined = (d, i) => !isNaN(this.X[i]) && !isNaN(this.Y[i]);\n    this.D = d3.map(data, defined);\n\n    // Grouping\n    this.I = d3.range(this.X.length);\n    this.grouping = d3.group(this.I, (i) => this.Z[i]); // {name: [indexes...]}\n\n    // Colors\n    this.setColors(data);\n  }\n\n  formatX(value) {\n    // Function for formatting X values, called before sending to hover data callbacks\n    return value;\n  }\n\n  formatY(value) {\n    // Function for formatting Y values, called before sending to hover data callbacks\n    return value;\n  }\n\n  formatZ(key) {\n    // Function for formatting Z values, called before sending to hover data callbacks\n    return key;\n  }\n\n  parseX(data) {\n    return d3.map(data, (d) => d3.isoParse(d[0]));\n  }\n\n  parseY(data) {\n    return d3.map(data, (d) => d[1]);\n  }\n\n  parseZ(data) {\n    return d3.map(data, (d) => d[2]);\n  }\n\n  getDomainX() {\n    return d3.extent(this.X);\n  }\n\n  getRangeX(layout) {\n    return layout.rangeX;\n  }\n\n  getDomainY() {\n    if (this.options.MIN_Y_AT_ZERO) {\n      return [0, d3.max(this.Y)];\n    }\n    return d3.extent(this.Y);\n  }\n\n  getRangeY(layout) {\n    return layout.rangeY;\n  }\n\n  setColors(data) {\n    this.colors = d3\n      .scaleOrdinal()\n      .domain(this.items)\n      .range(this.options.COLORS);\n  }\n\n  getColor(z) {\n    return this.colors(z);\n  }\n\n  getLayout(elem) {\n    // Given the chart's DOM element, return the desired layout for drawing\n    return getLayout(elem, {\n      screenHeightFraction: this.options.SCREEN_HEIGHT_FRACTION,\n    });\n  }\n\n  getPadding(layout) {\n    const width = maxTickWidth(\n      layout.padding,\n      layout.height,\n      this.getDomainY(),\n      this.tickFormatY,\n      this.options,\n    );\n\n    if (this.options.Y_TICKS_RIGHT) {\n      layout.padding.right = width;\n    } else {\n      layout.padding.left = width;\n    }\n    return layout.padding;\n  }\n\n  createSVG(elem, layout) {\n    // Clear any existing chart\n    d3.select(elem).selectAll(\"svg\").remove();\n\n    // Create a new chart\n    this.svg = d3\n      .select(elem)\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, layout.width, layout.height])\n      .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n      .style(\"-webkit-tap-highlight-color\", \"transparent\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .style(\"overflow\", \"visible\");\n  }\n\n  clear() {\n    // Clear all drawn elements, must have an element set\n    if (this.svg) this.svg.selectAll(\"*\").remove();\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport class Options {\n  constructor(options = {}) {\n    this.ANIMATION_DURATION_MS = 500;\n\n    // Allow either max number of ticks OR spacing\n    this.SCREEN_HEIGHT_FRACTION = 0.65;\n    this.X_TICK_MAX_COUNT = null;\n    this.X_TICK_SPACE = 50; // TODO calculate largest tick space dynamically\n    this.X_TICK_SIZE = 4;\n    this.X_TICK_GUTTER = 3;\n    this.Y_TICK_MAX_COUNT = null;\n    this.Y_TICK_SPACE = 40;\n    this.Y_TICK_SIZE = 0;\n    this.Y_TICK_GUTTER = 5; // Space between tick label and grid\n    this.FONT_SIZE = \"13px\";\n    this.COLORS = d3.schemeCategory10;\n    this.MIN_Y_AT_ZERO = false;\n    this.Y_TICKS_RIGHT = false;\n\n    // OHLC\n    this.BAND_PADDING = 0.2; // As a percentage of the band\n    this.VOLUME_OPACITY = 0.6;\n    this.OHLC_COLORS = [\"#1ebc8c\", \"#b2b2b2\", \"#f34d27\"]; // [up, no change, down]\n    this.VOLUME_COLORS = [\"#1ebc8c\", \"#b2b2b2\", \"#f34d27\"]; // [up, no change, down]\n    this.HIDE_VOLUME = false;\n    this.HIDE_VOLUME_TICKS = false;\n\n    // Line\n    this.STROKE_WIDTH = 1.5;\n    this.HIGHLIGHT_STROKE_WIDTH = 2.0;\n    this.BACKGROUND_OPACITY = 0.3; // When another line is highlighted\n    this.DOT_RADIUS = 3.0;\n\n    // Bar\n    this.BAR_STROKE_WIDTH = 0.0;\n\n    // Pie\n    this.INNER_RADIUS = 0.3;\n    this.OUTER_RADIUS = 0.8;\n\n    this.INNER_RADIUS_HOVER = 0.3;\n    this.OUTER_RADIUS_HOVER = 0.9;\n\n    // TODO POINTER MOVE FPS\n    this.EVENT_FPS = 48;\n\n    // Allow user to override any of the above defaults\n    Object.assign(this, options);\n  }\n\n  get eventLatency() {\n    return parseInt(1000 / this.EVENT_FPS);\n  }\n\n  get showVolumeTicks() {\n    return !(this.HIDE_VOLUME || this.HIDE_VOLUME_TICKS);\n  }\n\n  getYTickCount(height) {\n    let count = parseInt(height / this.Y_TICK_SPACE) + 1;\n    if (this.Y_TICK_MAX_COUNT && count > this.Y_TICK_MAX_COUNT) {\n      count = this.Y_TICK_MAX_COUNT;\n    }\n    return count;\n  }\n\n  getXTickCount(width) {\n    let count = parseInt(width / this.X_TICK_SPACE) + 1;\n    if (this.X_TICK_MAX_COUNT && count > this.X_TICK_MAX_COUNT) {\n      count = this.X_TICK_MAX_COUNT;\n    }\n    return count;\n  }\n}\n", "import * as d3 from \"d3\";\n\n/*\nMost of the layout operations are placing a rectangle within another rectangle.\nWhat is the most generic way to do this?\n*/\n\nexport class Padding {\n  constructor(top, right, bottom, left) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n}\n\nexport class Layout {\n  constructor(width, height, padding) {\n    this.width = width;\n    this.height = height;\n    this.padding = padding;\n  }\n\n  get rangeX() {\n    return [this.padding.left, this.width - this.padding.right];\n  }\n\n  get rangeY() {\n    return [this.height - this.padding.bottom, this.padding.top];\n  }\n\n  get innerWidth() {\n    return this.width - this.padding.left - this.padding.right;\n  }\n\n  get innerHeight() {\n    return this.height - this.padding.top - this.padding.bottom;\n  }\n\n  get innerMinimum() {\n    return d3.min([this.innerWidth, this.innerHeight]);\n  }\n\n  get midpoint() {\n    return [this.width / 2, this.height / 2];\n  }\n}\n\nexport function getLayout(\n  elem,\n  {\n    minWidth = 400,\n    maxWidth = undefined,\n    minHeight = 300,\n    maxHeight = undefined,\n    screenHeightFraction = 0.5,\n  } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.max([chart.offsetWidth, minWidth]);\n  if (maxWidth) {\n    width = d3.min([width, maxWidth]);\n  }\n\n  let height = window.innerHeight * screenHeightFraction;\n  height = d3.max([height, minHeight]);\n  if (maxHeight) {\n    height = d3.min([height, maxHeight]);\n  }\n  return new Layout(width, height, new Padding(15, 15, 25, 25));\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n\n  // Add some padding\n  return width + options.X_TICK_GUTTER + 5;\n}\n"],
  "mappings": "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",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "area_exports", "__export", "Area", "AreaChart", "d3", "d3", "d3", "Options", "options", "height", "count", "width", "d3", "Padding", "top", "right", "bottom", "left", "Layout", "width", "height", "padding", "getLayout", "elem", "minWidth", "maxWidth", "minHeight", "maxHeight", "screenHeightFraction", "chart", "maxTickWidth", "defaults", "domain", "format", "options", "hidden", "scale", "axis", "labels", "bbox", "Chart", "data", "options", "__publicField", "Options", "fraction", "name", "count", "defined", "d", "i", "value", "key", "layout", "z", "elem", "getLayout", "width", "maxTickWidth", "AreaChart", "Chart", "data", "indexed", "d", "group", "key", "item", "elem", "yScale", "yAxis", "xScale", "xAxis", "g", "area", "Area", "options"]
}
