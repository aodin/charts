{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../src/area.js", "../src/colors.js", "../src/layout.js", "../src/ticks.js", "../src/throttle.js"],
  "sourcesContent": ["module.exports = d3", "/*\nArea chart\n*/\nimport * as d3 from \"d3\";\n\nimport { quantizeScheme } from \"./colors\";\nimport { layoutSVG } from \"./layout\";\nimport { className } from \"./text\";\nimport { maxLabelSize } from \"./ticks\";\nimport { throttle } from \"./throttle\";\n\nexport function parse3dArray(d) {\n  return {\n    x: d[0],\n    y: d[1],\n    z: d[2],\n  };\n}\n\nexport function parseTimeSeries3dArray(d) {\n  return {\n    x: d3.isoParse(d[0]),\n    y: d[1],\n    z: d[2],\n  };\n}\n\nexport class AreaChart {\n  xFormat = null;\n  yFormat = null;\n\n  // Area charts expect data is the format [{x, y, z}...]\n  // Specify a parser or override parse() if your input data is in a different format\n  constructor(data, parser = (d) => d) {\n    // Default config\n    this.config = {\n      SCREEN_HEIGHT_PERCENT: 0.5,\n      DURATION_MS: 500,\n      Y_AXIS_RIGHT: false,\n      HIDE_EMPTY_CHART: false,\n      COLORS: d3.schemeCategory10, // TODO There's no way to change the default yet\n\n      // Additional margins\n      MARGIN_TICK: 3,\n    };\n\n    // Items can be dynamically hidden from the chart\n    this.hidden = new d3.InternSet();\n\n    this.data = this.parseData(data, parser);\n    this.items = this.parseItems(data);\n    this.Z = this.parseZ(data);\n    this.colors = this.setColors(data);\n    // Index the data by x, then by z for each x\n    this.indexed = d3.index(\n      this.data,\n      (d) => d.x,\n      (d) => d.z,\n    );\n\n    // Build the stack, one array per item, with an elem for each quarter\n    // TODO What is we hide items?\n    this.stack = d3\n      .stack()\n      .keys(this.Z)\n      .value(([, group], key) => {\n        const item = group.get(key);\n        return item && item.y ? item.y : 0;\n      })(this.indexed);\n  }\n\n  parseData(data, parser) {\n    return d3.map(data, parser);\n  }\n\n  parseItems(data) {\n    // By default, items will be built from unique z values. To specify the items\n    // instead (and optionally provide a color) override this method\n    return Array.from(new d3.InternSet(d3.map(this.data, (d) => d.z)));\n  }\n\n  parseZ(data) {\n    return this.items;\n  }\n\n  setColors(data) {\n    return d3.scaleOrdinal().domain(this.Z).range(this.config.COLORS);\n  }\n\n  /* Config chained methods */\n  screenHeightPercent(value) {\n    this.config.SCREEN_HEIGHT_PERCENT = value;\n    return this;\n  }\n\n  animationDuration(value) {\n    this.config.DURATION_MS = value;\n    return this;\n  }\n\n  noAnimation() {\n    return this.animationDuration(0);\n  }\n\n  yAxisRight() {\n    // The y axis ticks and labels will be shown on the right of the chart\n    this.config.Y_AXIS_RIGHT = true;\n    return this;\n  }\n\n  hideIfEmpty() {\n    this.config.HIDE_EMPTY_CHART = true;\n    return this;\n  }\n\n  useDiscreteScheme(scheme) {\n    this.colors = d3.scaleOrdinal().domain(this.Z).range(scheme);\n    return this;\n  }\n\n  useContinuousScheme(scheme, min = 0.0, max = 1.0) {\n    return this.useDiscreteScheme(\n      quantizeScheme(this.Z.length, scheme, min, max),\n    );\n  }\n\n  invertScheme() {\n    this.colors = this.colors.range(this.colors.range().reverse());\n    return this;\n  }\n\n  /* End config chained methods */\n\n  get legend() {\n    // Return the z items along with their colors\n    return d3.map(this.Z, (d) => {\n      return { key: d, color: this.colors(d) };\n    });\n  }\n\n  get zVisible() {\n    const visible = new d3.InternSet(this.Z);\n    this.hidden.forEach((z) => visible.delete(z));\n    return Array.from(visible);\n  }\n\n  get visibleData() {\n    // TODO memoization\n    return d3.filter(this.data, (d) => !this.hidden.has(d.z));\n  }\n\n  get empty() {\n    // Returns True if there are no visible items on the chart\n    return this.zVisible.length === 0;\n  }\n\n  get xDomain() {\n    // By default, don't re-calculate the x-axis\n    return d3.extent(d3.map(this.data, (d) => d.x));\n  }\n\n  get yDomain() {\n    return [0, d3.max(this.stack[this.stack.length - 1], (d) => d[1])];\n  }\n\n  get xScale() {\n    return d3\n      .scaleLinear()\n      .domain(this.xDomain)\n      .range([0, this.layout.innerWidth]);\n  }\n\n  get yScale() {\n    return d3\n      .scaleLinear()\n      .domain(this.yDomain)\n      .range([this.layout.innerHeight, 0]);\n  }\n\n  defined(d, i) {\n    // By default, all points are considered to be defined\n    return true;\n  }\n\n  xAxis(g, x) {\n    g.call(d3.axisBottom(x).tickSize(3).tickFormat(this.xFormat));\n  }\n\n  yAxis(g, y) {\n    if (this.config.Y_AXIS_RIGHT) {\n      g.call(d3.axisRight(y).tickSize(0).tickFormat(this.yFormat));\n    } else {\n      g.call(d3.axisLeft(y).tickSize(0).tickFormat(this.yFormat));\n    }\n  }\n\n  grid(g, x, y) {\n    // Separating the grid from the axes allows more control of its positioning\n    // Another option for \"zero state\" is to set the tick size to zero\n    // const tickSize = this.empty ? 0 : -this.layout.innerWidth;\n    g.call(d3.axisLeft(y).tickSize(-this.layout.innerWidth).tickFormat(\"\"));\n  }\n\n  updateLayout() {\n    // Scales are needed to calculate the axes size, which may change layout and\n    // require scales to be re-calculated\n    const [xLabelWidth, xLabelHeight] = maxLabelSize(\n      this.svg,\n      this.layout,\n      this.xScale,\n      this.xFormat,\n      \"x axis\",\n    );\n    this.layout.pad.bottom = d3.max([this.layout.pad.bottom, xLabelHeight]);\n\n    const [yLabelWidth, yLabelHeight] = maxLabelSize(\n      this.svg,\n      this.layout,\n      this.yScale,\n      this.yFormat,\n      \"y axis\",\n    );\n\n    if (this.config.Y_AXIS_RIGHT) {\n      this.layout.pad.right = d3.max([\n        this.layout.pad.right,\n        yLabelWidth + this.config.MARGIN_TICK + 5,\n      ]);\n      // The default axes has a pretty large left pad - if using a right axes this\n      // left pad can be reduced\n      this.layout.pad.left = 5;\n    } else {\n      this.layout.pad.left = d3.max([\n        this.layout.pad.left,\n        yLabelWidth + this.config.MARGIN_TICK + 5,\n      ]);\n    }\n  }\n\n  render(selector) {\n    // If there is no data, do not render\n    if (!this.data.length) return;\n\n    // The selector can either be for an:\n    // 1. SVG element with width and height attributes\n    // 2. HTML element that has an intrinsic width - an SVG element will be created\n    [this.svg, this.layout] = layoutSVG(selector, this.config);\n\n    // Create fake axes to measure label sizes and update layout\n    this.updateLayout();\n\n    this.x = this.xScale;\n    this.y = this.yScale;\n\n    // Start with the SVG visible - this can be set to 0 for \"fade in\"\n    this.svg.attr(\"opacity\", 1.0);\n\n    // Create a clip path to hide any overflow content\n    this.svg\n      .append(\"defs\")\n      .append(\"clipPath\")\n      .attr(\"id\", \"inner-clip-path\")\n      .append(\"rect\")\n      .attr(\"width\", this.layout.width)\n      .attr(\"height\", this.layout.height);\n\n    this.svg.attr(\"clip-path\", \"url(#inner-clip-path)\");\n\n    this.gx = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left},${this.layout.innerHeight + this.layout.pad.top})`,\n      );\n\n    let yTransform = `translate(${this.layout.pad.left - this.config.MARGIN_TICK},${this.layout.pad.top})`;\n    if (this.config.Y_AXIS_RIGHT) {\n      yTransform = `translate(${this.layout.pad.left + this.layout.innerWidth + this.config.MARGIN_TICK},${this.layout.pad.top})`;\n    }\n\n    this.gy = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", yTransform);\n\n    this.gGrid = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"grid\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left},${this.layout.pad.top})`,\n      );\n\n    const gInner = this.svg\n      .append(\"g\")\n      .attr(\"class\", \"inner\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left}, ${this.layout.pad.top})`,\n      );\n\n    // Set initial state\n    this.gx.call(this.xAxis.bind(this), this.x).attr(\"opacity\", 1.0);\n    this.gy.call(this.yAxis.bind(this), this.y);\n    this.gGrid.call(this.grid.bind(this), this.x, this.y);\n\n    // Construct an area\n    const area = d3\n      .area()\n      .x((d) => this.xScale(d.data[0]))\n      .y0((d) => this.yScale(0))\n      .y1((d) => this.yScale(0));\n\n    this.areas = gInner\n      .append(\"g\")\n      .selectAll()\n      .data(this.stack)\n      .join(\"path\")\n      .attr(\"fill\", (d) => this.colors(d.key))\n      .attr(\"d\", area);\n\n    this.update(this.x, this.y);\n  }\n\n  update(x, y) {\n    // Option to hide the chart if there's no visible data\n    if (this.config.HIDE_EMPTY_CHART) {\n      this.svg.transition().duration(this.config.DURATION_MS);\n    }\n\n    // Re-draw the chart with the new x and y scales\n    // NOTE: with current setup, x-axis doesn't need to be updated\n    this.gx\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .call(this.xAxis.bind(this), x);\n\n    this.gy\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .call(this.yAxis.bind(this), y);\n\n    // Grid lines have a hardcoded opacity 1, so we need to use visibility to hide them\n    this.gGrid\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .call(this.grid.bind(this), x, y);\n\n    // Construct an area\n    const area = d3\n      .area()\n      .x((d) => this.xScale(d.data[0]))\n      .y0((d) => this.yScale(d[0]))\n      // .y0((d) => this.yScale(0))\n      .y1((d) => this.yScale(d[1]));\n\n    this.areas.transition().duration(this.config.DURATION_MS).attr(\"d\", area);\n  }\n\n  noHighlight() {\n    // Reset all areas to default\n  }\n\n  highlight(z) {\n    // Make the given z more prominent\n  }\n\n  onEvent(move, leave) {\n    // Determine the closest point to the cursor\n    const pointermove = (evt) => {\n      let [xm, ym] = d3.pointer(evt);\n      // X and y scales use the inner element, which is padded\n      xm -= this.layout.pad.left;\n      ym -= this.layout.pad.top;\n\n      // Data the will provided to the callback\n      const data = {\n        x: d.x,\n        y: d.y,\n        z: d.z,\n        dx: this.x(d.x) + this.layout.pad.left,\n        dy: this.y(d.y) + this.layout.pad.top,\n      };\n\n      if (move) {\n        move.call(this, data);\n      }\n    };\n\n    const pointerleave = (evt) => {\n      if (leave) {\n        leave.call(this);\n      }\n    };\n\n    this.svg\n      .on(\"pointermove\", throttle(pointermove, 20.83)) // 48 fps\n      .on(\"pointerleave\", pointerleave)\n      .on(\"touchstart\", (evt) => {\n        pointermove(evt);\n        evt.preventDefault();\n      });\n  }\n\n  hide(...z) {\n    // Add the given z elements to the hidden set\n    this.hidden = this.hidden.union(new d3.InternSet(z));\n    this.toggle();\n  }\n\n  show(...z) {\n    // Remove the given z elements from the hidden set\n    this.hidden = this.hidden.difference(new d3.InternSet(z));\n    this.toggle();\n  }\n\n  setHidden(...z) {\n    this.hidden = new d3.InternSet(z);\n  }\n\n  hideAll() {\n    this.hidden = new d3.InternSet(this.Z);\n    this.toggle();\n  }\n\n  showAll() {\n    this.hidden.clear();\n    this.toggle();\n  }\n\n  toggle() {\n    if (this.visibleData.length) {\n      // Recalculate the y-scale based on the non-hidden items\n      this.y = this.yScale;\n    } else {\n      // Set y-axis to zero\n      // We would need the last y-axis domain in order to prevent tick labels\n      // from changing during this transition\n      this.y = d3\n        .scaleLinear()\n        .domain(this.y.domain())\n        .range([this.layout.innerHeight, this.layout.innerHeight]);\n    }\n    this.update(this.x, this.y);\n  }\n}\n\nexport function Area(data, parser) {\n  return new AreaChart(data, parser);\n}\n\nexport class TimeSeriesAreaChart extends AreaChart {\n  get xScale() {\n    // Never re-calculate the x-axis\n    return d3\n      .scaleUtc()\n      .domain(this.xDomain)\n      .range([0, this.layout.innerWidth]);\n  }\n\n  sortData(data) {\n    data.sort((a, b) => a.x - b.x);\n    return data;\n  }\n\n  parseData(data, parser) {\n    // Sort timeseries data in ascending order\n    return this.sortData(super.parseData(data, parser));\n  }\n}\n\nexport function TimeSeriesArea(data, parser) {\n  return new TimeSeriesAreaChart(data, parser);\n}\n", "import * as d3 from \"d3\";\n\nexport function quantizeScheme(n, scheme, min = 0.0, max = 1.0) {\n  if (n === 1) {\n    // If there is only one item, just use the middle of the scheme\n    return [scheme((max - min) / 2.0 + min)];\n  }\n  return d3.quantize((t) => scheme(t * (max - min) + min), n);\n}\n", "import * as d3 from \"d3\";\n\n/*\nMost of the layout operations are placing a rectangle within another rectangle.\nWhat is the most generic way to do this?\n*/\n\nexport class Pad {\n  constructor(top, right, bottom, left) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n}\n\nexport function EqualPad(value) {\n  return new Pad(value, value, value, value);\n}\n\nexport function DefaultPad() {\n  return new Pad(15, 15, 25, 25);\n}\n\nexport class Layout {\n  constructor(width, height, pad) {\n    this.width = width;\n    this.height = height;\n    this.pad = pad || DefaultPad();\n  }\n\n  get rangeX() {\n    return [this.pad.left, this.width - this.pad.right];\n  }\n\n  get rangeY() {\n    return [this.height - this.pad.bottom, this.pad.top];\n  }\n\n  get innerWidth() {\n    return this.width - this.pad.left - this.pad.right;\n  }\n\n  get innerHeight() {\n    return this.height - this.pad.top - this.pad.bottom;\n  }\n\n  get innerMinimum() {\n    return d3.min([this.innerWidth, this.innerHeight]);\n  }\n\n  get midpoint() {\n    return [this.width / 2, this.height / 2];\n  }\n}\n\nexport function getLayout(\n  elem,\n  {\n    minWidth = 400,\n    maxWidth = undefined,\n    minHeight = 300,\n    maxHeight = undefined,\n    screenHeightPercent = 0.5,\n  } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.max([chart.offsetWidth, minWidth]);\n  if (maxWidth) {\n    width = d3.min([width, maxWidth]);\n  }\n\n  let height = window.innerHeight * screenHeightPercent;\n  height = d3.max([height, minHeight]);\n  if (maxHeight) {\n    height = d3.min([height, maxHeight]);\n  }\n  return new Layout(width, height, DefaultPad());\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n\n  // Pad\n  return width + options.X_TICK_GUTTER + 5;\n}\n\nexport function appendSVG(selector, width, height) {\n  // Append an SVG element to the selected element\n  return d3\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"viewBox\", [0, 0, width, height])\n    .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n    .style(\"-webkit-tap-highlight-color\", \"transparent\")\n    .style(\"overflow\", \"visible\");\n}\n\nexport function layoutSVG(selector, config) {\n  // Return the SVG elements and its layout\n  const elem = d3.select(selector);\n  if (!elem.node()) {\n    throw new Error(`Unable to find a DOM element for selector '${selector}'`);\n  }\n\n  if (elem.node().tagName === \"svg\") {\n    const svg = elem;\n    const width = +svg.attr(\"width\");\n    const height = +svg.attr(\"height\");\n    // TODO Fallback to viewbox\n    if (width && height) {\n      return [svg, new Layout(width, height)];\n    } else {\n      // TODO SVGs must have a width or height or the defaults will be returned\n      const layout = getLayout(selector, {\n        screenHeightPercent: config.SCREEN_HEIGHT_PERCENT,\n      });\n      return [svg, layout];\n    }\n  }\n\n  const layout = getLayout(selector, {\n    screenHeightPercent: config.SCREEN_HEIGHT_PERCENT,\n  });\n  const svg = appendSVG(selector, layout.width, layout.height);\n  return [svg, layout];\n}\n", "import * as d3 from \"d3\";\n\nexport function maxLabelSize(svg, layout, scale, format = null, cls = \"\") {\n  // Create a fake axis to test label tick size\n  // Does not include the tick size or padding, is just the label width\n  // This access should be part of the current chart's selection and have the same\n  // class values in order to correctly match any CSS that changes label sizes\n  const hidden = svg\n    .append(\"g\")\n    .attr(\"width\", layout.innerWidth)\n    .attr(\"height\", layout.innerHeight)\n    .attr(\"class\", cls)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  const axis = d3.axisLeft(scale).tickFormat(format); // Can be null\n  const g = hidden.call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  let height = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n    if (bbox.height > height) {\n      height = bbox.height;\n    }\n  });\n\n  hidden.remove();\n  return [width, height];\n}\n\n/*\nIn order to filter categorical ticks, we need:\n1. the width of the largest tick label\n2. the total available width for the axes in the layout\n3. the interval that will fit that largest label without overlap\n4. then filter the available tick labels by the interval\n*/\nexport function filterTicks(ticks, layout, labelWidth) {\n  const count = parseInt(layout.innerWidth / (labelWidth + 1)) + 1;\n  const interval = d3.max([parseInt(Math.ceil(ticks.length / count)), 1]);\n  return d3.filter(ticks, (d, i) => i % interval === 0);\n}\n", "export function throttle(fn, timeout) {\n  var free = true;\n  return function () {\n    if (free) {\n      fn.apply(this, arguments);\n      free = false;\n      setTimeout(() => {\n        free = true;\n      }, timeout);\n    }\n  };\n}\n"],
  "mappings": "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",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "area_exports", "__export", "Area", "AreaChart", "TimeSeriesArea", "TimeSeriesAreaChart", "parse3dArray", "parseTimeSeries3dArray", "d3", "d3", "quantizeScheme", "n", "scheme", "min", "max", "t", "d3", "Pad", "top", "right", "bottom", "left", "DefaultPad", "Pad", "Layout", "width", "height", "pad", "getLayout", "elem", "minWidth", "maxWidth", "minHeight", "maxHeight", "screenHeightPercent", "chart", "appendSVG", "selector", "width", "height", "layoutSVG", "config", "elem", "svg", "Layout", "layout", "getLayout", "d3", "maxLabelSize", "svg", "layout", "scale", "format", "cls", "hidden", "axis", "labels", "width", "height", "bbox", "throttle", "fn", "timeout", "free", "parse3dArray", "d", "parseTimeSeries3dArray", "AreaChart", "data", "parser", "__publicField", "group", "key", "item", "value", "scheme", "min", "max", "quantizeScheme", "visible", "z", "g", "x", "y", "xLabelWidth", "xLabelHeight", "maxLabelSize", "yLabelWidth", "yLabelHeight", "selector", "layoutSVG", "yTransform", "gInner", "area", "move", "leave", "pointermove", "evt", "xm", "ym", "pointerleave", "throttle", "Area", "TimeSeriesAreaChart", "a", "b", "TimeSeriesArea"]
}
