{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../src/ohlcv.js", "../src/layout.js", "../src/chart.js", "../src/options.js", "../src/timeseries.js", "../src/throttle.js", "../src/formats.js"],
  "sourcesContent": ["module.exports = d3", "/*\nOHLCV chart\n*/\nimport * as d3 from \"d3\";\n\nimport { maxTickWidth, Padding } from \"./layout\";\nimport { Chart } from \"./chart\";\nimport { makeDateFormatter } from \"./timeseries\";\nimport { throttle } from \"./throttle\";\nimport { volume } from \"./formats\";\n\nexport class CandlestickChart extends Chart {\n  parse(data) {\n    this.X = d3.map(data, (d) => d3.isoParse(d[0]));\n    this.Yo = d3.map(data, (d) => d[1]);\n    this.Yh = d3.map(data, (d) => d[2]);\n    this.Yl = d3.map(data, (d) => d[3]);\n    this.Yc = d3.map(data, (d) => d[4]);\n    this.Yv = d3.map(data, (d) => d[5]);\n    this.I = d3.range(this.X.length);\n  }\n\n  getPadding(layout) {\n    const padding = new Padding(15, 25, 25, 40);\n\n    // Adjust the padding to accommodate the price ticks\n    const priceWidth = maxTickWidth(\n      padding,\n      this.layout.height,\n      this.getDomainY(),\n      this.tickFormatY,\n      this.options,\n    );\n\n    // Adjust the padding to accommodate the volume tick\n    let volumeWidth = 0;\n\n    if (this.options.showVolumeTicks) {\n      volumeWidth = maxTickWidth(\n        padding,\n        this.layout.height,\n        this.yDomainVolume,\n        volume,\n        this.options,\n      );\n    }\n\n    if (this.options.Y_TICKS_RIGHT) {\n      padding.right = d3.max([priceWidth, volumeWidth, padding.right]);\n    } else {\n      padding.left = d3.max([priceWidth, padding.left]);\n      padding.right = d3.max([volumeWidth, padding.right]);\n    }\n    return padding;\n  }\n\n  noAnimation() {\n    this.options.ANIMATION_DURATION_MS = 0;\n    return this;\n  }\n\n  volumeColorSet(colors) {\n    this.options.VOLUME_COLORS = colors;\n    return this;\n  }\n\n  hideVolume() {\n    this.options.HIDE_VOLUME = true;\n    return this;\n  }\n\n  hideVolumeTicks() {\n    this.options.HIDE_VOLUME_TICKS = true;\n    return this;\n  }\n\n  getDomainX() {\n    return d3.extent(this.X);\n  }\n\n  getDomainY() {\n    // NOTE this won't work if the minimum isn't in the Yl data\n    // minPrice also sets the initial animation y-coord\n    this.minPrice = this.options.MIN_Y_AT_ZERO ? 0 : d3.min(this.Yl);\n    const maxPrice = d3.max(this.Yh);\n    this.yDomain = [\n      this.minPrice,\n      maxPrice + (maxPrice - this.minPrice) * 0.05,\n    ];\n    this.yDomainVolume = [0, d3.max(this.Yv)];\n    return this.yDomain;\n  }\n\n  getColor(index) {\n    return this.options.OHLC_COLORS[\n      1 + Math.sign(this.Yo[index] - this.Yc[index])\n    ];\n  }\n\n  getVolumeColor(index) {\n    return this.options.VOLUME_COLORS[\n      1 + Math.sign(this.Yo[index] - this.Yc[index])\n    ];\n  }\n\n  getXTicks() {\n    // For categorical data, it is useful to filter the displayed X ticks\n    // NOTE If dates are missing, we can't use the timeWeek ranges without\n    // checking if the tick has values\n    const xTickCount = this.options.getXTickCount(this.layout.innerWidth);\n    let interval = parseInt(this.X.length / xTickCount);\n    if (interval < 1) {\n      interval = 1;\n    }\n    return d3.filter(this.X, (d, i) => i % interval === 0);\n  }\n\n  render(elem, useLog) {\n    // Determine the size of the DOM element\n    this.layout = this.getLayout(elem);\n    this.layout.padding = this.getPadding(this.layout);\n\n    const pricePortion = this.options.HIDE_VOLUME ? 1.0 : 0.9;\n    const priceHeight = this.layout.innerHeight * pricePortion;\n\n    const yRange = [\n      this.layout.padding.top + priceHeight,\n      this.layout.padding.top,\n    ];\n\n    const yRangeVolume = [\n      this.layout.padding.top + this.layout.innerHeight,\n      this.layout.padding.top + priceHeight,\n    ];\n\n    // Construct scales and axes\n    // NOTE scaleBand takes all 'categorical' x-axis items - not just extent\n    this.xScale = d3\n      .scaleBand(this.X, this.getRangeX(this.layout))\n      .padding(this.options.BAND_PADDING)\n      .align(0.1);\n\n    const yScale = useLog\n      ? d3.scaleLog(this.getDomainY(), yRange).clamp(true).tickFormat(20, \"$,f\")\n      : d3.scaleLinear(this.getDomainY(), yRange).clamp(true);\n    const yScaleVolume = d3.scaleLinear(this.yDomainVolume, yRangeVolume).clamp(true);\n\n    // NOTE The date formatter needs to be created because it uses a\n    // closure to determine a new year\n    const dateFormatter = makeDateFormatter();\n    const xAxis = d3\n      .axisBottom(this.xScale)\n      .tickFormat(dateFormatter)\n      .tickValues(this.getXTicks())\n      .tickSize(this.options.X_TICK_SIZE);\n\n    // The band width will be used for correctly positioning the band highlighting\n    this.bandWidth = this.xScale.step();\n\n    const yAxis = this.options.Y_TICKS_RIGHT\n      ? d3.axisRight(yScale)\n      : d3.axisLeft(yScale);\n\n    yAxis\n      .tickValues(this.getTickValuesY())\n      .tickFormat(this.tickFormatY)\n      .tickSize(this.options.Y_TICK_SIZE);\n\n    // TODO Tick count just hides tick labels\n    // .ticks(this.options.getYTickCount(priceHeight))\n\n    const yAxisVolume = d3\n      .axisRight(yScaleVolume)\n      .ticks(1) // Never show more than 1 non-zero tick for the volume\n      .tickFormat(volume)\n      .tickSize(3);\n\n    // Create SVG\n    this.createSVG(elem, this.layout);\n\n    const bandPadding = (this.bandWidth * this.options.BAND_PADDING) / 2;\n\n    // X-axis\n    this.svg\n      .append(\"g\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .attr(\n        \"transform\",\n        `translate(${bandPadding},${this.layout.height - this.layout.padding.bottom + this.options.X_TICK_GUTTER})`,\n      )\n      .call(xAxis)\n      .call((g) => g.select(\".domain\").remove());\n\n    // Price y-axis\n    const translateY = this.options.Y_TICKS_RIGHT\n      ? this.layout.width - this.layout.padding.right\n      : this.layout.padding.left - this.options.Y_TICK_GUTTER;\n    const gridX1 = this.options.Y_TICKS_RIGHT\n      ? -this.options.Y_TICK_GUTTER\n      : this.options.Y_TICK_GUTTER;\n    const gridX2 = this.options.Y_TICKS_RIGHT\n      ? -this.layout.innerWidth\n      : this.layout.innerWidth + this.options.Y_TICK_GUTTER;\n    // TODO Fix grid translate\n\n    this.svg\n      .append(\"g\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .attr(\"transform\", `translate(${translateY},0)`)\n      .call(yAxis)\n      .call((g) => g.select(\".domain\").remove())\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .clone()\n          .attr(\"stroke\", \"#bbb\") // Works for black or white background at 50% opacity\n          .attr(\"stroke-opacity\", 0.5)\n          .attr(\"x1\", gridX1)\n          .attr(\"x2\", gridX2),\n      );\n\n    // Volume y-axis\n    if (this.options.showVolumeTicks) {\n      this.svg\n        .append(\"g\")\n        .style(\"font-size\", this.options.FONT_SIZE)\n        .attr(\n          \"transform\",\n          `translate(${this.layout.width - this.layout.padding.right},0)`,\n        )\n        .call(yAxisVolume)\n        .call((g) => g.select(\".domain\").remove());\n    }\n\n    // Plot OHLC candle sticks\n    const g = this.svg\n      .append(\"g\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-linecap\", \"butt\") // NOTE using 'square' distorts size\n      .selectAll(\"g\")\n      .data(this.I)\n      .join(\"g\")\n      .attr(\n        \"transform\",\n        (i) => `translate(${this.xScale(this.X[i]) + this.bandWidth / 2.0},0)`,\n      );\n\n    g.append(\"line\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"opacity\", 0.8)\n      .attr(\"y1\", yScale(this.minPrice))\n      .attr(\"y2\", yScale(this.minPrice))\n      .transition()\n      .duration(this.options.ANIMATION_DURATION_MS)\n      .attr(\"y1\", (i) => yScale(this.Yl[i]))\n      .attr(\"y2\", (i) => yScale(this.Yh[i]));\n\n    g.append(\"line\")\n      .attr(\"stroke-width\", this.xScale.bandwidth())\n      .attr(\"stroke\", (i) => this.getColor(i))\n      .attr(\"y1\", yScale(this.minPrice))\n      .attr(\"y2\", yScale(this.minPrice))\n      .transition()\n      .duration(this.options.ANIMATION_DURATION_MS)\n      .attr(\"y1\", (i) => yScale(this.Yo[i]))\n      .attr(\"y2\", (i) => yScale(this.Yc[i]));\n\n    // Plot volume\n    if (!this.options.HIDE_VOLUME) {\n      const vol = this.svg\n        .append(\"g\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(\"stroke-linecap\", \"butt\") // NOTE using 'square' distorts length\n        .selectAll(\"g\")\n        .data(this.I)\n        .join(\"g\")\n        .attr(\n          \"transform\",\n          (i) =>\n            `translate(${this.xScale(this.X[i]) + this.bandWidth / 2.0},0)`,\n        );\n\n      vol\n        .append(\"line\")\n        .attr(\"y1\", yScaleVolume(0))\n        .attr(\"y2\", yScaleVolume(0))\n        .attr(\"stroke-width\", this.xScale.bandwidth())\n        .attr(\"stroke\", (i) => this.getVolumeColor(i))\n        .style(\"opacity\", this.options.VOLUME_OPACITY)\n        .transition()\n        .duration(this.options.ANIMATION_DURATION_MS)\n        .attr(\"y2\", (i) => yScaleVolume(this.Yv[i]));\n    }\n\n    // Optional highlighting of day\n    // Don't call the class \"tooltip\" - that interferes with Bootstrap\n    this.highlightBand = this.svg\n      .append(\"g\")\n      .lower()\n      .attr(\"class\", \"highlight\")\n      .append(\"rect\")\n      .attr(\"fill\", \"#bbb\")\n      .style(\"display\", \"none\")\n      .style(\"opacity\", 0.2)\n      .style(\"pointer-events\", \"none\");\n  }\n\n  renderLog(elem) {\n    // Render the price portion of the chart with a log axis\n    return this.render(elem, true);\n  }\n\n  renderLinear(elem) {\n    // Render the price portion of the chart with a linear axis\n    return this.render(elem, false);\n  }\n\n  highlight(index) {\n    this.highlightBand\n      .attr(\"x\", this.xScale(this.X[index]))\n      .attr(\"width\", this.bandWidth)\n      .attr(\"y\", this.layout.padding.top)\n      .attr(\"height\", this.layout.innerHeight)\n      .style(\"display\", \"block\");\n  }\n\n  noHighlight() {\n    this.highlightBand.style(\"display\", \"none\");\n  }\n\n  enableHover(move, leave) {\n    // Enable hover events for the chart. On move, determine which band is being\n    // hovered over and send an object of its OHLCV data to the move callback.\n    // The leave callback is triggered when the pointer leaves the SVG elem\n    // Calculate the Voronoi of a single line of x-coordinates\n    const points = d3.map(this.X, (d) => [\n      this.xScale(d) + this.bandWidth / 2,\n      1,\n    ]);\n    const delaunay = d3.Delaunay.from(points);\n\n    let prevIndex = null;\n\n    const pointermove = (evt) => {\n      const [xm] = d3.pointer(evt);\n      const index = delaunay.find(xm, 1);\n\n      // Only trigger the callback when the index changes\n      if (prevIndex && prevIndex == index) {\n        return;\n      }\n\n      prevIndex = index;\n\n      // Include the index's OHLCV data and a change from the last close\n      let data = {\n        i: index,\n        x: this.X[index],\n        o: this.Yo[index],\n        h: this.Yh[index],\n        l: this.Yl[index],\n        c: this.Yc[index],\n        v: this.Yv[index],\n        // TODO Return formatted values?\n      };\n\n      if (index > 0) {\n        data.prev = this.Yc[index - 1];\n        if (data.prev) {\n          data.delta = data.c - data.prev;\n          data.percent = data.delta / data.prev;\n          data.color = this.options.OHLC_COLORS[1 + Math.sign(-data.delta)];\n        }\n      }\n\n      // TODO Always enable highlight?\n      if (move) {\n        move.call(this, data);\n      }\n    };\n\n    this.svg.on(\n      \"pointermove\",\n      throttle(pointermove, this.options.eventLatency),\n    );\n\n    if (leave) {\n      this.svg.on(\"pointerleave\", leave);\n    }\n  }\n}\n\nexport function OHLC(data, options) {\n  return new CandlestickChart(data, options).hideVolume();\n}\n\nexport function OHLCV(data, options) {\n  return new CandlestickChart(data, options);\n}\n", "import * as d3 from \"d3\";\n\n/*\nMost of the layout operations are placing a rectangle within another rectangle.\nWhat is the most generic way to do this?\n*/\n\nexport class Padding {\n  constructor(top, right, bottom, left) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n}\n\nexport class Layout {\n  constructor(width, height, padding) {\n    this.width = width;\n    this.height = height;\n    this.padding = padding;\n  }\n\n  get rangeX() {\n    return [this.padding.left, this.width - this.padding.right];\n  }\n\n  get rangeY() {\n    return [this.height - this.padding.bottom, this.padding.top];\n  }\n\n  get innerWidth() {\n    return this.width - this.padding.left - this.padding.right;\n  }\n\n  get innerHeight() {\n    return this.height - this.padding.top - this.padding.bottom;\n  }\n\n  get innerMinimum() {\n    return d3.min([this.innerWidth, this.innerHeight]);\n  }\n\n  get midpoint() {\n    return [this.width / 2, this.height / 2];\n  }\n}\n\nexport function getLayout(\n  elem,\n  {\n    minWidth = 400,\n    maxWidth = undefined,\n    minHeight = 300,\n    maxHeight = undefined,\n    screenHeightFraction = 0.5,\n  } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.max([chart.offsetWidth, minWidth]);\n  if (maxWidth) {\n    width = d3.min([width, maxWidth]);\n  }\n\n  let height = window.innerHeight * screenHeightFraction;\n  height = d3.max([height, minHeight]);\n  if (maxHeight) {\n    height = d3.min([height, maxHeight]);\n  }\n  return new Layout(width, height, new Padding(15, 15, 25, 25));\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n\n  // Add some padding\n  return width + options.X_TICK_GUTTER + 5;\n}\n", "import * as d3 from \"d3\";\n\nimport { Options } from \"./options\";\nimport { getLayout, maxTickWidth } from \"./layout\";\n\nexport class Chart {\n  // By default, tick format functions are null, which will use the default D3\n  // functions. These can be overridden by sub-classes\n  tickFormatX = null;\n  tickFormatY = null;\n\n  constructor(data, options = {}) {\n    this.options = new Options(options);\n    this.data = data; // Save the original data in case we want to recalculate\n    this.parse(data);\n  }\n\n  screenHeightRatio(fraction) {\n    this.options.SCREEN_HEIGHT_FRACTION = fraction;\n    return this;\n  }\n\n  minAtZero() {\n    this.options.MIN_Y_AT_ZERO = true;\n    return this;\n  }\n\n  colorSet(name) {\n    // TODO Discrete vs. continuous?\n    this.options.COLORS = name;\n    this.setColors();\n    return this;\n  }\n\n  yTicksRight() {\n    this.options.Y_TICKS_RIGHT = true;\n    return this;\n  }\n\n  yTickLimit(count) {\n    this.options.Y_TICK_MAX_COUNT = count;\n    return this;\n  }\n\n  getTickValuesX() {\n    // D3.js will use the default tick values if null is used\n    return null;\n  }\n\n  getTickValuesY() {\n    // D3.js will use the default tick values if null is used\n    return null;\n  }\n\n  parse(data) {\n    // This data parse is specific to line series data\n    this.X = this.parseX(data);\n    this.Y = this.parseY(data);\n    this.Z = this.parseZ(data);\n\n    // Get distinct items from the set of Z values\n    this.items = new Set(this.Z);\n\n    // Is defined?\n    // TODO This doesn't work for missing values, only null or undefined\n    const defined = (d, i) => !isNaN(this.X[i]) && !isNaN(this.Y[i]);\n    this.D = d3.map(data, defined);\n\n    // Grouping\n    this.I = d3.range(this.X.length);\n    this.grouping = d3.group(this.I, (i) => this.Z[i]); // {name: [indexes...]}\n\n    // Colors\n    this.setColors(data);\n  }\n\n  formatX(value) {\n    // Function for formatting X values, called before sending to hover data callbacks\n    return value;\n  }\n\n  formatY(value) {\n    // Function for formatting Y values, called before sending to hover data callbacks\n    return value;\n  }\n\n  formatZ(key) {\n    // Function for formatting Z values, called before sending to hover data callbacks\n    return key;\n  }\n\n  parseX(data) {\n    return d3.map(data, (d) => d3.isoParse(d[0]));\n  }\n\n  parseY(data) {\n    return d3.map(data, (d) => d[1]);\n  }\n\n  parseZ(data) {\n    return d3.map(data, (d) => d[2]);\n  }\n\n  getDomainX() {\n    return d3.extent(this.X);\n  }\n\n  getRangeX(layout) {\n    return layout.rangeX;\n  }\n\n  getDomainY() {\n    if (this.options.MIN_Y_AT_ZERO) {\n      return [0, d3.max(this.Y)];\n    }\n    return d3.extent(this.Y);\n  }\n\n  getRangeY(layout) {\n    return layout.rangeY;\n  }\n\n  setColors(data) {\n    this.colors = d3\n      .scaleOrdinal()\n      .domain(this.items)\n      .range(this.options.COLORS);\n  }\n\n  getColor(z) {\n    return this.colors(z);\n  }\n\n  getLayout(elem) {\n    // Given the chart's DOM element, return the desired layout for drawing\n    return getLayout(elem, {\n      screenHeightFraction: this.options.SCREEN_HEIGHT_FRACTION,\n    });\n  }\n\n  getPadding(layout) {\n    const width = maxTickWidth(\n      layout.padding,\n      layout.height,\n      this.getDomainY(),\n      this.tickFormatY,\n      this.options,\n    );\n\n    if (this.options.Y_TICKS_RIGHT) {\n      layout.padding.right = width;\n    } else {\n      layout.padding.left = width;\n    }\n    return layout.padding;\n  }\n\n  createSVG(elem, layout) {\n    // Clear any existing chart\n    d3.select(elem).selectAll(\"svg\").remove();\n\n    // Create a new chart\n    this.svg = d3\n      .select(elem)\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, layout.width, layout.height])\n      .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n      .style(\"-webkit-tap-highlight-color\", \"transparent\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .style(\"overflow\", \"visible\");\n  }\n\n  clear() {\n    // Clear all drawn elements, must have an element set\n    if (this.svg) this.svg.selectAll(\"*\").remove();\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport class Options {\n  constructor(options = {}) {\n    this.ANIMATION_DURATION_MS = 500;\n\n    // Allow either max number of ticks OR spacing\n    this.SCREEN_HEIGHT_FRACTION = 0.65;\n    this.X_TICK_MAX_COUNT = null;\n    this.X_TICK_SPACE = 50; // TODO calculate largest tick space dynamically\n    this.X_TICK_SIZE = 4;\n    this.X_TICK_GUTTER = 3;\n    this.Y_TICK_MAX_COUNT = null;\n    this.Y_TICK_SPACE = 40;\n    this.Y_TICK_SIZE = 0;\n    this.Y_TICK_GUTTER = 5; // Space between tick label and grid\n    this.FONT_SIZE = \"13px\";\n    this.COLORS = d3.schemeCategory10;\n    this.MIN_Y_AT_ZERO = false;\n    this.Y_TICKS_RIGHT = false;\n\n    // OHLC\n    this.BAND_PADDING = 0.2; // As a percentage of the band\n    this.VOLUME_OPACITY = 0.6;\n    this.OHLC_COLORS = [\"#1ebc8c\", \"#b2b2b2\", \"#f34d27\"]; // [up, no change, down]\n    this.VOLUME_COLORS = [\"#1ebc8c\", \"#b2b2b2\", \"#f34d27\"]; // [up, no change, down]\n    this.HIDE_VOLUME = false;\n    this.HIDE_VOLUME_TICKS = false;\n\n    // Line\n    this.STROKE_WIDTH = 1.5;\n    this.HIGHLIGHT_STROKE_WIDTH = 2.0;\n    this.BACKGROUND_OPACITY = 0.3; // When another line is highlighted\n    this.DOT_RADIUS = 3.0;\n\n    // Bar\n    this.BAR_STROKE_WIDTH = 0.0;\n\n    // Pie\n    this.INNER_RADIUS = 0.3;\n    this.OUTER_RADIUS = 0.8;\n\n    this.INNER_RADIUS_HOVER = 0.3;\n    this.OUTER_RADIUS_HOVER = 0.9;\n\n    // TODO POINTER MOVE FPS\n    this.EVENT_FPS = 48;\n\n    // Allow user to override any of the above defaults\n    Object.assign(this, options);\n  }\n\n  get eventLatency() {\n    return parseInt(1000 / this.EVENT_FPS);\n  }\n\n  get showVolumeTicks() {\n    return !(this.HIDE_VOLUME || this.HIDE_VOLUME_TICKS);\n  }\n\n  getYTickCount(height) {\n    let count = parseInt(height / this.Y_TICK_SPACE) + 1;\n    if (this.Y_TICK_MAX_COUNT && count > this.Y_TICK_MAX_COUNT) {\n      count = this.Y_TICK_MAX_COUNT;\n    }\n    return count;\n  }\n\n  getXTickCount(width) {\n    let count = parseInt(width / this.X_TICK_SPACE) + 1;\n    if (this.X_TICK_MAX_COUNT && count > this.X_TICK_MAX_COUNT) {\n      count = this.X_TICK_MAX_COUNT;\n    }\n    return count;\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport const month = d3.utcFormat(\"%b\");\nexport const monthDay = d3.utcFormat(\"%b %-d\");\nexport const monthYear = d3.utcFormat(\"%b %Y\");\nexport const monthDayYear = d3.utcFormat(\"%b %-d, %Y\");\nexport const fullMonthDayYear = d3.utcFormat(\"%B %-d, %Y\");\n\nexport function makeDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthDayYear(d);\n    }\n    return monthDay(d);\n  };\n}\n\nexport function makeMonthlyDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthYear(d);\n    }\n    return month(d);\n  };\n}\n\nexport function quarter(d) {\n  // Format a Date as a quarter and year\n  const q = parseInt(d.getUTCMonth() / 3) + 1;\n  return `${q}Q ${d.getUTCFullYear()}`;\n}\n\nexport const year = (d) => d.getUTCFullYear();\n", "export function throttle(fn, timeout) {\n  var free = true;\n  return function () {\n    if (free) {\n      fn.apply(this, arguments);\n      free = false;\n      setTimeout(() => {\n        free = true;\n      }, timeout);\n    }\n  };\n}\n", "import * as d3 from \"d3\";\n\nexport const percent = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 2,\n}).format;\n\nexport const percentChange = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n  signDisplay: \"exceptZero\",\n}).format;\n\nexport const magnitude = new Intl.NumberFormat(\"en-US\", {\n  notation: \"compact\",\n  compactDisplay: \"short\",\n  minimumFractionDigits: 1,\n  maximumFractionDigits: 2,\n}).format;\n\nexport const units = d3.format(\",.0f\");\n\nexport const volume = function (value) {\n  if (!value) return; // Never show 0\n  if (value >= 1e9) return `${value / 1e9}B`; // Billions\n  if (value >= 1e6) return `${value / 1e6}M`; // Millions\n  return units(value);\n};\n"],
  "mappings": "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",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "ohlcv_exports", "__export", "CandlestickChart", "OHLC", "OHLCV", "d3", "d3", "Padding", "top", "right", "bottom", "left", "Layout", "width", "height", "padding", "getLayout", "elem", "minWidth", "maxWidth", "minHeight", "maxHeight", "screenHeightFraction", "chart", "maxTickWidth", "defaults", "domain", "format", "options", "hidden", "scale", "axis", "labels", "bbox", "d3", "d3", "Options", "options", "height", "count", "width", "Chart", "data", "options", "__publicField", "Options", "fraction", "name", "count", "defined", "d", "i", "value", "key", "layout", "z", "elem", "getLayout", "width", "maxTickWidth", "d3", "month", "monthDay", "monthYear", "monthDayYear", "fullMonthDayYear", "makeDateFormatter", "lastYear", "d", "year", "throttle", "fn", "timeout", "free", "d3", "percent", "percentChange", "magnitude", "units", "volume", "value", "CandlestickChart", "Chart", "data", "d", "layout", "padding", "Padding", "priceWidth", "maxTickWidth", "volumeWidth", "volume", "colors", "maxPrice", "index", "xTickCount", "interval", "i", "elem", "useLog", "pricePortion", "priceHeight", "yRange", "yRangeVolume", "yScale", "yScaleVolume", "dateFormatter", "makeDateFormatter", "xAxis", "yAxis", "yAxisVolume", "bandPadding", "g", "translateY", "gridX1", "gridX2", "move", "leave", "points", "delaunay", "prevIndex", "pointermove", "evt", "xm", "throttle", "OHLC", "options", "OHLCV"]
}
