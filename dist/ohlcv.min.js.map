{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../ohlcv.js", "../layout.js", "../chart.js", "../options.js", "../timeseries.js", "../throttle.js", "../formats.js"],
  "sourcesContent": ["module.exports = d3", "/*\nOHLCV chart\n*/\nimport * as d3 from \"d3\";\n\nimport { maxTickWidth } from \"./layout\";\nimport { Chart } from \"./chart\";\nimport { makeDateFormatter } from \"./timeseries\";\nimport { throttle } from \"./throttle\";\nimport { volume } from \"./formats\";\n\nexport class OHLCV extends Chart {\n  parse(data) {\n    this.X = d3.map(data, (d) => d3.isoParse(d[0]));\n    this.Yo = d3.map(data, (d) => d[1]);\n    this.Yh = d3.map(data, (d) => d[2]);\n    this.Yl = d3.map(data, (d) => d[3]);\n    this.Yc = d3.map(data, (d) => d[4]);\n    this.Yv = d3.map(data, (d) => d[5]);\n    this.I = d3.range(this.X.length);\n  }\n\n  getMargin(width, height) {\n    const margin = {\n      top: 15,\n      right: 25,\n      bottom: 25,\n      left: 40,\n    };\n\n    // Adjust the left margin to accommodate the price ticks\n    margin.left = maxTickWidth(\n      margin,\n      height,\n      this.getDomainY(),\n      this.tickFormatY,\n      this.options,\n    );\n\n    // Adjust the right margin to accommodate the volume tick\n    margin.right = maxTickWidth(\n      margin,\n      height,\n      this.yDomainVolume,\n      volume,\n      this.options,\n    );\n    return margin;\n  }\n\n  getDomainX() {\n    return d3.extent(this.X);\n  }\n\n  getDomainY() {\n    // TODO How to pad?\n    // TODO How to set multiple domains? Data object\n    this.minPrice = d3.min(this.Yl); // Sets the initial animation y-coord\n    const maxPrice = d3.max(this.Yh);\n    this.yDomain = [\n      this.minPrice,\n      maxPrice + (maxPrice - this.minPrice) * 0.05,\n    ];\n    this.yDomainVolume = [0, d3.max(this.Yv)];\n    return this.yDomain;\n  }\n\n  getColor(index) {\n    return this.options.OHLC_COLORS[\n      1 + Math.sign(this.Yo[index] - this.Yc[index])\n    ];\n  }\n\n  render(elem) {\n    // Determine the size of the DOM element\n    const [width, height] = this.getDimensions(elem);\n    const dimensions = { width, height };\n    const margin = this.getMargin(width, height);\n\n    // TODO How to generalize different chart sections? sub-axes?\n    const chartHeight = height - margin.top - margin.bottom;\n    this.chartHeight = chartHeight;\n    const pricePortion = 0.9;\n    const priceHeight = chartHeight * pricePortion;\n\n    const yRange = [margin.top + priceHeight, margin.top];\n    const yRangeVolume = [margin.top + chartHeight, margin.top + priceHeight];\n\n    const yFormat = \",f\";\n    const yLabel = \"\";\n\n    // NOTE If dates are missing, we can't use the timeWeek ranges without\n    // checking if the tick has values\n    // TODO Number of x-ticks, number of y-ticks - function of width?\n    let interval = parseInt(this.X.length / 10);\n    if (interval < 1) {\n      interval = 1;\n    }\n\n    let xTicks = d3.filter(this.X, (d, i) => i % interval === 0);\n\n    // Construct scales and axes\n    // NOTE scaleBand takes all 'categorical' x-axis items - not just extent\n    // TODO Play further with padding and align\n    this.xScale = d3\n      .scaleBand(this.X, this.getRangeX(dimensions, margin))\n      .padding(this.options.BAND_PADDING)\n      .align(0.1);\n    const yScale = d3.scaleLinear(this.getDomainY(), yRange);\n    const yScaleVolume = d3.scaleLinear(this.yDomainVolume, yRangeVolume);\n\n    // NOTE The date formatter needs to be created because it uses a\n    // closure to determine a new year\n    // TODO A method to provide custom formatting\n    const dateFormatter = makeDateFormatter();\n    const xAxis = d3\n      .axisBottom(this.xScale)\n      .tickFormat(dateFormatter)\n      .tickValues(xTicks)\n      .tickSize(this.options.X_TICK_SIZE);\n\n    // The band width will be used for correctly positioning the tooltip\n    this.bandWidth = this.xScale.step();\n\n    // TODO Set number of ticks\n    const yAxis = d3\n      .axisLeft(yScale)\n      .ticks(priceHeight / 40, yFormat)\n      .tickSize(this.options.Y_TICK_SIZE);\n\n    const yAxisVolume = d3\n      .axisRight(yScaleVolume)\n      .ticks(1) // Never show more than 1 non-zero tick for the volume\n      .tickFormat(volume)\n      .tickSize(3);\n\n    // Create SVG\n    this.createSVG(elem, dimensions);\n\n    const bandPadding = (this.bandWidth * this.options.BAND_PADDING) / 2;\n\n    // X-axis\n    this.svg\n      .append(\"g\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .attr(\n        \"transform\",\n        `translate(${bandPadding},${height - margin.bottom + this.options.X_TICK_GUTTER})`,\n      )\n      .call(xAxis)\n      .call((g) => g.select(\".domain\").remove());\n\n    // Price y-axis\n    this.svg\n      .append(\"g\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .attr(\n        \"transform\",\n        `translate(${margin.left - this.options.Y_TICK_GUTTER},0)`,\n      )\n      .call(yAxis)\n      .call((g) => g.select(\".domain\").remove())\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .clone()\n          .attr(\"stroke\", \"#bbb\") // Works for black or white background at 50% opacity\n          .attr(\"stroke-opacity\", 0.5)\n          .attr(\"x1\", this.options.Y_TICK_GUTTER)\n          .attr(\n            \"x2\",\n            width + this.options.Y_TICK_GUTTER - margin.left - margin.right,\n          ),\n      )\n      .call((g) =>\n        g\n          .append(\"text\")\n          .attr(\"x\", -margin.left)\n          .attr(\"y\", 10)\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"text-anchor\", \"start\")\n          .text(yLabel),\n      );\n\n    // Volume y-axis\n    this.svg\n      .append(\"g\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .attr(\"transform\", `translate(${width - margin.right},0)`)\n      .call(yAxisVolume)\n      .call((g) => g.select(\".domain\").remove())\n      .call((g) =>\n        g\n          .append(\"text\")\n          .attr(\"x\", -margin.left)\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"text-anchor\", \"start\")\n          .text(yLabel),\n      );\n\n    // Plot OHLC candle sticks\n    const g = this.svg\n      .append(\"g\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-linecap\", \"butt\") // NOTE using 'square' distorts size\n      .selectAll(\"g\")\n      .data(this.I)\n      .join(\"g\")\n      .attr(\n        \"transform\",\n        (i) => `translate(${this.xScale(this.X[i]) + this.bandWidth / 2.0},0)`,\n      );\n\n    g.append(\"line\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"opacity\", 0.8)\n      .attr(\"y1\", yScale(this.minPrice))\n      .attr(\"y2\", yScale(this.minPrice))\n      .transition()\n      .duration(this.options.ANIMATION_DURATION_MS)\n      .attr(\"y1\", (i) => yScale(this.Yl[i]))\n      .attr(\"y2\", (i) => yScale(this.Yh[i]));\n\n    g.append(\"line\")\n      .attr(\"stroke-width\", this.xScale.bandwidth())\n      .attr(\"stroke\", (i) => this.getColor(i))\n      .attr(\"y1\", yScale(this.minPrice))\n      .attr(\"y2\", yScale(this.minPrice))\n      .transition()\n      .duration(this.options.ANIMATION_DURATION_MS)\n      .attr(\"y1\", (i) => yScale(this.Yo[i]))\n      .attr(\"y2\", (i) => yScale(this.Yc[i]));\n\n    // Plot volume\n    const vol = this.svg\n      .append(\"g\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-linecap\", \"butt\") // NOTE using 'square' distorts length\n      .selectAll(\"g\")\n      .data(this.I)\n      .join(\"g\")\n      .attr(\n        \"transform\",\n        (i) => `translate(${this.xScale(this.X[i]) + this.bandWidth / 2.0},0)`,\n      );\n\n    vol\n      .append(\"line\")\n      .attr(\"y1\", yScaleVolume(0))\n      .attr(\"y2\", yScaleVolume(0))\n      .attr(\"stroke-width\", this.xScale.bandwidth())\n      .attr(\"stroke\", (i) => this.getColor(i))\n      .style(\"opacity\", this.options.VOLUME_OPACITY)\n      .transition()\n      .duration(this.options.ANIMATION_DURATION_MS)\n      .attr(\"y2\", (i) => yScaleVolume(this.Yv[i]));\n  }\n\n  enableHover(move, leave) {\n    // Enable hover events for the chart. On move, determine which band is being\n    // hovered over and send an object of its OHLCV data to the move callback.\n    // The leave callback is triggered when the pointer leaves the SVG elem\n    // Calculate the Voronoi of a single line of x-coordinates\n    const points = d3.map(this.X, (d) => [\n      this.xScale(d) + this.bandWidth / 2,\n      1,\n    ]);\n    const delaunay = d3.Delaunay.from(points);\n\n    let prevIndex = null;\n\n    const pointermove = (evt) => {\n      const [xm] = d3.pointer(evt);\n      const index = delaunay.find(xm, 1);\n\n      // Only trigger the callback when the index changes\n      if (prevIndex && prevIndex == index) {\n        return;\n      }\n\n      prevIndex = index;\n\n      // Include the index's OHLCV data and a change from the last close\n      let data = {\n        x: this.X[index],\n        o: this.Yo[index],\n        h: this.Yh[index],\n        l: this.Yl[index],\n        c: this.Yc[index],\n        v: this.Yv[index],\n        // TODO Return formatted values?\n      };\n\n      if (index > 0) {\n        data.prev = this.Yc[index - 1];\n        if (data.prev) {\n          data.delta = data.c - data.prev;\n          data.percent = data.delta / data.prev;\n          data.color = this.options.OHLC_COLORS[1 + Math.sign(-data.delta)];\n        }\n      }\n\n      // TODO Always enable highlight?\n      if (move) {\n        move.call(this, data);\n      }\n    };\n\n    this.svg.on(\n      \"pointermove\",\n      throttle(pointermove, this.options.eventLatency),\n    );\n\n    if (leave) {\n      this.svg.on(\"pointerleave\", leave);\n    }\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport function getDimensions(\n  elem,\n  { ratio = 0.2, maxWidth = 1600, minWidth = 400, minHeight = 300 } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.min([chart.offsetWidth, maxWidth]);\n  width = d3.max([chart.offsetWidth, minWidth]);\n  let height = d3.max([parseInt(ratio * width), minHeight]);\n  return [width, height];\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Add some padding\n  return width + options.X_TICK_GUTTER + 5;\n}\n", "import * as d3 from \"d3\";\n\nimport { Options } from \"./options\";\nimport { getDimensions } from \"./layout\";\n\nexport class Chart {\n  // By default, tick format functions are null, which will use the default D3\n  // functions. These can be overridden by sub-classes\n  tickFormatX = null;\n  tickFormatY = null;\n\n  constructor(data, options = {}) {\n    this.options = new Options(options);\n    this.data = data; // Save the original data in case we want to recalculate\n    this.parse(data);\n  }\n\n  getMargin(width, height) {\n    return {\n      top: 15,\n      right: 15,\n      bottom: 25,\n      left: 45,\n    };\n  }\n\n  getTickValuesX() {\n    // D3.js will use the default tick values if null is used\n    return null;\n  }\n\n  getTickValuesY() {\n    // D3.js will use the default tick values if null is used\n    return null;\n  }\n\n  parse(data) {\n    // This data parse is specific to line series data\n    this.X = this.parseX(data);\n    this.Y = this.parseY(data);\n    this.Z = this.parseZ(data);\n\n    // Get distinct items from the set of Z values\n    this.items = new Set(this.Z);\n\n    // Is defined?\n    // TODO This doesn't work for missing values, only null or undefined\n    const defined = (d, i) => !isNaN(this.X[i]) && !isNaN(this.Y[i]);\n    this.D = d3.map(data, defined);\n\n    // Grouping\n    this.I = d3.range(this.X.length);\n    this.grouping = d3.group(this.I, (i) => this.Z[i]); // {name: [indexes...]}\n\n    // Colors\n    this.setColors(data);\n  }\n\n  formatX(value) {\n    // Function for formatting X values, called before sending to hover data callbacks\n    return value;\n  }\n\n  formatY(value) {\n    // Function for formatting Y values, called before sending to hover data callbacks\n    return value;\n  }\n\n  formatZ(key) {\n    // Function for formatting Z values, called before sending to hover data callbacks\n    return key;\n  }\n\n  parseX(data) {\n    return d3.map(data, (d) => d3.isoParse(d[0]));\n  }\n\n  parseY(data) {\n    return d3.map(data, (d) => d[1]);\n  }\n\n  parseZ(data) {\n    return d3.map(data, (d) => d[2]);\n  }\n\n  getDomainX() {\n    return d3.extent(this.X);\n  }\n\n  getRangeX(dimensions, margin) {\n    return [margin.left, dimensions.width - margin.right];\n  }\n\n  getDomainY() {\n    return d3.extent(this.Y);\n  }\n\n  getRangeY(dimensions, margin) {\n    return [dimensions.height - margin.bottom, margin.top];\n  }\n\n  setColors(data) {\n    this.colors = d3\n      .scaleOrdinal()\n      .domain(this.items)\n      .range(this.options.COLORS);\n  }\n\n  getColor(z) {\n    return this.colors(z);\n  }\n\n  getDimensions(elem) {\n    // Given the chart's DOM element, return the desired width and height for drawing\n    return getDimensions(elem, { ratio: 0.35 });\n  }\n\n  createSVG(elem, dimensions) {\n    // Clear any existing chart\n    d3.select(elem).selectAll(\"svg\").remove();\n\n    // Create a new chart\n    this.svg = d3\n      .select(elem)\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, dimensions.width, dimensions.height])\n      .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n      .style(\"-webkit-tap-highlight-color\", \"transparent\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .style(\"overflow\", \"visible\");\n  }\n\n  clear() {\n    // Clear all drawn elements, must have an element set\n    if (this.svg) this.svg.selectAll(\"*\").remove();\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport class Options {\n  constructor(options = {}) {\n    this.ANIMATION_DURATION_MS = 500;\n    // TODO Allow either number of x-ticks OR minimum x tick spacing\n    this.X_TICK_SIZE = 4;\n    this.X_TICK_GUTTER = 3;\n    this.Y_TICK_SIZE = 0;\n    this.Y_TICK_GUTTER = 5; // Space between tick label and grid\n    this.FONT_SIZE = \"13px\";\n    this.COLORS = d3.schemeCategory10;\n\n    // OHLC\n    this.BAND_PADDING = 0.2; // As a percentage of the band\n    this.VOLUME_OPACITY = 0.6;\n    this.OHLC_COLORS = [\"#1ebc8c\", \"#b2b2b2\", \"#f34d27\"]; // [up, no change, down]\n\n    // Line\n    this.STROKE_WIDTH = 1.5;\n    this.HIGHLIGHT_STROKE_WIDTH = 2.0;\n    this.BACKGROUND_OPACITY = 0.3; // When another line is highlighted\n    this.DOT_RADIUS = 3.0;\n\n    // Bar\n    this.BAR_STROKE_WIDTH = 0.0;\n\n    // TODO POINTER MOVE FPS\n    this.EVENT_FPS = 48;\n\n    // Allow user to override any of the above defaults\n    Object.assign(this, options);\n  }\n\n  get eventLatency() {\n    return parseInt(1000 / this.EVENT_FPS);\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport const month = d3.utcFormat(\"%b\");\nexport const monthDay = d3.utcFormat(\"%b %-d\");\nexport const monthYear = d3.utcFormat(\"%b %Y\");\nexport const monthDayYear = d3.utcFormat(\"%b %-d, %Y\");\nexport const fullMonthDayYear = d3.utcFormat(\"%B %-d, %Y\");\n\nexport function makeDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthDayYear(d);\n    }\n    return monthDay(d);\n  };\n}\n\nexport function makeMonthlyDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthYear(d);\n    }\n    return month(d);\n  };\n}\n", "export function throttle(fn, timeout) {\n  var free = true;\n  return function () {\n    if (free) {\n      fn.apply(this, arguments);\n      free = false;\n      setTimeout(() => {\n        free = true;\n      }, timeout);\n    }\n  };\n}\n", "export const percentFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n  signDisplay: \"exceptZero\",\n});\n\nexport const priceFmt = new Intl.NumberFormat(\"en-US\", {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport const smallPriceFmt = new Intl.NumberFormat(\"en-US\", {\n  maximumSignificantDigits: 3,\n});\n\nexport const magFormatter = new Intl.NumberFormat(\"en-US\", {\n  notation: \"compact\",\n  compactDisplay: \"short\",\n  minimumFractionDigits: 1,\n  maximumFractionDigits: 2,\n});\n\nexport const percentAxisFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0,\n  signDisplay: \"exceptZero\",\n});\n\nexport const preciseFormatter = new Intl.NumberFormat(\"en-US\", {\n  notation: \"compact\",\n  compactDisplay: \"short\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 3,\n});\n\nexport const volume = function (value) {\n  if (!value) return; // Never show 0\n  if (value >= 1e9) {\n    return `${value / 1e9}B`; // Show billions\n  }\n  return `${value / 1e6}M`; // Show millions\n};\n"],
  "mappings": "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",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "ohlcv_exports", "__export", "OHLCV", "d3", "d3", "getDimensions", "elem", "ratio", "maxWidth", "minWidth", "minHeight", "chart", "width", "height", "maxTickWidth", "defaults", "domain", "format", "options", "hidden", "scale", "axis", "labels", "bbox", "d3", "d3", "Options", "options", "Chart", "data", "options", "__publicField", "Options", "width", "height", "defined", "d", "i", "value", "key", "dimensions", "margin", "z", "elem", "getDimensions", "d3", "month", "monthDay", "monthYear", "monthDayYear", "fullMonthDayYear", "makeDateFormatter", "lastYear", "d", "year", "throttle", "fn", "timeout", "free", "percentFormatter", "priceFmt", "smallPriceFmt", "magFormatter", "percentAxisFormatter", "preciseFormatter", "volume", "value", "OHLCV", "Chart", "data", "d", "width", "height", "margin", "maxTickWidth", "volume", "maxPrice", "index", "elem", "dimensions", "chartHeight", "priceHeight", "yRange", "yRangeVolume", "yFormat", "yLabel", "interval", "xTicks", "i", "yScale", "yScaleVolume", "dateFormatter", "makeDateFormatter", "xAxis", "yAxis", "yAxisVolume", "bandPadding", "g", "move", "leave", "points", "delaunay", "prevIndex", "pointermove", "evt", "xm", "throttle"]
}
