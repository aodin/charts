{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../src/candlestick.js", "../src/layout.js", "../src/ticks.js", "../src/timeseries.js", "../src/throttle.js", "../src/formats.js"],
  "sourcesContent": ["module.exports = d3", "import * as d3 from \"d3\";\n\nimport { Layout, getLayout, appendSVG } from \"./layout\";\nimport { maxLabelSize, filterTicks } from \"./ticks\";\nimport { makeDateFormatter } from \"./timeseries\";\nimport { throttle } from \"./throttle\";\nimport { volume } from \"./formats\";\n\nexport function parseArray(d) {\n  return {\n    x: d3.isoParse(d[0]),\n    o: d[1],\n    h: d[2],\n    l: d[3],\n    c: d[4],\n    v: d[5],\n  };\n}\n\nexport function parseVerboseObject(d) {\n  return {\n    x: d3.isoParse(d.date),\n    o: d.open,\n    h: d.high,\n    l: d.low,\n    c: d.close,\n    v: d.volume,\n  };\n}\n\nfunction signOf(d) {\n  // TODO Assumes both open and close are defined\n  return 1 + Math.sign(d.o - d.c);\n}\n\nfunction barClass(d) {\n  // Append a class to the bar depending on its delta\n  const c = [\"up\", \"even\", \"down\"][signOf(d)];\n  return [\"bar\", c].join(\" \");\n}\n\nfunction zoomRange(domain, width, start, end) {\n  // Return the range extent needed to zoom to the start and end indices of the domain\n  let w = end - start + 1;\n  let ratio = 1;\n  if (w < domain.length) {\n    ratio = domain.length / w;\n  }\n  const zoomWidth = width * ratio;\n  const offsetX = (start / domain.length) * zoomWidth;\n  return [0 - offsetX, zoomWidth - offsetX];\n}\n\nfunction extentData(data, start = 0, end) {\n  // Calculate the extent of the price data, optionally with a slice of the data\n  if (end) {\n    data = data.slice(start, end + 1);\n  }\n  const minY = d3.min(d3.map(data, (d) => d.l));\n  return [minY, d3.max(d3.map(data, (d) => d.h))];\n}\n\nfunction invertBand(scale, x) {\n  const domain = scale.domain();\n  const padOuter = scale(domain[0]);\n  const eachBand = scale.step();\n  const index = Math.floor((x - padOuter) / eachBand);\n  return Math.max(0, Math.min(index, domain.length - 1));\n}\n\nexport class Candlestick {\n  // Allow a custom formatting of prices, setting null will use default formats\n  priceFormat = d3.format(\",~f\");\n\n  // Candlestick expects data in the format [{x, o, h, l, c, v}...]\n  // Specify a parser if your input data is in a different format\n  constructor(data, parser = (d) => d) {\n    // Default config\n    this.config = {\n      VOLUME_RATIO: 0.0,\n      LOG_Y: false, // We need to know which scale is used for proper tick formats\n      SCREEN_HEIGHT_FRACTION: 0.5,\n      BAND_PAD: 0.1,\n      DURATION_MS: 500,\n      PRICE_AXIS_RIGHT: false,\n      VOLUME_AXIS_RIGHT: true,\n      HIDE_VOLUME_AXIS: false,\n      VOLUME_TICK_COUNT: 1,\n    };\n\n    // Get data in a {x, o, h, l, c, v} format\n    // TODO Warn if data wasn't parsed\n    this.data = d3.map(data, parser);\n\n    // Also save the X axis, since it is used for filtering tick labels\n    this.X = d3.map(this.data, (d) => d.x);\n\n    // Zoom works by setting the start and end indices\n    // By default, all data is shown\n    this.start = 0;\n    this.end = this.data.length - 1;\n  }\n\n  get volumeAxesIsVisible() {\n    return Boolean(this.config.VOLUME_RATIO) && !this.config.HIDE_VOLUME_AXIS;\n  }\n\n  get volumeAxesVisibility() {\n    return this.volumeAxesIsVisible ? \"visible\" : \"hidden\";\n  }\n\n  get priceTickFormat() {\n    // Linear axes can use the priceFormat directly, but log axes need additional config\n    if (this.config.LOG_Y) {\n      const numTicks = d3.max([this.scaleLinear.ticks().length, 5]);\n      return this.scaleLog.tickFormat(numTicks, this.priceFormat);\n    } else {\n      return this.priceFormat;\n    }\n  }\n\n  get priceAxisIndex() {\n    if (this.config.PRICE_AXIS_RIGHT) {\n      return d3.axisRight(this.scaleY).tickFormat(this.priceTickFormat);\n    }\n    return d3.axisLeft(this.scaleY).tickFormat(this.priceTickFormat);\n  }\n\n  get gridWidth() {\n    return -this.layout.innerWidth - 5;\n  }\n\n  /* Config chained methods */\n  animationDuration(value) {\n    this.config.DURATION_MS = value;\n    return this;\n  }\n\n  setBandPadding(value) {\n    this.config.BAND_PAD = value;\n    return this;\n  }\n\n  noAnimation() {\n    return this.animationDuration(0);\n  }\n\n  priceAxisRight() {\n    // The price axis ticks and labels will be shown on the right of the chart\n    this.config.PRICE_AXIS_RIGHT = true;\n    return this;\n  }\n\n  showVolume(ratio = 0.1) {\n    // TODO Allow to be called dynamically?\n    this.config.VOLUME_RATIO = ratio;\n    return this;\n  }\n\n  hideVolume() {\n    // TODO Allow to be called dynamically?\n    return this.showVolume(0.0);\n  }\n\n  hideVolumeAxis() {\n    // The volume chart will still be shown, but without a label\n    this.config.HIDE_VOLUME_AXIS = true;\n    return this;\n  }\n\n  volumeTickCount(value=1) {\n    // Number of volume axis ticks that should be shown\n    this.config.VOLUME_TICK_COUNT = value;\n    return this;\n  }\n\n  defaultLog() {\n    this.config.LOG_Y = true;\n    return this;\n  }\n\n  defaultLinear() {\n    this.config.LOG_Y = false;\n    return this;\n  }\n\n  screenHeightFraction(value) {\n    this.config.SCREEN_HEIGHT_FRACTION = value;\n    return this;\n  }\n  /* End config chained methods */\n\n  render(selector) {\n    // The selector can either be for an:\n    // 1. SVG element with width and height attributes (TODO fallback to viewbox)\n    // 2. HTML element that has an intrinsic width - an SVG element will be created\n    const elem = d3.select(selector);\n    if (!elem.node()) {\n      throw new Error(\n        `Unable to find a DOM element for selector '${selector}'`,\n      );\n    }\n\n    if (elem.node().tagName === \"svg\") {\n      this.svg = elem;\n      const width = +this.svg.attr(\"width\");\n      const height = +this.svg.attr(\"height\");\n      if (width && height) {\n        this.layout = new Layout(width, height);\n      } else {\n        // TODO SVGs must have a width or height or the defaults will be returned\n        this.layout = getLayout(selector, {\n          screenHeightFraction: this.config.SCREEN_HEIGHT_FRACTION,\n        });\n      }\n    } else {\n      this.layout = getLayout(selector, {\n        screenHeightFraction: this.config.SCREEN_HEIGHT_FRACTION,\n      });\n      this.svg = appendSVG(selector, this.layout.width, this.layout.height);\n    }\n\n    // The price and volume portions of the chart will share an x-axis\n    const volumeHeight = this.layout.innerHeight * this.config.VOLUME_RATIO;\n    const priceHeight = this.layout.innerHeight - volumeHeight;\n\n    const maxVolume = d3.max(d3.map(this.data, (d) => d.v));\n\n    this.scaleVolume = d3\n      .scaleLinear()\n      .domain([0, maxVolume])\n      .range([volumeHeight, 0])\n      .clamp(true)\n      .nice();\n\n    // Right pad the volume ticks\n    if (this.volumeAxesIsVisible) {\n      const [volWidth, volHeight] = maxLabelSize(\n        this.layout,\n        this.scaleVolume.copy(),\n        volume,\n      );\n      this.layout.pad.right = volWidth + 5;\n    }\n\n    let domainY = extentData(this.data);\n    const minY = domainY[0];\n    const rangeY = [priceHeight, 0];\n\n    // Axes\n    this.scaleLinear = d3\n      .scaleLinear()\n      .domain(domainY)\n      .range(rangeY)\n      .clamp(true);\n    this.scaleLog = d3.scaleLog().domain(domainY).range(rangeY).clamp(true);\n\n    // Get the max tick label width for the y-axis on both linear and log scales\n    const [logWidth, logHeight] = maxLabelSize(\n      this.layout,\n      this.scaleLog.copy(),\n      this.priceFormat,\n    );\n    const [linearWidth, linearHeight] = maxLabelSize(\n      this.layout,\n      this.scaleLinear.copy(),\n      this.priceFormat,\n    );\n    const labelWidthY = d3.max([logWidth, linearWidth]);\n\n    // Left pad the the y-axis labels\n    // TODO Option for additional padding\n    if (this.config.PRICE_AXIS_RIGHT) {\n      this.layout.pad.left = 10;\n      this.layout.pad.right = labelWidthY + 10;\n    } else {\n      this.layout.pad.left = labelWidthY + 10;\n    }\n\n    // Create a clip path for the inner data element to hide any overflow content\n    this.svg\n      .append(\"defs\")\n      .append(\"clipPath\")\n      .attr(\"id\", \"inner-clip-path\")\n      .append(\"rect\")\n      .attr(\"width\", this.layout.innerWidth)\n      .attr(\"height\", this.layout.innerHeight);\n\n    // Set the inner display\n    this.inner = this.svg\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left}, ${this.layout.pad.top})`,\n      );\n\n    this.scaleX = d3\n      .scaleBand(this.X, [0, this.layout.innerWidth])\n      .paddingInner(this.config.BAND_PAD)\n      .align(0.5);\n    // NOTE do not use round\n\n    // NOTE The date formatter needs to be created because it uses a\n    // closure to determine a new year\n    let dates = makeDateFormatter();\n\n    // Get the max tick label width for the x-axis\n    const [labelWidthX, labelHeight] = maxLabelSize(\n      this.layout,\n      this.scaleX.copy(),\n      dates,\n    );\n    this.labelWidthX = labelWidthX;\n    const filteredX = filterTicks(this.X, this.layout, labelWidthX);\n\n    // Reset the date formatter\n    dates = makeDateFormatter();\n\n    // Set the zero state\n    this.scaleY = this.config.LOG_Y ? this.scaleLog : this.scaleLinear;\n    const axisY = this.priceAxisIndex;\n\n    this.axisX = d3\n      .axisBottom(this.scaleX)\n      .tickValues(filteredX)\n      .tickFormat(dates)\n      .tickSize(3);\n\n    let yAxisTransform = \"transform(0,0)\";\n    if (this.config.PRICE_AXIS_RIGHT) {\n      // TODO Why the +5?\n      yAxisTransform = `translate(${this.layout.innerWidth + 5},0)`;\n    }\n\n    this.gPrice = this.inner\n      .append(\"g\")\n      .attr(\"transform\", yAxisTransform)\n      .attr(\"class\", \"y axis\")\n      .call(axisY.tickSize(0));\n\n    this.grid = this.inner\n      .append(\"g\")\n      .attr(\"transform\", yAxisTransform)\n      .attr(\"class\", \"grid\")\n      .call(axisY.tickSize(this.gridWidth));\n\n    const bandPad = (this.scaleX.bandwidth() * this.config.BAND_PAD) / 2;\n\n    this.gx = this.inner\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\n        \"transform\",\n        `translate(${bandPad + 0.5},${this.layout.innerHeight + 2})`,\n      )\n      .call(this.axisX);\n\n    this.candles = this.inner\n      .append(\"g\")\n      .attr(\"clip-path\", \"url(#inner-clip-path)\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-linecap\", \"butt\") // NOTE using 'square' distorts size\n      .selectAll(\"g\")\n      .data(this.data)\n      .join(\"g\")\n      .attr(\n        \"transform\",\n        (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n      );\n\n    this.wicks = this.candles\n      .append(\"line\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"class\", \"wick\")\n      .attr(\"y1\", this.scaleY(minY))\n      .attr(\"y2\", this.scaleY(minY));\n\n    this.bars = this.candles\n      .append(\"line\")\n      .attr(\"stroke-width\", this.scaleX.bandwidth())\n      .attr(\"class\", (d) => barClass(d))\n      .attr(\"y1\", this.scaleY(minY))\n      .attr(\"y2\", this.scaleY(minY));\n\n    // Volume elements are always rendered even if their height is zero\n    this.axisVolume = d3\n      .axisRight(this.scaleVolume)\n      .ticks(this.config.VOLUME_TICK_COUNT)\n      .tickFormat(volume)\n      .tickSize(3);\n\n    this.volume = this.inner\n      .append(\"g\")\n      .attr(\"class\", \"volume\")\n      .attr(\n        \"transform\",\n        `translate(0,${this.layout.innerHeight - volumeHeight})`,\n      );\n\n    this.gVolume = this.volume\n      .append(\"g\")\n      .attr(\"class\", \"v axis\")\n      .attr(\"transform\", `translate(${this.layout.innerWidth + 2},0)`)\n      .call(this.axisVolume)\n      .attr(\"visibility\", this.volumeAxesVisibility);\n\n    this.volumeSlots = this.volume\n      .append(\"g\")\n      .attr(\"clip-path\", \"url(#inner-clip-path)\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-linecap\", \"butt\") // NOTE using 'square' distorts size\n      .selectAll(\"g\")\n      .data(this.data)\n      .join(\"g\")\n      .attr(\n        \"transform\",\n        (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n      );\n\n    this.volumeBars = this.volumeSlots\n      .append(\"line\")\n      .attr(\"y1\", this.scaleVolume(0))\n      .attr(\"y2\", this.scaleVolume(0))\n      .attr(\"stroke-width\", this.scaleX.bandwidth())\n      .attr(\"class\", (d) => barClass(d));\n\n    // Brush for zoom\n    this.brush = d3\n      .brushX()\n      .extent([\n        [0, 0],\n        [this.layout.innerWidth, this.layout.innerHeight],\n      ])\n      .on(\"end\", this.zoom.bind(this));\n\n    this.gBrush = this.inner\n      .append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(this.brush.bind(this));\n\n    // Optional spotlight of a bar\n    // Don't call the class \"tooltip\" - that interferes with Bootstrap\n    this.spotlightBar = this.inner\n      .append(\"g\")\n      .lower() // The spotlight should always be the lowest layer of the SVG\n      .attr(\"class\", \"spotlight\")\n      .append(\"rect\")\n      .style(\"display\", \"none\")\n      .style(\"pointer-events\", \"none\");\n\n    // Set the initial prices with the default axes\n    this.update();\n  }\n\n  update() {\n    // Update the chart to start and end on the given x-axis indices\n    // The y-axis will also be updated to the min and max of the data for the given xs\n    const zRange = zoomRange(\n      this.scaleX.domain(),\n      this.layout.innerWidth,\n      this.start,\n      this.end,\n    );\n\n    // Do not update the domain - just the range\n    this.scaleX.range(zRange);\n\n    // Update the axisY according to the new min and max of the data\n    let domainY = extentData(this.data, this.start, this.end);\n\n    this.scaleLinear.domain(domainY);\n    this.scaleLog.domain(domainY); // TODO .nice() can be called here\n\n    this.scaleY = this.config.LOG_Y ? this.scaleLog : this.scaleLinear;\n    const axisY = this.priceAxisIndex;\n\n    // Re-filter the X-axis date labels\n    const filteredX = filterTicks(\n      this.X.slice(this.start, this.end + 1),\n      this.layout,\n      this.labelWidthX,\n    );\n\n    // Reset the date formatter\n    const dates = makeDateFormatter();\n    this.axisX.tickValues(filteredX).tickFormat(dates);\n\n    // Update the x-axis\n    const bandPad = (this.scaleX.bandwidth() * this.config.BAND_PAD) / 2;\n    this.gx\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\n        \"transform\",\n        `translate(${bandPad + 0.5},${this.layout.innerHeight + 2})`,\n      )\n      .call(this.axisX);\n\n    // Update the y-axis\n    this.gPrice\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .call(axisY.tickSize(0));\n\n    // Update the grid\n    this.grid\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .call(axisY.tickFormat(\"\").tickSize(this.gridWidth));\n\n    // Update the candles\n    this.candles\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\n        \"transform\",\n        (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n      );\n\n    this.bars\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"stroke-width\", this.scaleX.bandwidth())\n      .attr(\"y1\", (d) => this.scaleY(d.o))\n      .attr(\"y2\", (d) => this.scaleY(d.c));\n\n    this.wicks\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"y1\", (d) => this.scaleY(d.l))\n      .attr(\"y2\", (d) => this.scaleY(d.h));\n\n    // Hide the spotlight on update - it will reactivate on next hover\n    this.noSpotlight();\n\n    // Update the spotlight width\n    this.spotlightBar\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"width\", this.scaleX.step());\n\n    // Update the volume\n    this.volumeSlots\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\n        \"transform\",\n        (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n      );\n\n    this.volumeBars\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"stroke-width\", this.scaleX.bandwidth())\n      .attr(\"y2\", (d) => this.scaleVolume(d.v || 0));\n  }\n\n  zoom({ selection }) {\n    if (!selection) return;\n    // Get the closest indices to the selection\n    const [x0, x1] = selection;\n    [this.start, this.end] = [\n      invertBand(this.scaleX, x0),\n      invertBand(this.scaleX, x1),\n    ];\n    this.update();\n\n    // Reset the brush\n    this.gBrush.call(this.brush.move, null);\n  }\n\n  reset() {\n    this.start = 0;\n    this.end = this.data.length - 1;\n    this.update();\n  }\n\n  useLog() {\n    this.config.LOG_Y = true;\n    this.update();\n  }\n\n  useLinear() {\n    this.config.LOG_Y = false;\n    this.update();\n  }\n\n  spotlight(index) {\n    // TODO We only need to pad if width is set to bandwidth instead of step\n    // const pad = this.scaleX.bandwidth() * this.scaleX.paddingInner() * 0.5;\n    this.spotlightBar\n      .attr(\"x\", this.scaleX(this.data[index].x))\n      .attr(\"width\", this.scaleX.step())\n      .attr(\"y\", 0)\n      .attr(\"height\", this.layout.innerHeight)\n      .style(\"display\", \"block\");\n  }\n\n  noSpotlight() {\n    this.spotlightBar.style(\"display\", \"none\");\n  }\n\n  onEvent(move, leave) {\n    // Enable events for the chart. On move, determine which band is being\n    // hovered over and send an object of its OHLCV data to the move callback.\n    // The leave callback is triggered when the pointer leaves the SVG elem.\n    let prevIndex = null;\n\n    const pointermove = (evt) => {\n      const [xm] = d3.pointer(evt);\n      const index = invertBand(this.scaleX, xm - this.layout.pad.left);\n\n      // Only trigger the callback when the index changes\n      if (prevIndex && prevIndex == index) {\n        return;\n      }\n\n      prevIndex = index;\n\n      // Include the index's OHLCV data and a change from the last close\n      let data = structuredClone(this.data[index]);\n      data.index = index;\n\n      if (index > 0) {\n        const prev = this.data[index - 1];\n        if (prev && prev.c) {\n          data.prev = prev.c;\n          data.delta = data.c - prev.c;\n          data.percent = data.delta / prev.c;\n        }\n      }\n\n      if (move) {\n        move.call(this, data);\n      }\n    };\n\n    const pointerleave = (evt) => {\n      prevIndex = null;\n      if (leave) {\n        leave.call(this);\n      }\n    };\n\n    this.svg\n      .on(\"pointermove\", throttle(pointermove, 20.83))\n      .on(\"pointerleave\", pointerleave);\n  }\n\n  // TODO method to append a data point\n  append() {}\n}\n\nexport function OHLC(data, parser) {\n  return new Candlestick(data, parser);\n}\n\nexport function OHLCV(data, parser) {\n  return new Candlestick(data, parser).showVolume();\n}\n", "import * as d3 from \"d3\";\n\n/*\nMost of the layout operations are placing a rectangle within another rectangle.\nWhat is the most generic way to do this?\n*/\n\nexport class Pad {\n  constructor(top, right, bottom, left) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n}\n\nexport function EqualPad(value) {\n  return new Pad(value, value, value, value);\n}\n\nexport function DefaultPad() {\n  return new Pad(15, 15, 25, 25);\n}\n\nexport class Layout {\n  constructor(width, height, pad) {\n    this.width = width;\n    this.height = height;\n    this.pad = pad || DefaultPad();\n  }\n\n  get rangeX() {\n    return [this.pad.left, this.width - this.pad.right];\n  }\n\n  get rangeY() {\n    return [this.height - this.pad.bottom, this.pad.top];\n  }\n\n  get innerWidth() {\n    return this.width - this.pad.left - this.pad.right;\n  }\n\n  get innerHeight() {\n    return this.height - this.pad.top - this.pad.bottom;\n  }\n\n  get innerMinimum() {\n    return d3.min([this.innerWidth, this.innerHeight]);\n  }\n\n  get midpoint() {\n    return [this.width / 2, this.height / 2];\n  }\n}\n\nexport function getLayout(\n  elem,\n  {\n    minWidth = 400,\n    maxWidth = undefined,\n    minHeight = 300,\n    maxHeight = undefined,\n    screenHeightFraction = 0.5,\n  } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.max([chart.offsetWidth, minWidth]);\n  if (maxWidth) {\n    width = d3.min([width, maxWidth]);\n  }\n\n  let height = window.innerHeight * screenHeightFraction;\n  height = d3.max([height, minHeight]);\n  if (maxHeight) {\n    height = d3.min([height, maxHeight]);\n  }\n  return new Layout(width, height, DefaultPad());\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n\n  // Pad\n  return width + options.X_TICK_GUTTER + 5;\n}\n\nexport function appendSVG(selector, width, height) {\n  // Append an SVG element to the selected element\n  return d3\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"viewBox\", [0, 0, width, height])\n    .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n    .style(\"-webkit-tap-highlight-color\", \"transparent\")\n    .style(\"overflow\", \"visible\");\n}\n", "import * as d3 from \"d3\";\n\n/*\nTo filter categorical x ticks, we need to:\n1. get the width of the largest x tick label\n2. get the total available width for the axes in the layout\n3. get the interval that will fit that largest label without overlap\n4. filter the available tick labels by the interval\n*/\n\nexport function maxLabelSize(layout, scale, format = null) {\n  // Create a fake axis to test label tick size\n  // Does not include the tick size or padding, is just the label with\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", layout.innerWidth)\n    .attr(\"height\", layout.innerHeight)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  const axis = d3.axisLeft(scale).tickFormat(format); // Can be null\n\n  const g = hidden.append(\"g\").call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  let height = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n    if (bbox.height > height) {\n      height = bbox.height;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n  return [width, height];\n}\n\nexport function filterTicks(ticks, layout, labelWidth) {\n  // TODO - allow a max to be set?\n  const count = parseInt(layout.innerWidth / (labelWidth + 1)) + 1;\n  const interval = d3.max([parseInt(Math.ceil(ticks.length / count)), 1]);\n  return d3.filter(ticks, (d, i) => i % interval === 0);\n}\n", "import * as d3 from \"d3\";\n\nexport const month = d3.utcFormat(\"%b\");\nexport const monthDay = d3.utcFormat(\"%b %-d\");\nexport const monthYear = d3.utcFormat(\"%b %Y\");\nexport const monthDayYear = d3.utcFormat(\"%b %-d, %Y\");\nexport const fullMonthDayYear = d3.utcFormat(\"%B %-d, %Y\");\n\nexport function makeDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthDayYear(d);\n    }\n    return monthDay(d);\n  };\n}\n\nexport function makeMonthlyDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthYear(d);\n    }\n    return month(d);\n  };\n}\n\nexport function quarter(d) {\n  // Format a Date as a quarter and year\n  const q = parseInt(d.getUTCMonth() / 3) + 1;\n  return `${q}Q ${d.getUTCFullYear()}`;\n}\n\nexport const year = (d) => d.getUTCFullYear();\n", "export function throttle(fn, timeout) {\n  var free = true;\n  return function () {\n    if (free) {\n      fn.apply(this, arguments);\n      free = false;\n      setTimeout(() => {\n        free = true;\n      }, timeout);\n    }\n  };\n}\n", "import * as d3 from \"d3\";\n\nexport const percent = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 2,\n}).format;\n\nexport const percentChange = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n  signDisplay: \"exceptZero\",\n}).format;\n\nexport const magnitude = new Intl.NumberFormat(\"en-US\", {\n  notation: \"compact\",\n  compactDisplay: \"short\",\n  minimumFractionDigits: 1,\n  maximumFractionDigits: 2,\n}).format;\n\nexport const units = d3.format(\",.0f\");\n\nexport const volume = function (value) {\n  if (!value) return; // Never show 0\n  if (value >= 1e9) return `${value / 1e9}B`; // Billions\n  if (value >= 1e6) return `${value / 1e6}M`; // Millions\n  return units(value);\n};\n"],
  "mappings": "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",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "candlestick_exports", "__export", "Candlestick", "OHLC", "OHLCV", "parseArray", "parseVerboseObject", "d3", "d3", "Pad", "top", "right", "bottom", "left", "DefaultPad", "Pad", "Layout", "width", "height", "pad", "getLayout", "elem", "minWidth", "maxWidth", "minHeight", "maxHeight", "screenHeightFraction", "chart", "appendSVG", "selector", "width", "height", "d3", "maxLabelSize", "layout", "scale", "format", "hidden", "axis", "labels", "width", "height", "bbox", "filterTicks", "ticks", "labelWidth", "count", "interval", "d", "i", "d3", "month", "monthDay", "monthYear", "monthDayYear", "fullMonthDayYear", "makeDateFormatter", "lastYear", "d", "year", "throttle", "fn", "timeout", "free", "d3", "percent", "percentChange", "magnitude", "units", "volume", "value", "parseArray", "d", "parseVerboseObject", "signOf", "barClass", "zoomRange", "domain", "width", "start", "end", "w", "ratio", "zoomWidth", "offsetX", "extentData", "data", "invertBand", "scale", "x", "padOuter", "eachBand", "index", "Candlestick", "parser", "__publicField", "numTicks", "value", "selector", "elem", "height", "Layout", "getLayout", "appendSVG", "volumeHeight", "priceHeight", "maxVolume", "volWidth", "volHeight", "maxLabelSize", "volume", "domainY", "minY", "rangeY", "logWidth", "logHeight", "linearWidth", "linearHeight", "labelWidthY", "dates", "makeDateFormatter", "labelWidthX", "labelHeight", "filteredX", "filterTicks", "axisY", "yAxisTransform", "bandPad", "zRange", "selection", "x0", "x1", "move", "leave", "prevIndex", "pointermove", "evt", "xm", "prev", "pointerleave", "throttle", "OHLC", "OHLCV"]
}
