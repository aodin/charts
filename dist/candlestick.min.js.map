{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../src/candlestick.js", "../src/chart.js", "../src/colors.js", "../src/formats.js", "../src/layout.js", "../src/parsers.js", "../src/throttle.js", "../src/ticks.js", "../src/timeseries.js", "../src/tooltip.js"],
  "sourcesContent": ["module.exports = d3", "import * as d3 from \"d3\";\n\nimport { Chart } from \"./chart\";\nimport { volume } from \"./formats\";\nimport { layoutSVG } from \"./layout\";\nimport { parseArrayOHLCV, parseVerboseOHLCV } from \"./parsers\";\nimport { throttle } from \"./throttle\";\nimport { maxLabelSize, filterTicksAutoOffset } from \"./ticks\";\nimport { makeDateFormatter } from \"./timeseries\";\nimport { placeTooltip, placeTooltipTop } from \"./tooltip\";\n\nexport { parseArrayOHLCV, parseVerboseOHLCV, placeTooltip, placeTooltipTop };\n\n// Clip paths require a unique ID\nlet uniqueID = 0;\n\nfunction signOf(d) {\n  // TODO Assumes both open and close are defined\n  return 1 + Math.sign(d.o - d.c);\n}\n\nconst classes = [\"up\", \"even\", \"down\"];\n\nfunction deltaClass(d) {\n  // Return's a class depending on the day's delta\n  return classes[signOf(d)];\n}\n\nfunction zoomRange(domain, width, start, end) {\n  // Return the range extent needed to zoom to the start and end indices of the domain\n  let w = end - start + 1;\n  let ratio = 1;\n  if (w < domain.length) {\n    ratio = domain.length / w;\n  }\n  const zoomWidth = width * ratio;\n  const offsetX = (start / domain.length) * zoomWidth;\n  return [0 - offsetX, zoomWidth - offsetX];\n}\n\nfunction extentData(data, start = 0, end) {\n  // Calculate the extent of the price data, optionally with a slice of the data\n  if (end) {\n    data = data.slice(start, end + 1);\n  }\n  const minY = d3.min(d3.map(data, (d) => d.l));\n  return [minY, d3.max(d3.map(data, (d) => d.h))];\n}\n\nfunction invertBand(scale, x) {\n  const domain = scale.domain();\n  const padOuter = scale(domain[0]);\n  const eachBand = scale.step();\n  const index = Math.floor((x - padOuter) / eachBand);\n  return Math.max(0, Math.min(index, domain.length - 1));\n}\n\nexport class CandlestickChart extends Chart {\n  // Allow a custom formatting of prices, setting null will use default formats\n  priceFormat = d3.format(\",~f\");\n\n  // CandlestickChart expects data in the format [{x, o, h, l, c, v}...]\n  // Specify a parser if your input data is in a different format\n  constructor(data, parser = (d) => d) {\n    super(data, parser);\n\n    // Default config\n    this.config = {\n      VOLUME_RATIO: 0.0,\n      LOG_Y: false, // We need to know which scale is used for proper tick formats\n      BAND_PAD: 0.1,\n      DURATION_MS: 500,\n      PRICE_AXIS_RIGHT: false,\n      VOLUME_AXIS_RIGHT: true,\n      HIDE_VOLUME_AXIS: false,\n      VOLUME_TICK_COUNT: 1,\n      RESCALE_Y: true,\n      LAYOUT: {},\n\n      // Additional layout padding\n      // TODO Specify an additional layout?\n      MARGIN_RIGHT: 10,\n      MARGIN_LEFT: 10,\n      MARGIN_LABEL: 10,\n      MARGIN_AXES: 5,\n      MARGIN_TICK: 2,\n    };\n\n    // Get data in a {x, o, h, l, c, v} format\n    // TODO Warn if data wasn't parsed correctly\n    this.data = d3.map(data, parser);\n\n    // Also save the X axis, since it is used for filtering tick labels\n    this.X = d3.map(this.data, (d) => d.x);\n\n    // Zoom works by setting the start and end indices\n    // By default, all data is shown\n    this.start = 0;\n    this.end = this.data.length - 1;\n  }\n\n  /* Config chained methods */\n  doNotRescaleY() {\n    // Do not rescale the Y axis on zoom\n    this.config.RESCALE_Y = false;\n    return this;\n  }\n\n  bandPadding(value) {\n    this.config.BAND_PAD = value;\n    return this;\n  }\n\n  priceAxisRight() {\n    // The price axis ticks and labels will be shown on the right of the chart\n    this.config.PRICE_AXIS_RIGHT = true;\n    return this;\n  }\n\n  showVolume(ratio = 0.1) {\n    // TODO Allow to be called dynamically?\n    this.config.VOLUME_RATIO = ratio;\n    return this;\n  }\n\n  hideVolume() {\n    // TODO Allow to be called dynamically?\n    return this.showVolume(0.0);\n  }\n\n  hideVolumeAxis() {\n    // The volume chart will still be shown, but without a label\n    this.config.HIDE_VOLUME_AXIS = true;\n    return this;\n  }\n\n  volumeTickCount(value = 1) {\n    // Number of volume axis ticks that should be shown\n    this.config.VOLUME_TICK_COUNT = value;\n    return this;\n  }\n\n  defaultLog() {\n    this.config.LOG_Y = true;\n    return this;\n  }\n\n  defaultLinear() {\n    this.config.LOG_Y = false;\n    return this;\n  }\n  /* End config chained methods */\n\n  get volumeAxesIsVisible() {\n    return Boolean(this.config.VOLUME_RATIO) && !this.config.HIDE_VOLUME_AXIS;\n  }\n\n  get volumeAxesVisibility() {\n    return this.volumeAxesIsVisible ? \"visible\" : \"hidden\";\n  }\n\n  get priceTickFormat() {\n    // Linear axes can use the priceFormat directly, but log axes need additional config\n    if (this.config.LOG_Y) {\n      const numTicks = d3.max([this.scaleLinear.ticks().length, 2]);\n      return this.scaleLog.tickFormat(numTicks, this.priceFormat);\n    } else {\n      return this.priceFormat;\n    }\n  }\n\n  get priceAxisIndex() {\n    if (this.config.PRICE_AXIS_RIGHT) {\n      return d3.axisRight(this.scaleY).tickFormat(this.priceTickFormat);\n    }\n    return d3.axisLeft(this.scaleY).tickFormat(this.priceTickFormat);\n  }\n\n  get gridWidth() {\n    return -this.layout.innerWidth - this.config.MARGIN_AXES;\n  }\n\n  get wickThickness() {\n    // Wick thickness should at least one pixel, but no greater than 1% of the band\n    return d3.max([this.scaleX.bandwidth() * 0.01, 1.0]);\n  }\n\n  makeDateFormatter() {\n    return makeDateFormatter();\n  }\n\n  get xValues() {\n    return filterTicksAutoOffset(\n      this.X.slice(this.start, this.end + 1),\n      this.layout,\n      this.labelWidthX,\n    );\n  }\n\n  updateLayout() {}\n\n  render(selector) {\n    // If there is no data, do not render\n    if (!this.data.length) return;\n\n    // Set a new clip path ID whenever the chart is rendered\n    const clipPathID = `candlestick-clip-path-${uniqueID++}`;\n\n    // The selector can either be for an:\n    // 1. SVG element with width and height attributes\n    // 2. HTML element that has an intrinsic width - an SVG element will be created\n    [this.svg, this.layout] = layoutSVG(selector, this.config.LAYOUT);\n\n    // The price and volume portions of the chart will share an x-axis\n    const volumeHeight = this.layout.innerHeight * this.config.VOLUME_RATIO;\n    const priceHeight = this.layout.innerHeight - volumeHeight;\n\n    const maxVolume = d3.max(d3.map(this.data, (d) => d.v));\n\n    this.scaleVolume = d3\n      .scaleLinear()\n      .domain([0, maxVolume])\n      .range([volumeHeight, 0])\n      .clamp(true)\n      .nice();\n\n    // Right pad the volume ticks\n    if (this.volumeAxesIsVisible) {\n      const [volWidth, volHeight] = maxLabelSize(\n        this.svg,\n        this.layout,\n        this.scaleVolume.copy(),\n        volume,\n        \"v axis\",\n      );\n      this.layout.pad.right = volWidth + this.config.MARGIN_RIGHT;\n    }\n\n    let domainY = extentData(this.data);\n    const minY = domainY[0];\n    const rangeY = [priceHeight, 0];\n\n    // Axes\n    this.scaleLinear = d3\n      .scaleLinear()\n      .domain(domainY)\n      .range(rangeY)\n      .clamp(true);\n\n    this.scaleLog = d3.scaleLog().domain(domainY).range(rangeY).clamp(true);\n\n    // Get the max tick label width for the y-axis on both linear and log scales\n    const [logWidth, logHeight] = maxLabelSize(\n      this.svg,\n      this.layout,\n      this.scaleLog.copy(),\n      this.priceFormat,\n      \"y axis\",\n    );\n    const [linearWidth, linearHeight] = maxLabelSize(\n      this.svg,\n      this.layout,\n      this.scaleLinear.copy(),\n      this.priceFormat,\n      \"y axis\",\n    );\n    const labelWidthY = d3.max([logWidth, linearWidth]);\n\n    // Left pad the the y-axis labels\n    // TODO Option for additional padding\n    if (this.config.PRICE_AXIS_RIGHT) {\n      this.layout.pad.left = this.config.MARGIN_LEFT;\n      this.layout.pad.right = d3.max([\n        this.layout.pad.right,\n        labelWidthY + this.config.MARGIN_RIGHT,\n      ]);\n    } else {\n      this.layout.pad.left = d3.max([\n        this.layout.pad.left,\n        labelWidthY + this.config.MARGIN_LEFT,\n      ]);\n    }\n\n    // Create a clip path for the inner data element to hide any overflow content\n    this.svg\n      .append(\"defs\")\n      .append(\"clipPath\")\n      .attr(\"id\", clipPathID)\n      .append(\"rect\")\n      .attr(\"width\", this.layout.innerWidth)\n      .attr(\"height\", this.layout.innerHeight);\n\n    // Set the inner display\n    this.inner = this.svg\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left}, ${this.layout.pad.top})`,\n      );\n\n    this.scaleX = d3\n      .scaleBand(this.X, [0, this.layout.innerWidth])\n      .paddingInner(this.config.BAND_PAD)\n      .align(0.5);\n    // NOTE do not use round\n\n    // NOTE The date formatter needs to be created because it uses a\n    // closure to determine a new year\n    let dates = this.makeDateFormatter();\n\n    // Get the max tick label width for the x-axis\n    const [labelWidthX, labelHeight] = maxLabelSize(\n      this.svg,\n      this.layout,\n      this.scaleX.copy(),\n      dates,\n      \"x axis\",\n    );\n    this.labelWidthX = labelWidthX + this.config.MARGIN_LABEL;\n\n    let yTransform = \"transform(0,0)\";\n    if (this.config.PRICE_AXIS_RIGHT) {\n      yTransform = `translate(${this.layout.innerWidth + this.config.MARGIN_AXES},0)`;\n    }\n\n    // Reset the date formatter\n    dates = this.makeDateFormatter();\n\n    // Set the zero state\n    this.scaleY = this.config.LOG_Y ? this.scaleLog : this.scaleLinear;\n    const axisY = this.priceAxisIndex;\n\n    this.grid = this.inner\n      .append(\"g\")\n      .attr(\"transform\", yTransform)\n      .attr(\"class\", \"grid\")\n      .call(axisY.tickSize(this.gridWidth));\n\n    this.axisX = d3\n      .axisBottom(this.scaleX)\n      .tickValues(this.xValues)\n      .tickFormat(dates)\n      .tickSize(3);\n\n    this.gPrice = this.inner\n      .append(\"g\")\n      .attr(\"transform\", yTransform)\n      .attr(\"class\", \"y axis\")\n      .call(axisY.tickSize(0));\n\n    const bandPad = (this.scaleX.bandwidth() * this.config.BAND_PAD) / 2;\n\n    // Volume elements are always rendered even if their height is zero\n    this.axisVolume = d3\n      .axisRight(this.scaleVolume)\n      .ticks(this.config.VOLUME_TICK_COUNT)\n      .tickFormat(volume)\n      .tickSize(3);\n\n    this.volume = this.inner\n      .append(\"g\")\n      .attr(\"class\", \"volume\")\n      .attr(\n        \"transform\",\n        `translate(0,${this.layout.innerHeight - volumeHeight})`,\n      );\n\n    this.gVolume = this.volume\n      .append(\"g\")\n      .attr(\"class\", \"v axis\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.innerWidth + this.config.MARGIN_TICK},0)`,\n      )\n      .call(this.axisVolume)\n      .attr(\"visibility\", this.volumeAxesVisibility);\n\n    this.volumeSlots = this.volume\n      .append(\"g\")\n      .attr(\"clip-path\", `url(#${clipPathID})`)\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-linecap\", \"butt\") // NOTE using 'square' distorts size\n      .selectAll(\"g\")\n      .data(this.data)\n      .join(\"g\")\n      .attr(\n        \"transform\",\n        (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n      );\n\n    this.volumeBars = this.volumeSlots\n      .append(\"line\")\n      .attr(\"y1\", this.scaleVolume(0))\n      .attr(\"y2\", this.scaleVolume(0))\n      .attr(\"stroke-width\", this.scaleX.bandwidth())\n      .attr(\"class\", deltaClass);\n\n    this.price = this.inner.append(\"g\").attr(\"class\", \"price\");\n\n    this.candles = this.price\n      .append(\"g\")\n      .attr(\"clip-path\", `url(#${clipPathID})`)\n      .attr(\"stroke-linecap\", \"butt\") // NOTE using 'square' distorts size\n      .attr(\"stroke\", \"currentColor\")\n      .selectAll(\"g\")\n      .data(this.data)\n      .join(\"g\")\n      .attr(\"class\", deltaClass)\n      .attr(\n        \"transform\",\n        (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n      );\n\n    this.wicks = this.candles\n      .append(\"line\")\n      .attr(\"stroke-width\", this.wickThickness)\n      .attr(\"class\", \"wick\")\n      .attr(\"y1\", this.scaleY(minY))\n      .attr(\"y2\", this.scaleY(minY));\n\n    this.bars = this.candles\n      .append(\"line\")\n      .attr(\"stroke-width\", this.scaleX.bandwidth())\n      .attr(\"class\", \"bar\")\n      .attr(\"y1\", this.scaleY(minY))\n      .attr(\"y2\", this.scaleY(minY));\n\n    // Elements drawn last will appear on top\n    this.gx = this.inner\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\n        \"transform\",\n        `translate(${bandPad + 0.5},${this.layout.innerHeight})`,\n      )\n      .call(this.axisX);\n\n    // Brush for zoom\n    this.brush = d3\n      .brushX()\n      .extent([\n        [0, 0],\n        [this.layout.innerWidth, this.layout.innerHeight],\n      ])\n      .on(\"end\", this.zoom.bind(this));\n\n    this.gBrush = this.inner\n      .append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(this.brush.bind(this));\n\n    // Optional spotlight of a bar\n    // Don't call the class \"tooltip\" - that interferes with Bootstrap\n    this.spotlightBar = this.inner\n      .append(\"g\")\n      .lower() // The spotlight should always be the lowest layer of the SVG\n      .attr(\"class\", \"spotlight\")\n      .append(\"rect\")\n      .style(\"display\", \"none\")\n      .style(\"pointer-events\", \"none\");\n\n    // Set the initial prices with the default axes\n    this.update();\n  }\n\n  update() {\n    // Update the chart to start and end on the given x-axis indices\n    // The y-axis will also be updated to the min and max of the data for the given xs\n    const zRange = zoomRange(\n      this.scaleX.domain(),\n      this.layout.innerWidth,\n      this.start,\n      this.end,\n    );\n\n    // Do not update the domain - just the range\n    this.scaleX.range(zRange);\n\n    // Update the axisY according to the new min and max of the data\n    if (this.config.RESCALE_Y) {\n      let domainY = extentData(this.data, this.start, this.end);\n      this.scaleLinear.domain(domainY);\n      this.scaleLog.domain(domainY); // TODO .nice() can be called here\n    }\n\n    this.scaleY = this.config.LOG_Y ? this.scaleLog : this.scaleLinear;\n    const axisY = this.priceAxisIndex;\n\n    // Reset the date formatter and re-filter the X-axis date labels\n    const dates = this.makeDateFormatter();\n    this.axisX.tickValues(this.xValues).tickFormat(dates);\n\n    // Update the x-axis\n    const bandPad = (this.scaleX.bandwidth() * this.config.BAND_PAD) / 2;\n    this.gx\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\n        \"transform\",\n        `translate(${bandPad + 0.5},${this.layout.innerHeight})`,\n      )\n      .call(this.axisX);\n\n    // Update the y-axis\n    this.gPrice\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .call(axisY.tickSize(0));\n\n    // Update the grid\n    this.grid\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .call(axisY.tickFormat(\"\").tickSize(this.gridWidth));\n\n    // Update the candles\n    this.candles\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\n        \"transform\",\n        (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n      );\n\n    this.bars\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"stroke-width\", this.scaleX.bandwidth())\n      .attr(\"y1\", (d) => this.scaleY(d.o))\n      .attr(\"y2\", (d) => this.scaleY(d.c));\n\n    this.wicks\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"stroke-width\", this.wickThickness)\n      .attr(\"y1\", (d) => this.scaleY(d.l))\n      .attr(\"y2\", (d) => this.scaleY(d.h));\n\n    // Hide the spotlight on update - it will reactivate on next hover\n    this.noSpotlight();\n\n    // Update the spotlight width\n    this.spotlightBar\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"width\", this.scaleX.step());\n\n    // Update the volume\n    this.volumeSlots\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\n        \"transform\",\n        (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n      );\n\n    this.volumeBars\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"stroke-width\", this.scaleX.bandwidth())\n      .attr(\"y2\", (d) => this.scaleVolume(d.v || 0));\n  }\n\n  zoom({ selection }) {\n    if (!selection) return;\n    // Get the closest indices to the selection\n    const [x0, x1] = selection;\n    [this.start, this.end] = [\n      invertBand(this.scaleX, x0),\n      invertBand(this.scaleX, x1),\n    ];\n    this.update();\n\n    // Reset the brush\n    this.gBrush.call(this.brush.move, null);\n  }\n\n  reset() {\n    this.start = 0;\n    this.end = this.data.length - 1;\n    this.update();\n  }\n\n  useLog() {\n    this.config.LOG_Y = true;\n    this.update();\n  }\n\n  useLinear() {\n    this.config.LOG_Y = false;\n    this.update();\n  }\n\n  spotlight(index) {\n    // TODO We only need to pad if width is set to bandwidth instead of step\n    // const pad = this.scaleX.bandwidth() * this.scaleX.paddingInner() * 0.5;\n    this.spotlightBar\n      .attr(\"x\", this.scaleX(this.data[index].x))\n      .attr(\"width\", this.scaleX.step())\n      .attr(\"y\", 0)\n      .attr(\"height\", this.layout.innerHeight)\n      .style(\"display\", \"block\");\n  }\n\n  noSpotlight() {\n    this.spotlightBar.style(\"display\", \"none\");\n  }\n\n  onEvent(move, leave) {\n    // Enable events for the chart. On move, determine which band is being\n    // hovered over and send an object of its OHLCV data to the move callback.\n    // The leave callback is triggered when the pointer leaves the SVG elem.\n    let prevIndex = null;\n\n    const pointermove = (evt) => {\n      const [xm] = d3.pointer(evt);\n      const index = invertBand(this.scaleX, xm - this.layout.pad.left);\n\n      // Only trigger the callback when the index changes\n      if (prevIndex && prevIndex == index) {\n        return;\n      }\n\n      prevIndex = index;\n\n      // Include the index's OHLCV data and a change from the last close\n      let data = structuredClone(this.data[index]);\n      data.index = index;\n\n      if (index > 0) {\n        const prev = this.data[index - 1];\n        if (prev && prev.c) {\n          data.prev = prev.c;\n          data.delta = data.c - prev.c;\n          data.percent = data.delta / prev.c;\n        }\n      }\n\n      if (move) {\n        move.call(this, data);\n      }\n    };\n\n    const pointerleave = (evt) => {\n      prevIndex = null;\n      if (leave) {\n        leave.call(this);\n      }\n    };\n\n    this.svg\n      .on(\"pointermove\", throttle(pointermove, 20.83)) // 48 fps\n      .on(\"pointerleave\", pointerleave);\n  }\n\n  // TODO method to append a data point\n  append() {}\n}\n\nexport function OHLC(data, parser) {\n  return new CandlestickChart(data, parser);\n}\n\nexport function OHLCV(data, parser) {\n  return new CandlestickChart(data, parser).showVolume();\n}\n", "import * as d3 from \"d3\";\n\nimport { quantizeScheme } from \"./colors\";\n\nexport class Chart {\n  // Base class for charts\n  // Currently only has some common chained config methods for layout and animation\n\n  constructor(data, parser = (d) => d) {}\n\n  /* Config chained methods */\n  screenHeightPercent(value) {\n    this.config.LAYOUT.screenHeightPercent = value;\n    return this;\n  }\n\n  minHeight(value) {\n    this.config.LAYOUT.minHeight = value;\n    return this;\n  }\n\n  maxHeight(value) {\n    this.config.LAYOUT.maxHeight = value;\n    return this;\n  }\n\n  height(value) {\n    return this.minHeight(value).maxHeight(value);\n  }\n\n  minWidth(value) {\n    this.config.LAYOUT.minWidth = value;\n    return this;\n  }\n\n  maxWidth(value) {\n    this.config.LAYOUT.maxWidth = value;\n    return this;\n  }\n\n  width(value) {\n    return this.minWidth(value).maxWidth(value);\n  }\n\n  animationDuration(value) {\n    this.config.DURATION_MS = value;\n    return this;\n  }\n\n  noAnimation() {\n    return this.animationDuration(0);\n  }\n}\n\nexport class CategoricalChart extends Chart {\n  // Adds additional chained config methods for schemes and hidden state\n\n  constructor(data, parser = (d) => d) {\n    // Items can be dynamically hidden from the chart\n    super(data, parser);\n    this.hidden = new d3.InternSet();\n  }\n\n  /* Chained config methods */\n  backgroundOpacity(value) {\n    this.config.BACKGROUND_OPACITY = value;\n    return this;\n  }\n\n  yAxisRight() {\n    // The y axis ticks and labels will be shown on the right of the chart\n    this.config.Y_AXIS_RIGHT = true;\n    return this;\n  }\n\n  useDiscreteScheme(scheme) {\n    this.colors = d3.scaleOrdinal().domain(this.Z).range(scheme);\n    return this;\n  }\n\n  useContinuousScheme(scheme, min = 0.0, max = 1.0) {\n    return this.useDiscreteScheme(\n      quantizeScheme(this.Z.length, scheme, min, max),\n    );\n  }\n\n  invertScheme() {\n    this.colors = this.colors.range(this.colors.range().reverse());\n    return this;\n  }\n\n  startHidden() {\n    // The first render will have all items hidden\n    this.hidden = new d3.InternSet(this.Z);\n    return this;\n  }\n  /* End chained config methods */\n\n  hide(...z) {\n    // Add the given z elements to the hidden set\n    this.hidden = this.hidden.union(new d3.InternSet(z));\n    this.toggle();\n  }\n\n  show(...z) {\n    // Remove the given z elements from the hidden set\n    this.hidden = this.hidden.difference(new d3.InternSet(z));\n    this.toggle();\n  }\n\n  setHidden(...z) {\n    this.hidden = new d3.InternSet(z);\n  }\n\n  hideAll() {\n    this.hidden = new d3.InternSet(this.Z);\n    this.toggle();\n  }\n\n  showAll() {\n    this.hidden.clear();\n    this.toggle();\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport function quantizeScheme(n, scheme, min = 0.0, max = 1.0) {\n  if (n === 1) {\n    // If there is only one item, just use the middle of the scheme\n    return [scheme((max - min) / 2.0 + min)];\n  }\n  return d3.quantize((t) => scheme(t * (max - min) + min), n);\n}\n", "import * as d3 from \"d3\";\n\nexport const percent = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 2,\n}).format;\n\nexport const percentChange = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n  signDisplay: \"exceptZero\",\n}).format;\n\nexport const magnitude = new Intl.NumberFormat(\"en-US\", {\n  notation: \"compact\",\n  compactDisplay: \"short\",\n  minimumFractionDigits: 1,\n  maximumFractionDigits: 2,\n}).format;\n\nexport const units = d3.format(\",.0f\");\n\nexport const price = d3.format(\",.2f\");\n\nexport const volume = function (value) {\n  if (!value) return; // Never show 0\n  if (value >= 1e9) return `${value / 1e9}B`; // Billions\n  if (value >= 1e6) return `${value / 1e6}M`; // Millions\n  return units(value);\n};\n", "import * as d3 from \"d3\";\n\n/*\nMost of the layout operations are placing a rectangle within another rectangle.\nWhat is the most generic way to do this?\n*/\n\nexport class Pad {\n  constructor(top, right, bottom, left) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n}\n\nexport function EqualPad(value) {\n  return new Pad(value, value, value, value);\n}\n\nexport function DefaultPad() {\n  return new Pad(15, 15, 25, 25);\n}\n\nexport class Layout {\n  constructor(width, height, pad) {\n    this.width = width;\n    this.height = height;\n    this.pad = pad || DefaultPad();\n  }\n\n  get rangeX() {\n    return [this.pad.left, this.width - this.pad.right];\n  }\n\n  get rangeY() {\n    return [this.height - this.pad.bottom, this.pad.top];\n  }\n\n  get innerWidth() {\n    return this.width - this.pad.left - this.pad.right;\n  }\n\n  get innerHeight() {\n    return this.height - this.pad.top - this.pad.bottom;\n  }\n\n  get innerMinimum() {\n    return d3.min([this.innerWidth, this.innerHeight]);\n  }\n\n  get midpoint() {\n    return [this.width / 2, this.height / 2];\n  }\n}\n\nexport function getLayout(\n  elem,\n  {\n    minWidth = 400,\n    maxWidth = undefined,\n    minHeight = 300,\n    maxHeight = undefined,\n    screenHeightPercent = 0.5,\n  } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.max([chart.offsetWidth, minWidth]);\n  if (maxWidth) {\n    width = d3.min([width, maxWidth]);\n  }\n\n  let height = window.innerHeight * screenHeightPercent;\n  height = d3.max([height, minHeight]);\n  if (maxHeight) {\n    height = d3.min([height, maxHeight]);\n  }\n  return new Layout(width, height, DefaultPad());\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n\n  // Pad\n  return width + options.X_TICK_GUTTER + 5;\n}\n\nexport function appendSVG(selector, width, height) {\n  // Append an SVG element to the selected element\n  return d3\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"viewBox\", [0, 0, width, height])\n    .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n    .style(\"-webkit-tap-highlight-color\", \"transparent\")\n    .style(\"overflow\", \"visible\");\n}\n\nexport function layoutSVG(selector, options) {\n  // Return the SVG elements and its layout\n  // Available options:\n  // * screenHeightPercent\n  // * minWidth\n  // * maxWidth\n  // * minHeight\n  // * maxHeight\n  const elem = d3.select(selector);\n  if (!elem.node()) {\n    throw new Error(`Unable to find a DOM element for selector '${selector}'`);\n  }\n\n  if (elem.node().tagName === \"svg\") {\n    const svg = elem;\n    const width = +svg.attr(\"width\");\n    const height = +svg.attr(\"height\");\n    // TODO Fallback to viewbox\n    if (width && height) {\n      return [svg, new Layout(width, height)];\n    } else {\n      // TODO SVGs must have a width or height or the defaults will be returned\n      const layout = getLayout(selector, options);\n      return [svg, layout];\n    }\n  }\n\n  const layout = getLayout(selector, options);\n  const svg = appendSVG(selector, layout.width, layout.height);\n  return [svg, layout];\n}\n", "import * as d3 from \"d3\";\n\nexport function parseArrayOHLCV(d) {\n  return {\n    x: d3.isoParse(d[0]),\n    o: d[1],\n    h: d[2],\n    l: d[3],\n    c: d[4],\n    v: d[5],\n  };\n}\n\nexport function parseVerboseOHLCV(d) {\n  return {\n    x: d3.isoParse(d.date),\n    o: d.open,\n    h: d.high,\n    l: d.low,\n    c: d.close,\n    v: d.volume,\n  };\n}\n\nexport function parse3dArray(d) {\n  return {\n    x: d[0],\n    y: d[1],\n    z: d[2],\n  };\n}\n\nexport function parseTimeSeries3dArray(d) {\n  return {\n    x: d3.isoParse(d[0]),\n    y: d[1],\n    z: d[2],\n  };\n}\n\nexport function parseTimeSeries2dArray(d) {\n  // No z axis\n  return {\n    x: d3.isoParse(d[0]),\n    y: d[1],\n    z: \"\",\n  };\n}\n\nexport function parseArrayYZ(d) {\n  // For data without an x-axis\n  return {\n    x: null,\n    y: d[0],\n    z: d[1],\n  };\n}\n", "export function throttle(fn, timeout) {\n  var free = true;\n  return function () {\n    if (free) {\n      fn.apply(this, arguments);\n      free = false;\n      setTimeout(() => {\n        free = true;\n      }, timeout);\n    }\n  };\n}\n", "import * as d3 from \"d3\";\n\nexport function maxLabelSize(svg, layout, scale, format = null, cls = \"\") {\n  // Create a fake axis to test label tick size\n  // Does not include the tick size or padding, is just the label width\n  // This access should be part of the current chart's selection and have the same\n  // class values in order to correctly match any CSS that changes label sizes\n  const hidden = svg\n    .append(\"g\")\n    .attr(\"width\", layout.innerWidth)\n    .attr(\"height\", layout.innerHeight)\n    .attr(\"class\", cls)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  const axis = d3.axisLeft(scale).tickFormat(format); // Can be null\n  const g = hidden.call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  let height = 0;\n  labels.each(function () {\n    const elem = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (elem.width > width) {\n      width = elem.width;\n    }\n    if (elem.height > height) {\n      height = elem.height;\n    }\n  });\n\n  hidden.remove();\n  return [width, height];\n}\n\n/*\nIn order to filter categorical ticks, we need:\n1. the width of the largest tick label\n2. the total available width for the axes in the layout\n3. the interval that will fit that largest label without overlap\n4. then filter the available tick labels by the interval\nAn optional offset can be provided, which will skip the ticks with a lower index\n*/\nexport function filterTicks(ticks, layout, labelWidth, offset = 0) {\n  const count = parseInt(layout.innerWidth / (labelWidth + 1)) + 1;\n  const interval = d3.max([parseInt(Math.ceil(ticks.length / count)), 1]);\n  return d3.filter(\n    ticks,\n    (d, i) => i - offset >= 0 && (i - offset) % interval === 0,\n  );\n}\n\n// Another variant of filterTicks that automatically determines an offset\nexport function filterTicksAutoOffset(ticks, layout, labelWidth) {\n  const count = parseInt(layout.innerWidth / (labelWidth + 1)) + 1;\n  const interval = d3.max([parseInt(Math.ceil(ticks.length / count)), 1]);\n  const offset = interval > 1 ? Math.floor(interval / 2) : 0;\n  return d3.filter(\n    ticks,\n    (d, i) => i - offset >= 0 && (i - offset) % interval === 0,\n  );\n}\n", "import * as d3 from \"d3\";\n\nexport const month = d3.utcFormat(\"%b\");\nexport const monthDay = d3.utcFormat(\"%b %-d\");\nexport const monthYear = d3.utcFormat(\"%b %Y\");\nexport const monthDayYear = d3.utcFormat(\"%b %-d, %Y\");\nexport const fullMonthDayYear = d3.utcFormat(\"%B %-d, %Y\");\n\nexport function makeDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthDayYear(d);\n    }\n    return monthDay(d);\n  };\n}\n\nexport function makeMonthlyDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthYear(d);\n    }\n    return month(d);\n  };\n}\n\nexport function quarter(d) {\n  // Format a Date as a quarter and year\n  const q = parseInt(d.getUTCMonth() / 3) + 1;\n  return `${q}Q ${d.getUTCFullYear()}`;\n}\n\nexport const year = (d) => d.getUTCFullYear();\n\nexport function quarterToIso(value) {\n  // Convert a quarter in the format (q)Q(yyyy) - e.g. 1Q2024 - to an ISO date\n  value = String(value).replace(\" \", \"\");\n  let year = \"\";\n  if (value.length === 4) {\n    year = `20${value.substring(2)}`;\n  } else if (value.length === 6) {\n    year = value.substring(2);\n  }\n  if (!year) return null;\n  let q = parseInt(value.substring(0, 1));\n  let month = `${q * 3}`.padStart(2, \"0\");\n  let day = [\"\", \"31\", \"30\", \"30\", \"31\"][q];\n  return d3.isoParse(`${year}-${month}-${day}`);\n}\n\nexport function yearToIso(value) {\n  // Convert a year to an ISO date\n  if (value.length !== 4) return null;\n  const year = parseInt(value);\n  return d3.isoParse(`${year}-01-01`);\n}\n", "export function placeTooltip(container, tooltip, dx, dy, padding = 5) {\n  // Returns x and y page coordinates and text-align that will optimally place the\n  // tooltip in the container. The container and tooltip must be DOM elements with\n  // offset properties. The dx and dy should be relative to the top-left of the svg.\n  let x = 0;\n  let y = -tooltip.offsetHeight - padding;\n  let align = \"left\";\n\n  // TODO Limit these to half the container?\n  if (dx > container.offsetWidth - tooltip.offsetWidth - padding) {\n    // Right side of container\n    x = -tooltip.offsetWidth - padding;\n    align = \"right\";\n  }\n\n  if (dy < tooltip.offsetHeight + padding) {\n    // Top of the container\n    y = padding;\n  }\n\n  return [x + container.offsetLeft + dx, y + container.offsetTop + dy, align];\n}\n\nexport function placeTooltipTop(container, tooltip, dx, dy, padding = 5) {\n  // Similar to placeTooltip, but always places the tooltip above the dx, dy\n\n  let x = 0;\n  let y = -tooltip.offsetHeight - padding;\n  let align = \"left\";\n\n  // TODO Limit these to half the container?\n  if (dx > container.offsetWidth - tooltip.offsetWidth - padding) {\n    // Right side of container\n    x = -tooltip.offsetWidth - padding;\n    align = \"right\";\n  }\n\n  return [x + container.offsetLeft + dx, y + container.offsetTop + dy, align];\n}\n"],
  "mappings": "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",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "candlestick_exports", "__export", "CandlestickChart", "OHLC", "OHLCV", "parseArrayOHLCV", "parseVerboseOHLCV", "placeTooltip", "placeTooltipTop", "d3", "d3", "d3", "Chart", "data", "parser", "d", "value", "d3", "percent", "percentChange", "magnitude", "units", "price", "volume", "value", "d3", "Pad", "top", "right", "bottom", "left", "DefaultPad", "Pad", "Layout", "width", "height", "pad", "getLayout", "elem", "minWidth", "maxWidth", "minHeight", "maxHeight", "screenHeightPercent", "chart", "appendSVG", "selector", "width", "height", "layoutSVG", "options", "elem", "svg", "Layout", "layout", "getLayout", "d3", "parseArrayOHLCV", "d", "parseVerboseOHLCV", "throttle", "fn", "timeout", "free", "d3", "maxLabelSize", "svg", "layout", "scale", "format", "cls", "hidden", "axis", "labels", "width", "height", "elem", "filterTicksAutoOffset", "ticks", "layout", "labelWidth", "count", "interval", "offset", "d", "i", "d3", "month", "monthDay", "monthYear", "monthDayYear", "fullMonthDayYear", "makeDateFormatter", "lastYear", "d", "year", "placeTooltip", "container", "tooltip", "dx", "dy", "padding", "x", "y", "align", "placeTooltipTop", "uniqueID", "signOf", "d", "classes", "deltaClass", "zoomRange", "domain", "width", "start", "end", "w", "ratio", "zoomWidth", "offsetX", "extentData", "data", "invertBand", "scale", "x", "padOuter", "eachBand", "index", "CandlestickChart", "Chart", "parser", "__publicField", "value", "numTicks", "makeDateFormatter", "filterTicksAutoOffset", "selector", "clipPathID", "layoutSVG", "volumeHeight", "priceHeight", "maxVolume", "volWidth", "volHeight", "maxLabelSize", "volume", "domainY", "minY", "rangeY", "logWidth", "logHeight", "linearWidth", "linearHeight", "labelWidthY", "dates", "labelWidthX", "labelHeight", "yTransform", "axisY", "bandPad", "zRange", "selection", "x0", "x1", "move", "leave", "prevIndex", "pointermove", "evt", "xm", "prev", "pointerleave", "throttle", "OHLC", "OHLCV"]
}
