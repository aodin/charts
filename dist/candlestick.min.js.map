{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../src/candlestick.js", "../src/layout.js", "../src/ticks.js", "../src/timeseries.js", "../src/throttle.js", "../src/formats.js"],
  "sourcesContent": ["module.exports = d3", "import * as d3 from \"d3\";\n\nimport { Layout, getLayout, appendSVG } from \"./layout\";\nimport { maxLabelSize, filterTicks } from \"./ticks\";\nimport { makeDateFormatter } from \"./timeseries\";\nimport { throttle } from \"./throttle\";\nimport { volume } from \"./formats\";\n\nfunction signOf(d) {\n  // TODO Assumes both open and close are defined\n  return 1 + Math.sign(d.o - d.c);\n}\n\nfunction barClass(d) {\n  // Append a class to the bar depending on its delta\n  const c = [\"up\", \"even\", \"down\"][signOf(d)];\n  return [\"bar\", c].join(\" \");\n}\n\nfunction zoomRange(domain, width, start, end) {\n  // Return the range extent needed to zoom to the start and end indices of the domain\n  // TODO Make sure end is greater than start\n  let w = end - start + 1;\n  let ratio = 1;\n  if (w < domain.length) {\n    ratio = domain.length / w;\n  }\n  const offset = start / domain.length;\n  const zWidth = width * ratio;\n  const offsetX = offset * zWidth;\n  return [0 - offsetX, zWidth - offsetX];\n}\n\nfunction extentData(data, start=0, end) {\n  // Calculate the extent of the price data, optionally with a subslice\n  if (end) {\n    data = data.slice(start, end)\n  }\n  const minY = d3.min(d3.map(data, (d) => d.l));\n  return [minY, d3.max(d3.map(data, (d) => d.h))];\n}\n\nexport function parseArray(d) {\n  return {\n    x: d3.isoParse(d[0]),\n    o: d[1],\n    h: d[2],\n    l: d[3],\n    c: d[4],\n    v: d[5],\n  };\n}\n\nexport function parseVerboseObject(d) {\n  return {\n    x: d3.isoParse(d.date),\n    o: d.open,\n    h: d.high,\n    l: d.low,\n    c: d.close,\n    v: d.volume,\n  };\n}\n\nfunction invertBand(scale, x) {\n  const domain = scale.domain();\n  const padOuter = scale(domain[0]);\n  const eachBand = scale.step();\n  const index = Math.floor(((x - padOuter) / eachBand));\n  return Math.max(0,Math.min(index, domain.length-1));\n};\n\n\nexport class Candlestick {\n  formatX = \"%m %d, %Y\";\n\n  constructor(data, parser = (d) => d) {\n    // Default config\n    this.config = {\n      VOLUME_RATIO: 0.0,\n      LOG_Y: false,\n      SCREEN_HEIGHT_FRACTION: 0.5,\n      BAND_PAD: 0.2,\n      DURATION_MS: 500,\n      VOLUME_AXIS_RIGHT: true,\n      HIDE_VOLUME_AXIS: false,\n    };\n\n    // Get data in a {x, o, h, l, c, v} format\n    this.data = d3.map(data, parser);\n    // TODO Save min / max?\n  }\n\n  // TODO method to append a data point\n  append() {\n    // TODO Apply data formatter function?\n  }\n\n  animationDuration(value) {\n    this.config.DURATION_MS = value;\n    return this;\n  }\n\n  noAnimation() {\n    return this.animationDuration(0);\n  }\n\n  showVolume(ratio = 0.1) {\n    // TODO Allow to be called dynamically?\n    this.config.VOLUME_RATIO = ratio;\n    return this;\n  }\n\n  hideVolume() {\n    // TODO Allow to be called dynamically?\n    return this.showVolume(0.0);\n  }\n\n  hideVolumeAxis() {\n    // The volume chart will still be shown, but without a label\n    this.config.HIDE_VOLUME_AXIS = true;\n    return this;\n  }\n\n  defaultLog() {\n    this.config.LOG_Y = true;\n    return this;\n  }\n\n  defaultLinear() {\n    this.config.LOG_Y = false;\n    return this;\n  }\n\n  screenHeightFraction(value) {\n    this.config.SCREEN_HEIGHT_FRACTION = value;\n    return this;\n  }\n\n  // Render has three basic states\n  // 1. No SVG element - use width of parent and height of screen\n  // 2. SVG element without size attributes - use width of parent and height of screen\n  //    - But SVG elements don't have a width???\n  // 3. SVG element with size attributes - use those\n  render(selector) {\n    const elem = d3.select(selector);\n    if (!elem.node()) {\n      throw new Error(\n        `Unable to find a DOM element for selector '${selector}'`,\n      );\n    }\n\n    if (elem.node().tagName === \"svg\") {\n      this.svg = elem;\n      const width = +this.svg.attr(\"width\");\n      const height = +this.svg.attr(\"height\");\n      // TODO fallback to viewbox?\n\n      if (width && height) {\n        this.layout = new Layout(width, height);\n      } else {\n        // TODO SVGs must have a width or height or the defaults will be returned\n        this.layout = getLayout(selector, {\n          screenHeightFraction: this.config.SCREEN_HEIGHT_FRACTION,\n        });\n      }\n    } else {\n      this.layout = getLayout(selector, {\n        screenHeightFraction: this.config.SCREEN_HEIGHT_FRACTION,\n      });\n      this.svg = appendSVG(selector, this.layout.width, this.layout.height);\n    }\n\n    // The price and volume portions of the chart will share an x-axis\n    const volumeHeight = this.layout.innerHeight * this.config.VOLUME_RATIO;\n    const priceHeight = this.layout.innerHeight - volumeHeight;\n\n    const maxVolume = d3.max(d3.map(this.data, (d) => d.v));\n\n    this.scaleVolume = d3\n      .scaleLinear()\n      .domain([0, maxVolume])\n      .range([volumeHeight, 0])\n      .clamp(true)\n      .nice();\n\n    // Right pad the volume ticks\n    if (!this.config.HIDE_VOLUME_AXIS) {\n      const [volWidth, volHeight] = maxLabelSize(\n        this.layout,\n        this.scaleVolume,\n        volume,\n      );\n      this.layout.pad.right = volWidth + 5;\n    }\n\n    let domainY = extentData(this.data);\n    const minY = domainY[0];\n\n    // TODO Pad the price domain? Just use nice()?\n    // const domainPadY = (domainY[1] - domainY[0]) * 0.1;\n    // domainY = [domainY[0] - domainPadY, domainY[1] + domainPadY];\n\n    const rangeY = [priceHeight, 0];\n\n    // Axes\n    this.scaleLog = d3.scaleLog().domain(domainY).range(rangeY).clamp(true);\n    this.scaleLinear = d3\n      .scaleLinear()\n      .domain(domainY)\n      .range(rangeY)\n      .clamp(true);\n\n    const rangeX = d3.map(this.data, (d) => d.x);\n\n    // Get the max tick label width for the y-axis on both linear and log scales\n    const [logWidth, logHeight] = maxLabelSize(this.layout, this.scaleLog);\n    const [linearWidth, linearHeight] = maxLabelSize(\n      this.layout,\n      this.scaleLinear,\n    );\n    const labelWidthY = d3.max([logWidth, linearWidth]);\n\n    // Left pad the the y-axis labels\n    this.layout.pad.left = labelWidthY + 5;\n\n    // Set the inner display\n    this.inner = this.svg\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        `translate(${this.layout.pad.left}, ${this.layout.pad.top})`,\n      );\n\n    // Add g elements for the price and volume portions\n    this.price = this.inner.append(\"g\").attr(\"class\", \"price\");\n\n    this.volume = this.inner\n      .append(\"g\")\n      .attr(\"class\", \"volume\")\n      .attr(\n        \"transform\",\n        `translate(0,${this.layout.innerHeight - volumeHeight})`,\n      );\n\n    this.scaleX = d3\n      .scaleBand(rangeX, [0, this.layout.innerWidth])\n      .paddingInner(this.config.BAND_PAD)\n      .align(0.5);\n    // NOTE do not use round\n\n    // NOTE The date formatter needs to be created because it uses a\n    // closure to determine a new year\n    let dates = makeDateFormatter();\n\n    // Get the max tick label width for the x-axis\n    const [labelWidth, labelHeight] = maxLabelSize(\n      this.layout,\n      this.scaleX,\n      dates,\n    );\n\n    const X = d3.map(this.data, (d) => d.x);\n    const filteredX = filterTicks(X, this.layout, labelWidth);\n\n    // Reset the date formatter\n    dates = makeDateFormatter();\n\n    // Set the default scaleY\n    // TODO Pass a render option? Include zoom?\n    this.scaleY = this.config.LOG_Y ? this.scaleLog : this.scaleLinear;\n\n    const axisY = d3.axisLeft(this.scaleY).tickSize(0);\n    this.axisX = d3\n      .axisBottom(this.scaleX)\n      .tickValues(filteredX)\n      .tickFormat(dates)\n      .tickSize(3);\n\n    this.gPrice = this.inner\n      .append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", `translate(0,0)`)\n      .call(axisY)\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .clone()\n          .attr(\"stroke\", \"#bbb\") // Works for black or white background at 50% opacity\n          .attr(\"stroke-opacity\", 0.5)\n          .attr(\"x1\", 0)\n          .attr(\"x2\", this.layout.innerWidth),\n      );\n\n    const bandPad =\n      (this.scaleX.bandwidth() * this.config.BAND_PAD) / 2;\n\n    this.gx = this.inner\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\n        \"transform\",\n        `translate(${bandPad + 0.5},${this.layout.innerHeight})`,\n      )\n      .call(this.axisX);\n\n    this.candles = this.inner\n      .append(\"g\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-linecap\", \"butt\") // NOTE using 'square' distorts size\n      .selectAll(\"g\")\n      .data(this.data)\n      .join(\"g\")\n      .attr(\n        \"transform\",\n        (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n      );\n\n    this.wicks = this.candles\n      .append(\"line\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"class\", \"wick\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"y1\", this.scaleY(minY))\n      .attr(\"y2\", this.scaleY(minY));\n\n    this.bars = this.candles\n      .append(\"line\")\n      .attr(\"stroke-width\", this.scaleX.bandwidth())\n      .attr(\"class\", (d) => barClass(d))\n      .attr(\"y1\", this.scaleY(minY))\n      .attr(\"y2\", this.scaleY(minY));\n\n    this.updateY();\n\n    // Optional volume\n    // TODO Define these properties as empty if there is no volume display\n    if (volumeHeight) {\n      this.axisVolume = d3\n        .axisRight(this.scaleVolume)\n        .ticks(1) // Never show more than 1 non-zero tick for the volume\n        .tickFormat(volume)\n        .tickSize(3);\n\n      if (!this.config.HIDE_VOLUME_AXIS) {\n        this.volume\n          .append(\"g\")\n          .attr(\"transform\", `translate(${this.layout.innerWidth},0)`)\n          .call(this.axisVolume);\n      }\n\n      this.volumeSlots = this.volume\n        .append(\"g\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(\"stroke-linecap\", \"butt\") // NOTE using 'square' distorts size\n        .selectAll(\"g\")\n        .data(this.data)\n        .join(\"g\")\n        .attr(\n          \"transform\",\n          (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n        );\n\n      this.volumeBars = this.volumeSlots\n        .append(\"line\")\n        .attr(\"y1\", this.scaleVolume(0))\n        .attr(\"y2\", this.scaleVolume(0))\n        .attr(\"stroke-width\", this.scaleX.bandwidth())\n        .attr(\"class\", (d) => barClass(d))\n\n      this.volumeBars.transition()\n        .duration(this.config.DURATION_MS)\n        .attr(\"y2\", (d) => this.scaleVolume(d.v || 0));\n    }\n\n    // Brush for zoom\n    this.brush = d3.brushX()\n      .extent([[0, 0], [this.layout.innerWidth, this.layout.innerHeight]])\n      .on(\"end\", this.zoom.bind(this));\n\n    this.gBrush = this.inner.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(this.brush.bind(this));\n\n    // Optional spotlight of a bar\n    // Don't call the class \"tooltip\" - that interferes with Bootstrap\n    this.spotlightBar = this.inner\n      .append(\"g\")\n      .lower()\n      .attr(\"class\", \"spotlight\")\n      .append(\"rect\")\n      .style(\"display\", \"none\")\n      .style(\"pointer-events\", \"none\");\n  }\n\n  updateY() {\n    this.gPrice\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .call(d3.axisLeft(this.scaleY).tickSize(0));\n\n    this.bars\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"y1\", (d) => this.scaleY(d.o))\n      .attr(\"y2\", (d) => this.scaleY(d.c));\n\n    this.wicks\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"y1\", (d) => this.scaleY(d.l))\n      .attr(\"y2\", (d) => this.scaleY(d.h));\n  }\n\n  useLog() {\n    this.scaleY = this.scaleLog;\n    this.updateY();\n  }\n\n  useLinear() {\n    this.scaleY = this.scaleLinear;\n    this.updateY();\n  }\n\n  spotlight(index) {\n    // TODO We only need to pad if width is set to bandwidth instead of step\n    // const pad = this.scaleX.bandwidth() * this.scaleX.paddingInner() * 0.5;\n\n    this.spotlightBar\n      .attr(\"x\", this.scaleX(this.data[index].x))\n      .attr(\"width\", this.scaleX.step())\n      .attr(\"y\", 0)\n      .attr(\"height\", this.layout.innerHeight)\n      .style(\"display\", \"block\");\n  }\n\n  noSpotlight() {\n    this.spotlightBar.style(\"display\", \"none\");\n  }\n\n  onEvent(move, leave) {\n    // Enable events for the chart. On move, determine which band is being\n    // hovered over and send an object of its OHLCV data to the move callback.\n    // The leave callback is triggered when the pointer leaves the SVG elem.\n    let prevIndex = null;\n\n    const pointermove = (evt) => {\n      const [xm] = d3.pointer(evt);\n      const index = invertBand(this.scaleX, xm - this.layout.pad.left);\n\n      // Only trigger the callback when the index changes\n      if (prevIndex && prevIndex == index) {\n        return;\n      }\n\n      prevIndex = index;\n\n      // Include the index's OHLCV data and a change from the last close\n      let data = structuredClone(this.data[index]);\n      data.index = index;\n\n      if (index > 0) {\n        const prev = this.data[index - 1];\n        if (prev && prev.c) {\n          data.prev = prev.c;\n          data.delta = data.c - prev.c;\n          data.percent = data.delta / prev.c;\n          // data.color = this.options.OHLC_COLORS[1 + Math.sign(-data.delta)];\n        }\n      }\n\n      if (move) {\n        move.call(this, data);\n      }\n    };\n\n    const pointerleave = (evt) => {\n      prevIndex = null;\n      if (leave) {\n        leave.call(this);\n      }\n    };\n\n    this.svg\n      .on(\"pointermove\", throttle(pointermove, 20.83))\n      .on(\"pointerleave\", pointerleave);\n  }\n\n  updateX(i0, i1) {\n    // Update the chart to start and end on the given x-axis indices\n    // The y-axis will also be updated to the min and max of the data for the given xs\n    const zRange = zoomRange(this.scaleX.domain(), this.layout.innerWidth, i0, i1);\n    // Do not update the domain - just the range\n    this.scaleX.range(zRange)\n\n    // TODO Update the axisY according to the new min and max of the data\n    let domainY = extentData(this.data, i0, i1);\n\n    // this.scaleLog.domain(domainY)\n    // this.scaleLinear.domain(domainY);\n    // this.updateY()\n    \n    // TODO Re-filter the dates\n    // this.scaleX.domain(newX).range([0, this.layout.innerWidth]);\n    // const filteredX = filterTicks(X, this.layout, labelWidth);\n    \n    // Update the x axis\n    this.gx.transition().duration(this.config.DURATION_MS).call(this.axisX);\n\n    // Update the candles\n    this.candles.transition().duration(this.config.DURATION_MS)\n      .attr(\n        \"transform\",\n        (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n      );\n\n    this.bars.transition().duration(this.config.DURATION_MS)\n      .attr(\"stroke-width\", this.scaleX.bandwidth())\n\n    // Update the spotlight\n    // TODO Need the selected index for the x coordinate\n    this.spotlightBar.transition().duration(this.config.DURATION_MS)\n      // .attr(\"x\", this.scaleX(this.data[i].x))\n      .attr(\"width\", this.scaleX.step())\n\n    // Update the volume\n    this.volumeSlots.transition().duration(this.config.DURATION_MS)\n      .attr(\n        \"transform\",\n        (d) => `translate(${this.scaleX(d.x) + this.scaleX.step() / 2.0},0)`,\n      )\n\n    this.volumeBars.transition().duration(this.config.DURATION_MS)\n      .attr(\"stroke-width\", this.scaleX.bandwidth())\n  }\n\n  zoom({selection}) {\n    if (!selection) return;\n    // Get the closest indices to the selection\n    const [x0, x1] = selection;\n    const [i0, i1] = [invertBand(this.scaleX, x0), invertBand(this.scaleX, x1)];\n    this.updateX(i0, i1);\n\n    // Reset the brush\n    this.gBrush.call(this.brush.move, null);\n  }\n\n  reset() {\n    this.updateX(0, this.scaleX.domain().length - 1);\n  }\n}\n\nexport function OHLC(data, options) {\n  return new Candlestick(data, options);\n}\n\nexport function OHLCV(data, options) {\n  return new Candlestick(data, options).showVolume();\n}\n", "import * as d3 from \"d3\";\n\n/*\nMost of the layout operations are placing a rectangle within another rectangle.\nWhat is the most generic way to do this?\n*/\n\nexport class Pad {\n  constructor(top, right, bottom, left) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n}\n\nexport function EqualPad(value) {\n  return new Pad(value, value, value, value);\n}\n\nexport function DefaultPad() {\n  return new Pad(15, 15, 25, 25);\n}\n\nexport class Layout {\n  constructor(width, height, pad) {\n    this.width = width;\n    this.height = height;\n    this.pad = pad || DefaultPad();\n  }\n\n  get rangeX() {\n    return [this.pad.left, this.width - this.pad.right];\n  }\n\n  get rangeY() {\n    return [this.height - this.pad.bottom, this.pad.top];\n  }\n\n  get innerWidth() {\n    return this.width - this.pad.left - this.pad.right;\n  }\n\n  get innerHeight() {\n    return this.height - this.pad.top - this.pad.bottom;\n  }\n\n  get innerMinimum() {\n    return d3.min([this.innerWidth, this.innerHeight]);\n  }\n\n  get midpoint() {\n    return [this.width / 2, this.height / 2];\n  }\n}\n\nexport function getLayout(\n  elem,\n  {\n    minWidth = 400,\n    maxWidth = undefined,\n    minHeight = 300,\n    maxHeight = undefined,\n    screenHeightFraction = 0.5,\n  } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.max([chart.offsetWidth, minWidth]);\n  if (maxWidth) {\n    width = d3.min([width, maxWidth]);\n  }\n\n  let height = window.innerHeight * screenHeightFraction;\n  height = d3.max([height, minHeight]);\n  if (maxHeight) {\n    height = d3.min([height, maxHeight]);\n  }\n  return new Layout(width, height, DefaultPad());\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n\n  // Pad\n  return width + options.X_TICK_GUTTER + 5;\n}\n\nexport function appendSVG(selector, width, height) {\n  // Append an SVG element to the selected element\n  return d3\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"viewBox\", [0, 0, width, height])\n    .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n    .style(\"-webkit-tap-highlight-color\", \"transparent\")\n    .style(\"overflow\", \"visible\");\n}\n", "/*\nTo filter categorical x ticks, we need to:\n1. get the width of the largest x tick label\n2. get the total available width for the axes in the layout\n3. get the interval that will fit that largest label without overlap\n4. filter the available tick labels by the interval\n*/\n\nexport function maxLabelSize(layout, scale, format = null) {\n  // Create a fake axis to test label tick size\n  // Does not include the tick size or padding, is just the label with\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", layout.innerWidth)\n    .attr(\"height\", layout.innerHeight)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  const axis = d3.axisLeft(scale).tickFormat(format); // Can be null\n\n  const g = hidden.append(\"g\").call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  let height = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n    if (bbox.height > height) {\n      height = bbox.height;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n  return [width, height];\n}\n\nexport function filterTicks(ticks, layout, labelWidth) {\n  // TODO - allow a max to be set?\n  const count = parseInt(layout.innerWidth / (labelWidth + 1)) + 1;\n  const interval = d3.max([parseInt(Math.ceil(ticks.length / count)), 1]);\n  return d3.filter(ticks, (d, i) => i % interval === 0);\n}\n", "import * as d3 from \"d3\";\n\nexport const month = d3.utcFormat(\"%b\");\nexport const monthDay = d3.utcFormat(\"%b %-d\");\nexport const monthYear = d3.utcFormat(\"%b %Y\");\nexport const monthDayYear = d3.utcFormat(\"%b %-d, %Y\");\nexport const fullMonthDayYear = d3.utcFormat(\"%B %-d, %Y\");\n\nexport function makeDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthDayYear(d);\n    }\n    return monthDay(d);\n  };\n}\n\nexport function makeMonthlyDateFormatter() {\n  let lastYear = null;\n  return function (d) {\n    const year = d.getUTCFullYear();\n    if (lastYear !== year) {\n      lastYear = year;\n      return monthYear(d);\n    }\n    return month(d);\n  };\n}\n\nexport function quarter(d) {\n  // Format a Date as a quarter and year\n  const q = parseInt(d.getUTCMonth() / 3) + 1;\n  return `${q}Q ${d.getUTCFullYear()}`;\n}\n\nexport const year = (d) => d.getUTCFullYear();\n", "export function throttle(fn, timeout) {\n  var free = true;\n  return function () {\n    if (free) {\n      fn.apply(this, arguments);\n      free = false;\n      setTimeout(() => {\n        free = true;\n      }, timeout);\n    }\n  };\n}\n", "import * as d3 from \"d3\";\n\nexport const percent = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 2,\n}).format;\n\nexport const percentChange = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n  signDisplay: \"exceptZero\",\n}).format;\n\nexport const magnitude = new Intl.NumberFormat(\"en-US\", {\n  notation: \"compact\",\n  compactDisplay: \"short\",\n  minimumFractionDigits: 1,\n  maximumFractionDigits: 2,\n}).format;\n\nexport const units = d3.format(\",.0f\");\n\nexport const volume = function (value) {\n  if (!value) return; // Never show 0\n  if (value >= 1e9) return `${value / 1e9}B`; // Billions\n  if (value >= 1e6) return `${value / 1e6}M`; // Millions\n  return units(value);\n};\n"],
  "mappings": "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",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "candlestick_exports", "__export", "Candlestick", "OHLC", "OHLCV", "parseArray", "parseVerboseObject", "d3", "d3", "Pad", "top", "right", "bottom", "left", "DefaultPad", "Pad", "Layout", "width", "height", "pad", "getLayout", "elem", "minWidth", "maxWidth", "minHeight", "maxHeight", "screenHeightFraction", "chart", "appendSVG", "selector", "width", "height", "maxLabelSize", "layout", "scale", "format", "hidden", "axis", "labels", "width", "height", "bbox", "filterTicks", "ticks", "labelWidth", "count", "interval", "d", "i", "d3", "month", "monthDay", "monthYear", "monthDayYear", "fullMonthDayYear", "makeDateFormatter", "lastYear", "d", "year", "throttle", "fn", "timeout", "free", "d3", "percent", "percentChange", "magnitude", "units", "volume", "value", "signOf", "d", "barClass", "zoomRange", "domain", "width", "start", "end", "w", "ratio", "offset", "zWidth", "offsetX", "extentData", "data", "parseArray", "parseVerboseObject", "invertBand", "scale", "x", "padOuter", "eachBand", "index", "Candlestick", "parser", "__publicField", "value", "selector", "elem", "height", "Layout", "getLayout", "appendSVG", "volumeHeight", "priceHeight", "maxVolume", "volWidth", "volHeight", "maxLabelSize", "volume", "domainY", "minY", "rangeY", "rangeX", "logWidth", "logHeight", "linearWidth", "linearHeight", "labelWidthY", "dates", "makeDateFormatter", "labelWidth", "labelHeight", "X", "filteredX", "filterTicks", "axisY", "g", "bandPad", "move", "leave", "prevIndex", "pointermove", "evt", "xm", "prev", "pointerleave", "throttle", "i0", "i1", "zRange", "selection", "x0", "x1", "OHLC", "options", "OHLCV"]
}
