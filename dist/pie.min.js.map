{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../src/pie.js", "../src/chart.js", "../src/options.js", "../src/layout.js"],
  "sourcesContent": ["module.exports = d3", "/*\nPie chart (or donut)\n*/\nimport * as d3 from \"d3\";\n\nimport { Chart } from \"./chart\";\n\nexport class PieChart extends Chart {\n  radii(inner, outer) {\n    // Set radii\n    this.options.INNER_RADIUS = inner;\n    this.options.OUTER_RADIUS = outer;\n    return this;\n  }\n\n  hoverRadii(inner, outer) {\n    // Set radii on hover\n    this.options.INNER_RADIUS_HOVER = inner;\n    this.options.OUTER_RADIUS_HOVER = outer;\n    return this;\n  }\n\n  get outerRadius() {\n    return this.options.OUTER_RADIUS * (this.layout.innerMinimum / 2);\n  }\n\n  get innerRadius() {\n    return this.options.INNER_RADIUS * (this.layout.innerMinimum / 2);\n  }\n\n  get outerRadiusHover() {\n    return this.options.OUTER_RADIUS_HOVER * (this.layout.innerMinimum / 2);\n  }\n\n  get innerRadiusHover() {\n    return this.options.INNER_RADIUS_HOVER * (this.layout.innerMinimum / 2);\n  }\n\n  getX(datum) {\n    return datum[0];\n  }\n\n  getY(datum) {\n    return datum[1];\n  }\n\n  getZ(datum) {\n    return datum[2];\n  }\n\n  render(elem) {\n    // If there is no data, do not render\n    if (!this.X.length) return;\n\n    // Determine the layout\n    this.layout = this.getLayout(elem);\n    this.layout.padding = this.getPadding(this.layout);\n\n    this.createSVG(elem, this.layout);\n\n    // Only show the latest quarter of data\n    const latest = d3.max(d3.map(this.data, this.getX));\n    const items = d3.filter(this.data, (d) => this.getX(d) === latest);\n\n    const pie = d3.pie().sort(null).value(this.getY);\n\n    const arcs = pie(items);\n\n    this.arc = d3\n      .arc()\n      .innerRadius(this.innerRadius)\n      .outerRadius(this.outerRadius);\n\n    // Radii when enlarged\n    this.arcEnlarge = d3\n      .arc()\n      .innerRadius(this.innerRadiusHover)\n      .outerRadius(this.outerRadiusHover);\n\n    const [midX, midY] = this.layout.midpoint;\n\n    const g = this.svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${midX},${midY})`);\n\n    this.slice = g\n      .selectAll(\".arc\")\n      .data(arcs)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"arc\");\n\n    this.slice\n      .append(\"path\")\n      .attr(\"d\", this.arc)\n      .attr(\"opacity\", 1.0)\n      .attr(\"fill\", (d, i) => this.getColor(this.getZ(d.data)));\n\n    // Label\n    this.slice\n      .append(\"text\")\n      .attr(\"transform\", (d) => `translate(${this.arc.centroid(d)})`);\n  }\n\n  enlarge(z) {\n    this.slice\n      .selectAll(\"path\")\n      .filter((d) => this.getZ(d.data) === z)\n      .transition()\n      .duration(this.options.ANIMATION_DURATION_MS)\n      .attr(\"d\", this.arcEnlarge);\n  }\n\n  reset() {\n    this.slice\n      .selectAll(\"path\")\n      .transition()\n      .duration(this.options.ANIMATION_DURATION_MS)\n      .attr(\"d\", this.arc);\n  }\n\n  getLegend() {\n    // Return the z items along with their colors\n    return d3.map(new Set(this.Z), (d) => {\n      return Object.assign({ color: this.getColor(d.key) }, d);\n    });\n  }\n\n  noHighlight() {\n    this.slice\n      .transition()\n      .duration(this.options.ANIMATION_DURATION_MS)\n      .attr(\"opacity\", 1.0);\n  }\n\n  highlight(z) {\n    this.slice\n      .attr(\"opacity\", 1.0)\n      .transition()\n      .duration(this.options.ANIMATION_DURATION_MS)\n      .attr(\"opacity\", (d) => (this.getZ(d.data) === z ? 1.0 : 0.5));\n  }\n\n  enableEvents(enter, leave) {\n    const pointerenter = (evt, d) => {\n      const data = {\n        x: this.getX(d.data),\n        y: this.getY(d.data),\n        z: this.getZ(d.data),\n      };\n\n      if (enter) {\n        enter.call(this, data, evt, d);\n      }\n    };\n\n    const pointerleave = (evt, d) => {\n      const data = {\n        x: this.getX(d.data),\n        y: this.getY(d.data),\n        z: this.getZ(d.data),\n      };\n\n      if (leave) {\n        leave.call(this, data, evt, d);\n      }\n    };\n\n    this.slice\n      .on(\"pointerenter\", pointerenter)\n      .on(\"pointerleave\", pointerleave);\n  }\n}\n\nexport function Donut(data, options) {\n  return new PieChart(data, options);\n}\n\nexport function Pie(data, options) {\n  return new PieChart(data, options).radii(0, 0.8).hoverRadii(0, 0.9);\n}\n", "import * as d3 from \"d3\";\n\nimport { Options } from \"./options\";\nimport { getLayout, maxTickWidth } from \"./layout\";\n\nexport class Chart {\n  // By default, tick format functions are null, which will use the default D3\n  // functions. These can be overridden by sub-classes\n  tickFormatX = null;\n  tickFormatY = null;\n\n  constructor(data, options = {}) {\n    this.options = new Options(options);\n    this.data = data; // Save the original data in case we want to recalculate\n    this.parse(data);\n  }\n\n  minAtZero() {\n    this.options.MIN_Y_AT_ZERO = true;\n    return this;\n  }\n\n  colorSet(name) {\n    // TODO Discrete vs. continuous?\n    this.options.COLORS = name;\n    this.setColors();\n    return this;\n  }\n\n  yTicksRight() {\n    this.options.Y_TICKS_RIGHT = true;\n    return this;\n  }\n\n  yTickLimit(count) {\n    this.options.Y_TICK_MAX_COUNT = count;\n    return this;\n  }\n\n  getTickValuesX() {\n    // D3.js will use the default tick values if null is used\n    return null;\n  }\n\n  getTickValuesY() {\n    // D3.js will use the default tick values if null is used\n    return null;\n  }\n\n  parse(data) {\n    // This data parse is specific to line series data\n    this.X = this.parseX(data);\n    this.Y = this.parseY(data);\n    this.Z = this.parseZ(data);\n\n    // Get distinct items from the set of Z values\n    this.items = new Set(this.Z);\n\n    // Is defined?\n    // TODO This doesn't work for missing values, only null or undefined\n    const defined = (d, i) => !isNaN(this.X[i]) && !isNaN(this.Y[i]);\n    this.D = d3.map(data, defined);\n\n    // Grouping\n    this.I = d3.range(this.X.length);\n    this.grouping = d3.group(this.I, (i) => this.Z[i]); // {name: [indexes...]}\n\n    // Colors\n    this.setColors(data);\n  }\n\n  formatX(value) {\n    // Function for formatting X values, called before sending to hover data callbacks\n    return value;\n  }\n\n  formatY(value) {\n    // Function for formatting Y values, called before sending to hover data callbacks\n    return value;\n  }\n\n  formatZ(key) {\n    // Function for formatting Z values, called before sending to hover data callbacks\n    return key;\n  }\n\n  parseX(data) {\n    return d3.map(data, (d) => d3.isoParse(d[0]));\n  }\n\n  parseY(data) {\n    return d3.map(data, (d) => d[1]);\n  }\n\n  parseZ(data) {\n    return d3.map(data, (d) => d[2]);\n  }\n\n  getDomainX() {\n    return d3.extent(this.X);\n  }\n\n  getRangeX(layout) {\n    return layout.rangeX;\n  }\n\n  getDomainY() {\n    if (this.options.MIN_Y_AT_ZERO) {\n      return [0, d3.max(this.Y)];\n    }\n    return d3.extent(this.Y);\n  }\n\n  getRangeY(layout) {\n    return layout.rangeY;\n  }\n\n  setColors(data) {\n    this.colors = d3\n      .scaleOrdinal()\n      .domain(this.items)\n      .range(this.options.COLORS);\n  }\n\n  getColor(z) {\n    return this.colors(z);\n  }\n\n  getLayout(elem) {\n    // Given the chart's DOM element, return the desired layout for drawing\n    return getLayout(elem, {\n      screenHeightFraction: this.options.SCREEN_HEIGHT_FRACTION,\n    });\n  }\n\n  getPadding(layout) {\n    const width = maxTickWidth(\n      layout.padding,\n      layout.height,\n      this.getDomainY(),\n      this.tickFormatY,\n      this.options,\n    );\n\n    if (this.options.Y_TICKS_RIGHT) {\n      layout.padding.right = width;\n    } else {\n      layout.padding.left = width;\n    }\n    return layout.padding;\n  }\n\n  createSVG(elem, layout) {\n    // Clear any existing chart\n    d3.select(elem).selectAll(\"svg\").remove();\n\n    // Create a new chart\n    this.svg = d3\n      .select(elem)\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, layout.width, layout.height])\n      .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n      .style(\"-webkit-tap-highlight-color\", \"transparent\")\n      .style(\"font-size\", this.options.FONT_SIZE)\n      .style(\"overflow\", \"visible\");\n  }\n\n  clear() {\n    // Clear all drawn elements, must have an element set\n    if (this.svg) this.svg.selectAll(\"*\").remove();\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport class Options {\n  constructor(options = {}) {\n    this.ANIMATION_DURATION_MS = 500;\n\n    // Allow either max number of ticks OR spacing\n    this.SCREEN_HEIGHT_FRACTION = 0.65;\n    this.X_TICK_MAX_COUNT = null;\n    this.X_TICK_SPACE = 50; // TODO calculate largest tick space dynamically\n    this.X_TICK_SIZE = 4;\n    this.X_TICK_GUTTER = 3;\n    this.Y_TICK_MAX_COUNT = null;\n    this.Y_TICK_SPACE = 40;\n    this.Y_TICK_SIZE = 0;\n    this.Y_TICK_GUTTER = 5; // Space between tick label and grid\n    this.FONT_SIZE = \"13px\";\n    this.COLORS = d3.schemeCategory10;\n    this.MIN_Y_AT_ZERO = false;\n    this.Y_TICKS_RIGHT = false;\n\n    // OHLC\n    this.BAND_PADDING = 0.2; // As a percentage of the band\n    this.VOLUME_OPACITY = 0.6;\n    this.OHLC_COLORS = [\"#1ebc8c\", \"#b2b2b2\", \"#f34d27\"]; // [up, no change, down]\n    this.VOLUME_COLORS = [\"#1ebc8c\", \"#b2b2b2\", \"#f34d27\"]; // [up, no change, down]\n    this.HIDE_VOLUME = false;\n    this.HIDE_VOLUME_TICKS = false;\n\n    // Line\n    this.STROKE_WIDTH = 1.5;\n    this.HIGHLIGHT_STROKE_WIDTH = 2.0;\n    this.BACKGROUND_OPACITY = 0.3; // When another line is highlighted\n    this.DOT_RADIUS = 3.0;\n\n    // Bar\n    this.BAR_STROKE_WIDTH = 0.0;\n\n    // Pie\n    this.INNER_RADIUS = 0.3;\n    this.OUTER_RADIUS = 0.8;\n\n    this.INNER_RADIUS_HOVER = 0.3;\n    this.OUTER_RADIUS_HOVER = 0.9;\n\n    // TODO POINTER MOVE FPS\n    this.EVENT_FPS = 48;\n\n    // Allow user to override any of the above defaults\n    Object.assign(this, options);\n  }\n\n  get eventLatency() {\n    return parseInt(1000 / this.EVENT_FPS);\n  }\n\n  get showVolumeTicks() {\n    return !(this.HIDE_VOLUME || this.HIDE_VOLUME_TICKS);\n  }\n\n  getYTickCount(height) {\n    let count = parseInt(height / this.Y_TICK_SPACE) + 1;\n    if (this.Y_TICK_MAX_COUNT && count > this.Y_TICK_MAX_COUNT) {\n      count = this.Y_TICK_MAX_COUNT;\n    }\n    return count;\n  }\n\n  getXTickCount(width) {\n    let count = parseInt(width / this.X_TICK_SPACE) + 1;\n    if (this.X_TICK_MAX_COUNT && count > this.X_TICK_MAX_COUNT) {\n      count = this.X_TICK_MAX_COUNT;\n    }\n    return count;\n  }\n}\n", "import * as d3 from \"d3\";\n\n/*\nMost of the layout operations are placing a rectangle within another rectangle.\nWhat is the most generic way to do this?\n*/\n\nexport class Padding {\n  constructor(top, right, bottom, left) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n}\n\nexport class Layout {\n  constructor(width, height, padding) {\n    this.width = width;\n    this.height = height;\n    this.padding = padding;\n  }\n\n  get rangeX() {\n    return [this.padding.left, this.width - this.padding.right];\n  }\n\n  get rangeY() {\n    return [this.height - this.padding.bottom, this.padding.top];\n  }\n\n  get innerWidth() {\n    return this.width - this.padding.left - this.padding.right;\n  }\n\n  get innerHeight() {\n    return this.height - this.padding.top - this.padding.bottom;\n  }\n\n  get innerMinimum() {\n    return d3.min([this.innerWidth, this.innerHeight]);\n  }\n\n  get midpoint() {\n    return [this.width / 2, this.height / 2];\n  }\n}\n\nexport function getLayout(\n  elem,\n  {\n    minWidth = 400,\n    maxWidth = undefined,\n    minHeight = 300,\n    maxHeight = undefined,\n    screenHeightFraction = 0.5,\n  } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.max([chart.offsetWidth, minWidth]);\n  if (maxWidth) {\n    width = d3.min([width, maxWidth]);\n  }\n\n  let height = window.innerHeight * screenHeightFraction;\n  height = d3.max([height, minHeight]);\n  if (maxHeight) {\n    height = d3.min([height, maxHeight]);\n  }\n  return new Layout(width, height, new Padding(15, 15, 25, 25));\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n\n  // Add some padding\n  return width + options.X_TICK_GUTTER + 5;\n}\n"],
  "mappings": "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",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "pie_exports", "__export", "Donut", "Pie", "PieChart", "d3", "d3", "d3", "Options", "options", "height", "count", "width", "d3", "Padding", "top", "right", "bottom", "left", "Layout", "width", "height", "padding", "getLayout", "elem", "minWidth", "maxWidth", "minHeight", "maxHeight", "screenHeightFraction", "chart", "maxTickWidth", "defaults", "domain", "format", "options", "hidden", "scale", "axis", "labels", "bbox", "Chart", "data", "options", "__publicField", "Options", "name", "count", "defined", "d", "i", "value", "key", "layout", "z", "elem", "getLayout", "width", "maxTickWidth", "PieChart", "Chart", "inner", "outer", "datum", "elem", "latest", "items", "d", "arcs", "midX", "midY", "i", "z", "enter", "leave", "pointerenter", "evt", "data", "pointerleave", "Donut", "options", "Pie"]
}
