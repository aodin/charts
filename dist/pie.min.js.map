{
  "version": 3,
  "sources": ["external-global-plugin:d3", "../src/pie.js", "../src/chart.js", "../src/colors.js", "../src/layout.js", "../src/parsers.js", "../src/throttle.js", "../src/tooltip.js"],
  "sourcesContent": ["module.exports = d3", "/*\nPie chart (or donut)\n*/\nimport * as d3 from \"d3\";\n\nimport { CategoricalChart } from \"./chart\";\nimport { layoutSVG } from \"./layout\";\nimport { parse3dArray, parseTimeSeries3dArray, parseArrayYZ } from \"./parsers\";\nimport { throttle } from \"./throttle\";\nimport { placeTooltip, placeTooltipTop } from \"./tooltip\";\n\nexport {\n  parse3dArray,\n  parseTimeSeries3dArray,\n  parseArrayYZ,\n  placeTooltip,\n  placeTooltipTop,\n};\n\nexport class PieChart extends CategoricalChart {\n  // Pie charts expect data is the format [{x, y, z}...]\n  // Specify a parser if your input data is in a different format\n  constructor(data, parser = (d) => d) {\n    super(data, parser);\n\n    // Default config\n    this.config = {\n      LAYOUT: {},\n      DURATION_MS: 500,\n      INNER_RADIUS: 0.3,\n      OUTER_RADIUS: 0.8,\n      INNER_RADIUS_HOVER: 0.3,\n      OUTER_RADIUS_HOVER: 0.9,\n      BACKGROUND_OPACITY: 0.5, // Opacity when another slice is highlighted\n      START_ANGLE: 0,\n      END_ANGLE: 2 * Math.PI,\n      INITIAL_CLOSED: false,\n      SKIP_ENTER_ANIMATION: false,\n      COLORS: d3.schemeCategory10,\n    };\n\n    this.data = d3.map(data, parser);\n\n    this.X = Array.from(new d3.InternSet(d3.map(this.data, (d) => d.x)));\n    this.Z = Array.from(new d3.InternSet(d3.map(this.data, (d) => d.z)));\n\n    // Group data by x - these are the individual data sets that will render the pie\n    this.byX = d3.group(this.data, (d) => d.x);\n\n    this.colors = d3.scaleOrdinal().domain(this.Z).range(this.config.COLORS);\n  }\n\n  /* Config chained methods */\n  radii(inner, outer) {\n    // Set radii\n    this.config.INNER_RADIUS = inner;\n    this.config.OUTER_RADIUS = outer;\n    return this;\n  }\n\n  hoverRadii(inner, outer) {\n    // Set radii on hover\n    this.config.INNER_RADIUS_HOVER = inner;\n    this.config.OUTER_RADIUS_HOVER = outer;\n    return this;\n  }\n\n  angles(start, end) {\n    this.config.START_ANGLE = start;\n    this.config.END_ANGLE = end;\n    return this;\n  }\n\n  renderClosed() {\n    // The initial render of the pie chart will be all zero, aka closed\n    this.config.INITIAL_CLOSED = true;\n    return this;\n  }\n\n  skipEnterAnimation() {\n    this.config.SKIP_ENTER_ANIMATION = true;\n    return this;\n  }\n  /* End config chained methods */\n\n  get legend() {\n    // Return the z items along with their colors\n    return d3.map(new Set(this.Z), (d) => {\n      return { key: d, color: this.color(d) };\n    });\n  }\n\n  get outerRadius() {\n    return this.config.OUTER_RADIUS * (this.layout.innerMinimum / 2);\n  }\n\n  get innerRadius() {\n    return this.config.INNER_RADIUS * (this.layout.innerMinimum / 2);\n  }\n\n  get outerRadiusHover() {\n    return this.config.OUTER_RADIUS_HOVER * (this.layout.innerMinimum / 2);\n  }\n\n  get innerRadiusHover() {\n    return this.config.INNER_RADIUS_HOVER * (this.layout.innerMinimum / 2);\n  }\n\n  render(selector) {\n    // If there is no data, do not render\n    if (!this.data.length) return;\n\n    // The selector can either be for an:\n    // 1. SVG element with width and height attributes\n    // 2. HTML element that has an intrinsic width - an SVG element will be created\n    [this.svg, this.layout] = layoutSVG(selector, this.config.LAYOUT);\n\n    // By default, show the latest quarter of data\n    // TODO Option to change default - or just use update()?\n    const latest = this.X[this.X.length - 1];\n\n    this.pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.y)\n      .startAngle(this.config.START_ANGLE)\n      .endAngle(this.config.END_ANGLE);\n\n    this.arc = d3\n      .arc()\n      .innerRadius(this.innerRadius)\n      .outerRadius(this.outerRadius);\n\n    // Radii when enlarged\n    this.arcEnlarge = d3\n      .arc()\n      .innerRadius(this.innerRadiusHover)\n      .outerRadius(this.outerRadiusHover);\n\n    const [midX, midY] = this.layout.midpoint;\n\n    this.slices = this.svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${midX},${midY})`);\n\n    // Center value display\n    this.gDisplay = this.svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${midX},${midY})`)\n      .attr(\"class\", \"display\")\n      .append(\"text\");\n\n    // Optional label\n    // this.slices\n    //   .append(\"text\")\n    //   .attr(\"class\", \"label\")\n    //   .attr(\"transform\", (d) => `translate(${this.arc.centroid(d)})`)\n    //   .text(d => this.getLabel(d));\n\n    if (!this.config.INITIAL_CLOSED) {\n      this.update(latest);\n    }\n  }\n\n  update(x) {\n    // Update the pie chart with the data at the given x value\n    const items = this.byX.get(x);\n\n    // TODO All Z items should be represented in the new data - it makes updates easier\n    const arcs = this.pie(items);\n    const path = this.slices.selectAll(\"path\").data(arcs, (d) => d.data.z);\n\n    // Need to use a closure because the attrTween uses this\n    const arc = this.arc;\n\n    // Update existing arcs\n    path\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attrTween(\"d\", function (d) {\n        const interpolate = d3.interpolate(this._current, d);\n        this._current = interpolate(0);\n        return (t) => arc(interpolate(t));\n      });\n\n    // Enter new arcs\n    path\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"slice\")\n      .attr(\"opacity\", 1.0)\n      .append(\"path\")\n      .attr(\"fill\", (d) => this.colors(d.data.z))\n      .each(function (d) {\n        this._current = d;\n      })\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attrTween(\"d\", (d) => {\n        if (this.config.SKIP_ENTER_ANIMATION) {\n          return () => arc(d);\n        }\n        const interpolate = d3.interpolate({ startAngle: 0, endAngle: 0 }, d);\n        return (t) => arc(interpolate(t));\n      });\n  }\n\n  getLabel(d) {\n    // Custom method to return a label from the joined pie data\n    return \"\";\n  }\n\n  set display(value) {\n    this.gDisplay.text(value);\n  }\n\n  enlarge(z) {\n    this.slices\n      .selectAll(\"path\")\n      .filter((d) => d.data.z === z)\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"d\", this.arcEnlarge);\n  }\n\n  reset() {\n    this.slices\n      .selectAll(\"path\")\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"d\", this.arc);\n  }\n\n  noHighlight() {\n    this.slices\n      .selectAll(\"g\")\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"opacity\", 1.0);\n  }\n\n  highlight(z) {\n    this.slices\n      .selectAll(\"g\")\n      .transition()\n      .duration(this.config.DURATION_MS)\n      .attr(\"opacity\", (d) =>\n        d.data.z === z ? 1.0 : this.config.BACKGROUND_OPACITY,\n      );\n  }\n\n  onEvent(enter, move, leave) {\n    const pointerenter = (evt, d) => {\n      if (enter) {\n        enter.call(this, d.data, evt);\n      }\n    };\n\n    const pointermove = (evt, d) => {\n      // Touch events keep the target where the touch event started\n      let target = evt.target;\n\n      if (evt.touches) {\n        evt.preventDefault(); // Prevent scroll on touch devices\n        evt = evt.touches[0];\n        // Get the element at the current touch event\n        target = document.elementFromPoint(evt.clientX, evt.clientY);\n        // If the target element doesn't have a parent or data, exit early\n        // This likely means it is a non-slice element\n        // TODO Trigger a pointerleave?\n        if (!target || !target.parentNode) return;\n        d = d3.select(target).datum();\n        if (!d || !d.data) return;\n      }\n\n      // TODO Why doesn't pageXY work with the rectangle?\n      const rect = target.getBoundingClientRect();\n      const [px, py] = d3.pointer(evt, null);\n\n      // TODO Return the centroid?\n\n      const data = {\n        x: d.data.x,\n        y: d.data.y,\n        z: d.data.z,\n        // Slice page coordinates\n        dx: rect.x + window.scrollX,\n        dy: rect.y + window.scrollY,\n        // Pointer page coordinates\n        px: px,\n        py: py,\n      };\n\n      if (move) {\n        move.call(this, data, evt);\n      }\n    };\n\n    const pointerleave = (evt, d) => {\n      if (leave) {\n        leave.call(this, d.data, evt);\n      }\n    };\n\n    this.slices\n      .selectAll(\"path\")\n      .on(\"mouseenter\", pointerenter)\n      .on(\"mousemove\", throttle(pointermove, 20.83))\n      .on(\"mouseleave\", pointerleave)\n      .on(\"touchstart\", pointerenter, { passive: false })\n      .on(\"touchmove\", throttle(pointermove, 20.83), { passive: false })\n      .on(\"touchend\", pointerleave, { passive: false });\n  }\n}\n\nexport function Donut(data, parser) {\n  return new PieChart(data, parser);\n}\n\nexport function Pie(data, parser) {\n  return new PieChart(data, parser).radii(0, 0.8).hoverRadii(0, 0.9);\n}\n\nexport function Gauge(data, parser) {\n  return new PieChart(data, parser)\n    .angles(-Math.PI * 0.65, Math.PI * 0.65)\n    .radii(0.5, 0.8)\n    .hoverRadii(0.55, 0.9);\n}\n", "import * as d3 from \"d3\";\n\nimport { quantizeScheme } from \"./colors\";\n\nexport class Chart {\n  // Base class for charts\n  // Currently only has some common chained config methods for layout and animation\n\n  constructor(data, parser = (d) => d) {}\n\n  /* Config chained methods */\n  screenHeightPercent(value) {\n    this.config.LAYOUT.screenHeightPercent = value;\n    return this;\n  }\n\n  minHeight(value) {\n    this.config.LAYOUT.minHeight = value;\n    return this;\n  }\n\n  maxHeight(value) {\n    this.config.LAYOUT.maxHeight = value;\n    return this;\n  }\n\n  height(value) {\n    return this.minHeight(value).maxHeight(value);\n  }\n\n  minWidth(value) {\n    this.config.LAYOUT.minWidth = value;\n    return this;\n  }\n\n  maxWidth(value) {\n    this.config.LAYOUT.maxWidth = value;\n    return this;\n  }\n\n  width(value) {\n    return this.minWidth(value).maxWidth(value);\n  }\n\n  animationDuration(value) {\n    this.config.DURATION_MS = value;\n    return this;\n  }\n\n  noAnimation() {\n    return this.animationDuration(0);\n  }\n\n  node() {\n    // Return the chart svg node. Return null if the chart hasn't been rendered.\n    return this.svg ? this.svg.node() : null;\n  }\n}\n\nexport class CategoricalChart extends Chart {\n  // Adds additional chained config methods for schemes and hidden state\n\n  constructor(data, parser = (d) => d) {\n    // Items can be dynamically hidden from the chart\n    super(data, parser);\n    this.hidden = new d3.InternSet();\n  }\n\n  /* Chained config methods */\n  backgroundOpacity(value) {\n    this.config.BACKGROUND_OPACITY = value;\n    return this;\n  }\n\n  yAxisRight() {\n    // The y axis ticks and labels will be shown on the right of the chart\n    this.config.Y_AXIS_RIGHT = true;\n    return this;\n  }\n\n  useDiscreteScheme(scheme) {\n    this.colors = d3.scaleOrdinal().domain(this.Z).range(scheme);\n    return this;\n  }\n\n  useContinuousScheme(scheme, min = 0.0, max = 1.0) {\n    return this.useDiscreteScheme(\n      quantizeScheme(this.Z.length, scheme, min, max),\n    );\n  }\n\n  invertScheme() {\n    this.colors = this.colors.range(this.colors.range().reverse());\n    return this;\n  }\n\n  startHidden() {\n    // The first render will have all items hidden\n    this.hidden = new d3.InternSet(this.Z);\n    return this;\n  }\n  /* End chained config methods */\n\n  hide(...z) {\n    // Add the given z elements to the hidden set\n    this.hidden = this.hidden.union(new d3.InternSet(z));\n    this.toggle();\n  }\n\n  show(...z) {\n    // Remove the given z elements from the hidden set\n    this.hidden = this.hidden.difference(new d3.InternSet(z));\n    this.toggle();\n  }\n\n  setHidden(...z) {\n    this.hidden = new d3.InternSet(z);\n  }\n\n  hideAll() {\n    this.hidden = new d3.InternSet(this.Z);\n    this.toggle();\n  }\n\n  showAll() {\n    this.hidden.clear();\n    this.toggle();\n  }\n\n  showOnly(...z) {\n    // Show only the given z elements, all others will be hidden\n    this.hidden = new d3.InternSet(this.Z).difference(new d3.InternSet(z));\n    this.toggle();\n  }\n}\n", "import * as d3 from \"d3\";\n\nexport function quantizeScheme(n, scheme, min = 0.0, max = 1.0) {\n  if (n === 1) {\n    // If there is only one item, just use the middle of the scheme\n    return [scheme((max - min) / 2.0 + min)];\n  }\n  return d3.quantize((t) => scheme(t * (max - min) + min), n);\n}\n", "import * as d3 from \"d3\";\n\n/*\nMost of the layout operations are placing a rectangle within another rectangle.\nWhat is the most generic way to do this?\n*/\n\nexport class Pad {\n  constructor(top, right, bottom, left) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n}\n\nexport function EqualPad(value) {\n  return new Pad(value, value, value, value);\n}\n\nexport function DefaultPad() {\n  return new Pad(15, 15, 25, 25);\n}\n\nexport class Layout {\n  constructor(width, height, pad) {\n    this.width = width;\n    this.height = height;\n    this.pad = pad || DefaultPad();\n  }\n\n  get rangeX() {\n    return [this.pad.left, this.width - this.pad.right];\n  }\n\n  get rangeY() {\n    return [this.height - this.pad.bottom, this.pad.top];\n  }\n\n  get innerWidth() {\n    return this.width - this.pad.left - this.pad.right;\n  }\n\n  get innerHeight() {\n    return this.height - this.pad.top - this.pad.bottom;\n  }\n\n  get innerMinimum() {\n    return d3.min([this.innerWidth, this.innerHeight]);\n  }\n\n  get midpoint() {\n    return [this.width / 2, this.height / 2];\n  }\n}\n\nexport function getLayout(\n  elem,\n  {\n    minWidth = 400,\n    maxWidth = undefined,\n    minHeight = 300,\n    maxHeight = undefined,\n    screenHeightPercent = 0.5,\n  } = {},\n) {\n  const chart = document.querySelector(elem);\n  let width = d3.max([chart.offsetWidth, minWidth]);\n  if (maxWidth) {\n    width = d3.min([width, maxWidth]);\n  }\n\n  let height = window.innerHeight * screenHeightPercent;\n  height = d3.max([height, minHeight]);\n  if (maxHeight) {\n    height = d3.min([height, maxHeight]);\n  }\n  return new Layout(width, height, DefaultPad());\n}\n\nexport function maxTickWidth(defaults, height, domain, format, options) {\n  // Create a fake axis to test label tick size\n  const hidden = d3\n    .select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", 100)\n    .attr(\"height\", height)\n    .style(\"visibility\", \"hidden\"); // \"display: none\" does not work\n\n  let scale = d3\n    .scaleLinear()\n    .domain(domain)\n    .range([height - defaults.bottom, defaults.top]);\n\n  let axis = d3\n    .axisLeft(scale)\n    .tickFormat(format) // Can be null\n    .tickSize(0)\n    .ticks(8); // TODO Number of ticks as an option\n\n  const g = hidden.append(\"g\").style(\"font-size\", options.FONT_SIZE).call(axis);\n\n  // Measure the tick labels\n  const labels = g.selectAll(\".tick text\");\n\n  let width = 0;\n  labels.each(function () {\n    const bbox = this.getBoundingClientRect(); // TODO Or getBBox?\n    if (bbox.width > width) {\n      width = bbox.width;\n    }\n  });\n\n  // Remove the axis\n  hidden.remove();\n\n  // Pad\n  return width + options.X_TICK_GUTTER + 5;\n}\n\nexport function appendSVG(selector, width, height) {\n  // Append an SVG element to the selected element\n  return d3\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"viewBox\", `0 0 ${width} ${height}`)\n    .attr(\"style\", \"max-width: 100%; height: intrinsic;\")\n    .style(\"-webkit-tap-highlight-color\", \"transparent\")\n    .style(\"overflow\", \"visible\");\n}\n\nexport function layoutSVG(selector, options) {\n  // Return the SVG elements and its layout\n  // Available options:\n  // * screenHeightPercent\n  // * minWidth\n  // * maxWidth\n  // * minHeight\n  // * maxHeight\n  const elem = d3.select(selector);\n  if (!elem.node()) {\n    throw new Error(`Unable to find a DOM element for selector '${selector}'`);\n  }\n\n  if (elem.node().tagName === \"svg\") {\n    const svg = elem;\n    const width = +svg.attr(\"width\");\n    const height = +svg.attr(\"height\");\n    // TODO Fallback to viewbox\n    if (width && height) {\n      return [svg, new Layout(width, height)];\n    } else {\n      // TODO SVGs must have a width or height or the defaults will be returned\n      const layout = getLayout(selector, options);\n      return [svg, layout];\n    }\n  }\n\n  const layout = getLayout(selector, options);\n  const svg = appendSVG(selector, layout.width, layout.height);\n  return [svg, layout];\n}\n", "import * as d3 from \"d3\";\n\nexport function parseArrayOHLCV(d) {\n  return {\n    x: d3.isoParse(d[0]),\n    o: d[1],\n    h: d[2],\n    l: d[3],\n    c: d[4],\n    v: d[5],\n  };\n}\n\nexport function parseVerboseOHLCV(d) {\n  return {\n    x: d3.isoParse(d.date),\n    o: d.open,\n    h: d.high,\n    l: d.low,\n    c: d.close,\n    v: d.volume,\n  };\n}\n\nexport function parse3dArray(d) {\n  return {\n    x: d[0],\n    y: d[1],\n    z: d[2],\n  };\n}\n\nexport function parseTimeSeries3dArray(d) {\n  return {\n    x: d3.isoParse(d[0]),\n    y: d[1],\n    z: d[2],\n  };\n}\n\nexport function parseTimeSeries2dArray(d) {\n  // No z axis\n  return {\n    x: d3.isoParse(d[0]),\n    y: d[1],\n    z: \"\",\n  };\n}\n\nexport function parseArrayYZ(d) {\n  // For data without an x-axis\n  return {\n    x: null,\n    y: d[0],\n    z: d[1],\n  };\n}\n", "export function throttle(fn, timeout) {\n  var free = true;\n  return function () {\n    if (free) {\n      fn.apply(this, arguments);\n      free = false;\n      setTimeout(() => {\n        free = true;\n      }, timeout);\n    }\n  };\n}\n", "export function placeTooltip(container, tooltip, dx, dy, padding = 5) {\n  // Returns x and y page coordinates and text-align that will optimally place the\n  // tooltip in the container. The container and tooltip must be DOM elements with\n  // offset properties. The dx and dy should be page x and y of the event.\n  const bbox = container.getBoundingClientRect();\n  const px = dx - bbox.left - window.scrollX;\n  const py = dy - bbox.top - window.scrollY;\n\n  let x = padding;\n  let y = -tooltip.offsetHeight - padding;\n  let align = \"left\";\n\n  // TODO Limit to half the container?\n  if (px > bbox.width - tooltip.offsetWidth - padding) {\n    // Right side of container\n    x = -tooltip.offsetWidth - padding;\n    align = \"right\";\n  }\n\n  if (py < tooltip.offsetHeight + padding) {\n    // Top of the container\n    y = padding;\n  }\n\n  return [dx + x, dy + y, align];\n}\n\nexport function placeTooltipTop(container, tooltip, dx, dy, padding = 5) {\n  // Similar to placeTooltip, but always places the tooltip above the dx, dy\n  const bbox = container.getBoundingClientRect();\n  const px = dx - bbox.left - window.scrollX;\n\n  let x = padding;\n  let y = -tooltip.offsetHeight - padding;\n  let align = \"left\";\n\n  // TODO Limit to half the container?\n  if (px > bbox.width - tooltip.offsetWidth - padding) {\n    // Right side of container\n    x = -tooltip.offsetWidth - padding;\n    align = \"right\";\n  }\n\n  return [dx + x, dy + y, align];\n}\n\nexport function pageXY(node) {\n  // Get the page x and y of the given node\n  const svg = node.ownerSVGElement || node;\n  if (svg.createSVGPoint) {\n    let point = svg.createSVGPoint();\n    point = point.matrixTransform(node.getScreenCTM());\n    return [point.x + +window.scrollX, point.y + +window.scrollY];\n  }\n  if (node.getBoundingClientRect) {\n    // Calculate the page coordinates by adding the scroll offsets\n    const rect = node.getBoundingClientRect();\n    return [rect.left + window.scrollX, rect.top + window.scrollY];\n  }\n  return [undefined, undefined];\n}\n"],
  "mappings": "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",
  "names": ["require_d3", "__commonJSMin", "exports", "module", "pie_exports", "__export", "Donut", "Gauge", "Pie", "PieChart", "parse3dArray", "parseArrayYZ", "parseTimeSeries3dArray", "placeTooltip", "placeTooltipTop", "d3", "d3", "d3", "quantizeScheme", "n", "scheme", "min", "max", "t", "Chart", "data", "parser", "d", "value", "CategoricalChart", "scheme", "min", "max", "quantizeScheme", "z", "d3", "Pad", "top", "right", "bottom", "left", "DefaultPad", "Pad", "Layout", "width", "height", "pad", "getLayout", "elem", "minWidth", "maxWidth", "minHeight", "maxHeight", "screenHeightPercent", "chart", "appendSVG", "selector", "width", "height", "layoutSVG", "options", "elem", "svg", "Layout", "layout", "getLayout", "d3", "parse3dArray", "d", "parseTimeSeries3dArray", "parseArrayYZ", "d", "throttle", "fn", "timeout", "free", "placeTooltip", "container", "tooltip", "dx", "dy", "padding", "bbox", "px", "py", "x", "y", "align", "placeTooltipTop", "PieChart", "CategoricalChart", "data", "parser", "d", "inner", "outer", "start", "end", "selector", "layoutSVG", "latest", "midX", "midY", "x", "items", "arcs", "path", "arc", "interpolate", "t", "value", "z", "enter", "move", "leave", "pointerenter", "evt", "pointermove", "target", "rect", "px", "py", "pointerleave", "throttle", "Donut", "Pie", "Gauge"]
}
